{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0","program":"/home/pc2/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sfml","--edition=2018","/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"audio\"","--cfg","feature=\"bitflags\"","--cfg","feature=\"csfml-audio-sys\"","--cfg","feature=\"csfml-graphics-sys\"","--cfg","feature=\"csfml-window-sys\"","--cfg","feature=\"default\"","--cfg","feature=\"graphics\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"widestring\"","--cfg","feature=\"window\"","-C","metadata=38bb5a2fc8d92203","-C","extra-filename=-38bb5a2fc8d92203","--out-dir","/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps","-L","dependency=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps","--extern","bitflags=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libbitflags-d5435ff0cbbc4090.rmeta","--extern","csfml_audio_sys=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libcsfml_audio_sys-a6d4f83478931cc7.rmeta","--extern","csfml_graphics_sys=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libcsfml_graphics_sys-00e5cf2d20e18660.rmeta","--extern","csfml_system_sys=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libcsfml_system_sys-2c8d1ccfd719a9c2.rmeta","--extern","csfml_window_sys=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libcsfml_window_sys-6a2b62bdb7389f92.rmeta","--extern","once_cell=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libonce_cell-84b5b47e5404586f.rmeta","--extern","widestring=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libwidestring-413bf151a0fd21e4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pc2/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libsfml-38bb5a2fc8d92203.rmeta"},"prelude":{"crate_id":{"name":"sfml","disambiguator":[1869533984545788582,0]},"crate_root":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src","external_crates":[{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/inputstream.rs","num":20,"id":{"name":"csfml_system_sys","disambiguator":[8806952568447461803,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","num":21,"id":{"name":"csfml_audio_sys","disambiguator":[11191917525158585865,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","num":22,"id":{"name":"csfml_graphics_sys","disambiguator":[17673441347504372372,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","num":23,"id":{"name":"csfml_window_sys","disambiguator":[6778166462402157370,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","num":24,"id":{"name":"widestring","disambiguator":[13887749936414837523,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/thread_safety.rs","num":25,"id":{"name":"once_cell","disambiguator":[1725345041460281935,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text_style.rs","num":26,"id":{"name":"bitflags","disambiguator":[15852493003383756076,0]}}],"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":0,"byte_end":1801,"line_start":1,"line_end":63,"column_start":1,"column_end":37}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3370},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4371,"byte_end":4390,"line_start":5,"line_end":5,"column_start":25,"column_end":44},"alias_span":null,"name":"SoundBufferRecorder","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4392,"byte_end":4405,"line_start":5,"line_end":5,"column_start":46,"column_end":59},"alias_span":null,"name":"SoundRecorder","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3361},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4407,"byte_end":4426,"line_start":5,"line_end":5,"column_start":61,"column_end":80},"alias_span":null,"name":"SoundRecorderDriver","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3381},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4456,"byte_end":4461,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"alias_span":null,"name":"Music","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3385},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4474,"byte_end":4479,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"alias_span":null,"name":"Sound","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3392},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4499,"byte_end":4510,"line_start":9,"line_end":9,"column_start":19,"column_end":30},"alias_span":null,"name":"SoundBuffer","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4530,"byte_end":4541,"line_start":10,"line_end":10,"column_start":19,"column_end":30},"alias_span":null,"name":"SoundSource","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3397},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4561,"byte_end":4572,"line_start":11,"line_end":11,"column_start":19,"column_end":30},"alias_span":null,"name":"SoundStatus","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3398},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4561,"byte_end":4572,"line_start":11,"line_end":11,"column_start":19,"column_end":30},"alias_span":null,"name":"SoundStatus","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":447},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4593,"byte_end":4604,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"alias_span":null,"name":"SoundStream","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3416},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4606,"byte_end":4623,"line_start":12,"line_end":12,"column_start":33,"column_end":50},"alias_span":null,"name":"SoundStreamPlayer","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3425},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4641,"byte_end":4649,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"alias_span":null,"name":"TimeSpan","value":"","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64160,"byte_end":64169,"line_start":4,"line_end":4,"column_start":27,"column_end":36},"alias_span":null,"name":"BlendMode","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3506},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64205,"byte_end":64216,"line_start":6,"line_end":6,"column_start":19,"column_end":30},"alias_span":null,"name":"CircleShape","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3513},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64229,"byte_end":64234,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3514},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64229,"byte_end":64234,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3528},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64255,"byte_end":64266,"line_start":8,"line_end":8,"column_start":20,"column_end":31},"alias_span":null,"name":"ConvexShape","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64268,"byte_end":64285,"line_start":8,"line_end":8,"column_start":33,"column_end":50},"alias_span":null,"name":"ConvexShapePoints","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3540},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64307,"byte_end":64318,"line_start":9,"line_end":9,"column_start":20,"column_end":31},"alias_span":null,"name":"CustomShape","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":999},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64320,"byte_end":64337,"line_start":9,"line_end":9,"column_start":33,"column_end":50},"alias_span":null,"name":"CustomShapePoints","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64354,"byte_end":64362,"line_start":10,"line_end":10,"column_start":15,"column_end":23},"alias_span":null,"name":"Drawable","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3548},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64375,"byte_end":64379,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"alias_span":null,"name":"Font","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3553},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64381,"byte_end":64385,"line_start":11,"line_end":11,"column_start":18,"column_end":22},"alias_span":null,"name":"FontInfo","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3607},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64411,"byte_end":64416,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"alias_span":null,"name":"Glyph","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3608},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64411,"byte_end":64416,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"alias_span":null,"name":"Glyph","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3615},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64429,"byte_end":64434,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"alias_span":null,"name":"Image","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3619},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64456,"byte_end":64469,"line_start":14,"line_end":14,"column_start":21,"column_end":34},"alias_span":null,"name":"PrimitiveType","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3620},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64456,"byte_end":64469,"line_start":14,"line_end":14,"column_start":21,"column_end":34},"alias_span":null,"name":"PrimitiveType","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":1296},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64482,"byte_end":64491,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"alias_span":null,"name":"FloatRect","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":1295},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64493,"byte_end":64500,"line_start":15,"line_end":15,"column_start":23,"column_end":30},"alias_span":null,"name":"IntRect","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3637},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64502,"byte_end":64506,"line_start":15,"line_end":15,"column_start":32,"column_end":36},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3671},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64530,"byte_end":64544,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"alias_span":null,"name":"RectangleShape","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3678},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64565,"byte_end":64577,"line_start":17,"line_end":17,"column_start":20,"column_end":32},"alias_span":null,"name":"RenderStates","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":1535},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64598,"byte_end":64610,"line_start":18,"line_end":18,"column_start":20,"column_end":32},"alias_span":null,"name":"RenderTarget","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3699},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64632,"byte_end":64645,"line_start":19,"line_end":19,"column_start":21,"column_end":34},"alias_span":null,"name":"RenderTexture","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3703},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64666,"byte_end":64678,"line_start":20,"line_end":20,"column_start":20,"column_end":32},"alias_span":null,"name":"RenderWindow","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3707},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64692,"byte_end":64698,"line_start":21,"line_end":21,"column_start":13,"column_end":19},"alias_span":null,"name":"Shader","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":1933},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64711,"byte_end":64716,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3714},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64730,"byte_end":64736,"line_start":23,"line_end":23,"column_start":13,"column_end":19},"alias_span":null,"name":"Sprite","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3721},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64748,"byte_end":64752,"line_start":24,"line_end":24,"column_start":11,"column_end":15},"alias_span":null,"name":"Text","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3728},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64770,"byte_end":64779,"line_start":25,"line_end":25,"column_start":17,"column_end":26},"alias_span":null,"name":"TextStyle","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3830},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64794,"byte_end":64801,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"alias_span":null,"name":"Texture","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3835},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64818,"byte_end":64827,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"alias_span":null,"name":"Transform","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3836},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64818,"byte_end":64827,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"alias_span":null,"name":"Transform","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":2285},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64848,"byte_end":64861,"line_start":28,"line_end":28,"column_start":20,"column_end":33},"alias_span":null,"name":"Transformable","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64875,"byte_end":64881,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"alias_span":null,"name":"Vertex","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3852},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64902,"byte_end":64913,"line_start":30,"line_end":30,"column_start":20,"column_end":31},"alias_span":null,"name":"VertexArray","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3856},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64915,"byte_end":64923,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"alias_span":null,"name":"Vertices","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3881},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64946,"byte_end":64958,"line_start":31,"line_end":31,"column_start":21,"column_end":33},"alias_span":null,"name":"VertexBuffer","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3863},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64960,"byte_end":64977,"line_start":31,"line_end":31,"column_start":35,"column_end":52},"alias_span":null,"name":"VertexBufferUsage","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3864},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64960,"byte_end":64977,"line_start":31,"line_end":31,"column_start":35,"column_end":52},"alias_span":null,"name":"VertexBufferUsage","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3885},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64990,"byte_end":64994,"line_start":32,"line_end":32,"column_start":11,"column_end":15},"alias_span":null,"name":"View","value":"","parent":{"krate":0,"index":505}},{"kind":"Use","ref_id":{"krate":0,"index":3902},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278601,"byte_end":278606,"line_start":7,"line_end":7,"column_start":24,"column_end":29},"alias_span":null,"name":"SfStr","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":2613},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278608,"byte_end":278617,"line_start":7,"line_end":7,"column_start":31,"column_end":40},"alias_span":null,"name":"SfStrConv","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":3897},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278647,"byte_end":278652,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"alias_span":null,"name":"Clock","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":2599},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278665,"byte_end":278670,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":3907},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278682,"byte_end":278686,"line_start":11,"line_end":11,"column_start":11,"column_end":15},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":3915},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278702,"byte_end":278709,"line_start":12,"line_end":12,"column_start":15,"column_end":22},"alias_span":null,"name":"Vector2","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":2765},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278711,"byte_end":278719,"line_start":12,"line_end":12,"column_start":24,"column_end":32},"alias_span":null,"name":"Vector2f","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":2763},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278721,"byte_end":278729,"line_start":12,"line_end":12,"column_start":34,"column_end":42},"alias_span":null,"name":"Vector2i","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":2764},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278731,"byte_end":278739,"line_start":12,"line_end":12,"column_start":44,"column_end":52},"alias_span":null,"name":"Vector2u","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":3999},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278756,"byte_end":278763,"line_start":13,"line_end":13,"column_start":15,"column_end":22},"alias_span":null,"name":"Vector3","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":2846},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278765,"byte_end":278773,"line_start":13,"line_end":13,"column_start":24,"column_end":32},"alias_span":null,"name":"Vector3f","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":2847},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278775,"byte_end":278783,"line_start":13,"line_end":13,"column_start":34,"column_end":42},"alias_span":null,"name":"Vector3i","value":"","parent":{"krate":0,"index":2537}},{"kind":"Use","ref_id":{"krate":0,"index":4076},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300278,"byte_end":300285,"line_start":4,"line_end":4,"column_start":14,"column_end":21},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4081},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300309,"byte_end":300324,"line_start":5,"line_end":5,"column_start":23,"column_end":38},"alias_span":null,"name":"ContextSettings","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4082},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300309,"byte_end":300324,"line_start":5,"line_end":5,"column_start":23,"column_end":38},"alias_span":null,"name":"ContextSettings","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4100},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300339,"byte_end":300345,"line_start":6,"line_end":6,"column_start":14,"column_end":20},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4105},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300347,"byte_end":300351,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"alias_span":null,"name":"CursorType","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4150},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300379,"byte_end":300384,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":3178},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300401,"byte_end":300429,"line_start":8,"line_end":8,"column_start":16,"column_end":44},"alias_span":null,"name":"set_virtual_keyboard_visible","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4262},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300431,"byte_end":300434,"line_start":8,"line_end":8,"column_start":46,"column_end":49},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4263},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300431,"byte_end":300434,"line_start":8,"line_end":8,"column_start":46,"column_end":49},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4342},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300448,"byte_end":300453,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"alias_span":null,"name":"Style","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4454},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300471,"byte_end":300480,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"alias_span":null,"name":"VideoMode","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":3315},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300495,"byte_end":300501,"line_start":11,"line_end":11,"column_start":14,"column_end":20},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":4474},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300503,"byte_end":300509,"line_start":11,"line_end":11,"column_start":22,"column_end":28},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":2887}},{"kind":"Use","ref_id":{"krate":0,"index":3890},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1782,"byte_end":1787,"line_start":63,"line_end":63,"column_start":18,"column_end":23},"alias_span":null,"name":"SfBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3891},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1782,"byte_end":1787,"line_start":63,"line_end":63,"column_start":18,"column_end":23},"alias_span":null,"name":"SfBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2529},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1789,"byte_end":1799,"line_start":63,"line_end":63,"column_start":25,"column_end":35},"alias_span":null,"name":"SfResource","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":0,"byte_end":1801,"line_start":1,"line_end":63,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":45},{"krate":0,"index":62},{"krate":0,"index":505},{"krate":0,"index":2489},{"krate":0,"index":2537},{"krate":0,"index":2887},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3358}],"decl_id":null,"docs":" Rust bindings for [SFML](http://www.sfml-dev.org), the Simple and Fast Multimedia Library.","sig":null,"attributes":[{"value":"/ Rust bindings for [SFML](http://www.sfml-dev.org), the Simple and Fast Multimedia Library.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":0,"byte_end":94,"line_start":1,"line_end":1,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":95,"byte_end":98,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Prerequisites","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":99,"byte_end":116,"line_start":3,"line_end":3,"column_start":1,"column_end":18}},{"value":"/ =============","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":117,"byte_end":134,"line_start":4,"line_end":4,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":135,"byte_end":138,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - Rust 1.42 or later","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":139,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":164,"byte_end":167,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - SFML 2.5 and CSFML 2.5 must be installed on your computer. You can download them here:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":168,"byte_end":260,"line_start":8,"line_end":8,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":261,"byte_end":264,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/     - SFML 2.5: <http://www.sfml-dev.org/download.php>","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":265,"byte_end":323,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/     - CSFML 2.5: <http://www.sfml-dev.org/download/csfml/>","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":324,"byte_end":386,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":387,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - Supported platforms:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":391,"byte_end":417,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/     - Linux","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":418,"byte_end":433,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/     - Windows","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":434,"byte_end":451,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/     - Mac OS X","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":452,"byte_end":470,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":471,"byte_end":474,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # !! Thread safety warning !!","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":475,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":509,"byte_end":512,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ rust-sfml strives to be memory-safe, as a Rust library should be, but currently there is no","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":513,"byte_end":608,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/ clear plan on how to solve thread-safety issues. You should be fine as long as you only use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":609,"byte_end":704,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ SFML on the main thread, but as soon as you try to call into SFML from another thread, you","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":705,"byte_end":799,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/ are on your own.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":800,"byte_end":820,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":821,"byte_end":824,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # License","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":825,"byte_end":838,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":839,"byte_end":842,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This software is a binding of the SFML library created by Laurent Gomila, which","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":843,"byte_end":926,"line_start":27,"line_end":27,"column_start":1,"column_end":84}},{"value":"/ is provided under the Zlib/png license.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":927,"byte_end":970,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":971,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This software is provided under the same license than the SFML, the Zlib/png","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":975,"byte_end":1055,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ license.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1056,"byte_end":1068,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1069,"byte_end":1072,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, trivial_numeric_casts, missing_copy_implementations,\n       missing_debug_implementations, unused_results, trivial_casts, clippy ::\n       must_use_candidate, clippy :: doc_markdown, clippy ::\n       cast_possible_truncation, clippy :: mut_mut, clippy ::\n       cast_possible_wrap, clippy :: cast_sign_loss)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1074,"byte_end":1414,"line_start":34,"line_end":47,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"audio","qualname":"::audio","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":173},{"krate":0,"index":190},{"krate":0,"index":266},{"krate":0,"index":335},{"krate":0,"index":393},{"krate":0,"index":411},{"krate":0,"index":419},{"krate":0,"index":495}],"decl_id":null,"docs":" Sounds, streaming (musics or custom sources), recording, spatialization","sig":null,"attributes":[{"value":"cfg(feature = \"audio\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1504,"byte_end":1529,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/ Sounds, streaming (musics or custom sources), recording, spatialization","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4251,"byte_end":4326,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4327,"byte_end":4330,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":99},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"capture","qualname":"::audio::capture","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":3361},{"krate":0,"index":3366},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":154},{"krate":0,"index":3370},{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3380},{"krate":0,"index":158},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"decl_id":null,"docs":" Types and helper functions dealing with audio capture.\n","sig":null,"attributes":[{"value":"/ Types and helper functions dealing with audio capture.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4655,"byte_end":4713,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7828,"byte_end":7841,"line_start":60,"line_end":60,"column_start":11,"column_end":24},"name":"SoundRecorder","qualname":"::audio::capture::SoundRecorder","value":"SoundRecorder","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" Trait for processing captured sound data.","sig":null,"attributes":[{"value":"/ Trait for processing captured sound data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5065,"byte_end":5110,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5111,"byte_end":5114,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `SoundRecorder` provides a simple interface to access the audio recording capabilities","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5115,"byte_end":5205,"line_start":11,"line_end":11,"column_start":1,"column_end":91}},{"value":"/ of the computer (the microphone).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5206,"byte_end":5243,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5244,"byte_end":5247,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ As a trait, it only cares about capturing sound samples,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5248,"byte_end":5308,"line_start":14,"line_end":14,"column_start":1,"column_end":61}},{"value":"/ the task of making something useful with them is left to the implementer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5309,"byte_end":5386,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ Note that SFML provides a built-in implementation for saving the captured data to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5387,"byte_end":5472,"line_start":16,"line_end":16,"column_start":1,"column_end":86}},{"value":"/ a sound buffer (see [`SoundBufferRecorder`]).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5473,"byte_end":5522,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5523,"byte_end":5526,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only one method is required to be implemented.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5527,"byte_end":5577,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5578,"byte_end":5581,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`on_process_samples`] provides the new chunks of audio samples while the capture happens","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5582,"byte_end":5675,"line_start":21,"line_end":21,"column_start":1,"column_end":94}},{"value":"/ Moreover, two additional methods can be overridden as well if necessary:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5676,"byte_end":5752,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5753,"byte_end":5756,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`on_start`] is called before the capture happens, to perform custom initializations.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5757,"byte_end":5846,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5847,"byte_end":5850,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`on_stop`] is called after the capture ends, to perform custom cleanup.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5851,"byte_end":5927,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5928,"byte_end":5931,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ You can also control the frequency of the [`on_process_samples`] calls,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":5932,"byte_end":6007,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ with [`SoundRecorderDriver::set_processing_interval`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6008,"byte_end":6066,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ The default interval is chosen so that recording thread doesn't consume too much CPU,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6067,"byte_end":6156,"line_start":30,"line_end":30,"column_start":1,"column_end":90}},{"value":"/ but it can be changed to a smaller value if you need to process the recorded data in real time,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6157,"byte_end":6256,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/ for example.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6257,"byte_end":6273,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6274,"byte_end":6277,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The audio capture feature may not be supported or activated on every platform,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6278,"byte_end":6360,"line_start":34,"line_end":34,"column_start":1,"column_end":83}},{"value":"/ thus it is recommended to check its availability with the [`is_available`] function.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6361,"byte_end":6449,"line_start":35,"line_end":35,"column_start":1,"column_end":89}},{"value":"/ If it returns `false`, then any attempt to use an audio recorder will fail.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6450,"byte_end":6529,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6530,"byte_end":6533,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If you have multiple sound input devices connected to your computer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6534,"byte_end":6605,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ (for example: microphone, external soundcard, webcam mic, ...)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6606,"byte_end":6672,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/ you can get a list of all available devices through the [`available_devices`] function.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6673,"byte_end":6764,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"/ You can then select a device by calling [`SoundRecorderDriver::set_device`] with the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6765,"byte_end":6853,"line_start":41,"line_end":41,"column_start":1,"column_end":89}},{"value":"/ appropriate device. Otherwise the default capturing device will be used.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6854,"byte_end":6930,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6931,"byte_end":6934,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ By default the recording is in 16-bit mono.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6935,"byte_end":6982,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ Using the [`SoundRecorderDriver::set_channel_count`] method you can change the number of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":6983,"byte_end":7075,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/ channels used by the audio capture device to record.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7076,"byte_end":7132,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"/ Note that you have to decide whether you want to record in mono or stereo before","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7133,"byte_end":7217,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/ starting the recording.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7218,"byte_end":7245,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7246,"byte_end":7249,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ It is important to note that the audio capture happens in a separate thread,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7250,"byte_end":7330,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ so that it doesn't block the rest of the program. In particular,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7331,"byte_end":7399,"line_start":51,"line_end":51,"column_start":1,"column_end":69}},{"value":"/ the [`on_process_samples`] function (but not [`on_start`] and not [`on_stop`])","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7400,"byte_end":7482,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ will be called from this separate thread.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7483,"byte_end":7528,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/ It is important to keep this in mind, because you may have to take care of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7529,"byte_end":7607,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ synchronization issues if you share data between threads.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7608,"byte_end":7669,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7670,"byte_end":7673,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`on_start`]: SoundRecorder::on_start","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7674,"byte_end":7715,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ [`on_stop`]: SoundRecorder::on_stop","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7716,"byte_end":7755,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/ [`on_process_samples`]: SoundRecorder::on_process_samples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7756,"byte_end":7817,"line_start":59,"line_end":59,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8184,"byte_end":8192,"line_start":68,"line_end":68,"column_start":8,"column_end":16},"name":"on_start","qualname":"::audio::capture::SoundRecorder::on_start","value":"pub fn on_start(&mut Self) -> bool","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Start capturing audio data.","sig":null,"attributes":[{"value":"/ Start capturing audio data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7848,"byte_end":7879,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7884,"byte_end":7887,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method may be overridden by an implementer if something has","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7892,"byte_end":7960,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ to be done every time a new capture starts.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":7965,"byte_end":8012,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ If not, this function can be ignored; the default implementation does nothing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8017,"byte_end":8099,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8104,"byte_end":8107,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Returns `true` to start the capture, or `false` to abort it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8112,"byte_end":8176,"line_start":67,"line_end":67,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8591,"byte_end":8609,"line_start":78,"line_end":78,"column_start":8,"column_end":26},"name":"on_process_samples","qualname":"::audio::capture::SoundRecorder::on_process_samples","value":"pub fn on_process_samples(&mut Self, &[i16]) -> bool","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Process a new chunk of recorded samples.","sig":null,"attributes":[{"value":"/ Process a new chunk of recorded samples.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8237,"byte_end":8281,"line_start":71,"line_end":71,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8286,"byte_end":8289,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This method is called every time a new chunk of recorded data is available.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8294,"byte_end":8373,"line_start":73,"line_end":73,"column_start":5,"column_end":84}},{"value":"/ The implementer can then do whatever it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8378,"byte_end":8421,"line_start":74,"line_end":74,"column_start":5,"column_end":48}},{"value":"/ wants with it (storing it, playing it, sending it over the network, etc.).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8426,"byte_end":8504,"line_start":75,"line_end":75,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8509,"byte_end":8512,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Returns `true` to continue the capture, or `false` to stop it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8517,"byte_end":8583,"line_start":77,"line_end":77,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8905,"byte_end":8912,"line_start":84,"line_end":84,"column_start":8,"column_end":15},"name":"on_stop","qualname":"::audio::capture::SoundRecorder::on_stop","value":"pub fn on_stop(&mut Self)","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Stop capturing audio data.","sig":null,"attributes":[{"value":"/ Stop capturing audio data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8651,"byte_end":8681,"line_start":79,"line_end":79,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8686,"byte_end":8689,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This method may be overridden by an implementer if something has","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8694,"byte_end":8762,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ to be done every time the capture ends.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8767,"byte_end":8810,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ If not, this function can be ignored; the default implementation does nothing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8815,"byte_end":8897,"line_start":83,"line_end":83,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":3361},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":9103,"byte_end":9122,"line_start":91,"line_end":91,"column_start":12,"column_end":31},"name":"SoundRecorderDriver","qualname":"::audio::capture::SoundRecorderDriver","value":"SoundRecorderDriver {  }","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3365}],"decl_id":null,"docs":" Type that \"drives\" custom sound recorders.","sig":null,"attributes":[{"value":"/ Type that \"drives\" custom sound recorders.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8930,"byte_end":8976,"line_start":87,"line_end":87,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8977,"byte_end":8980,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ It does the actual recording, and feeds the custom sound recorder with the recorded data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":8981,"byte_end":9074,"line_start":89,"line_end":89,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":9964,"byte_end":9967,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<SoundRecorderDriver>::new","value":"pub fn new(&'a mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SoundRecorderDriver` with the specified [`SoundRecorder`].\n","sig":null,"attributes":[{"value":"/ Creates a new `SoundRecorderDriver` with the specified [`SoundRecorder`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":9875,"byte_end":9952,"line_start":116,"line_end":116,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11274,"byte_end":11279,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"start","qualname":"<SoundRecorderDriver>::start","value":"pub fn start(&mut Self, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Start the capture.","sig":null,"attributes":[{"value":"/ Start the capture.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10412,"byte_end":10434,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10439,"byte_end":10442,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The `sample_rate` parameter defines the number of audio samples captured per second.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10447,"byte_end":10535,"line_start":133,"line_end":133,"column_start":5,"column_end":93}},{"value":"/ The higher, the better the quality (for example, 44100 samples/sec is CD quality).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10540,"byte_end":10626,"line_start":134,"line_end":134,"column_start":5,"column_end":91}},{"value":"/ This function uses its own thread so that it doesn't block the rest of the program","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10631,"byte_end":10717,"line_start":135,"line_end":135,"column_start":5,"column_end":91}},{"value":"/ while the capture runs.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10722,"byte_end":10749,"line_start":136,"line_end":136,"column_start":5,"column_end":32}},{"value":"/ Please note that only one capture can happen at the same time.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10754,"byte_end":10820,"line_start":137,"line_end":137,"column_start":5,"column_end":71}},{"value":"/ You can select which capture device will be used, by passing the name to the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10825,"byte_end":10905,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ [`set_device`] method.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10910,"byte_end":10936,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"/ If none was selected before, the default capture device will be used.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":10941,"byte_end":11014,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ You can get a list of the names of all available capture devices by","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11019,"byte_end":11090,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ calling [`available_devices`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11095,"byte_end":11129,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11134,"byte_end":11137,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Returns whether the start of capture was successful.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11142,"byte_end":11198,"line_start":144,"line_end":144,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11203,"byte_end":11206,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`set_device`]: SoundRecorderDriver::set_device","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11211,"byte_end":11262,"line_start":146,"line_end":146,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11491,"byte_end":11495,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"stop","qualname":"<SoundRecorderDriver>::stop","value":"pub fn stop(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Stop the capture, lending out the underlying [`SoundRecorder`].\n","sig":null,"attributes":[{"value":"/ Stop the capture, lending out the underlying [`SoundRecorder`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11412,"byte_end":11479,"line_start":150,"line_end":150,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11861,"byte_end":11872,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<SoundRecorderDriver>::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the sample rate.","sig":null,"attributes":[{"value":"/ Get the sample rate.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11629,"byte_end":11653,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11658,"byte_end":11661,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The sample rate defines the number of audio samples captured per second.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11666,"byte_end":11742,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ The higher, the better the quality (for example, 44100 samples/sec is CD quality).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11747,"byte_end":11833,"line_start":160,"line_end":160,"column_start":5,"column_end":91}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11838,"byte_end":11849,"line_start":161,"line_end":161,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12351,"byte_end":12368,"line_start":173,"line_end":173,"column_start":12,"column_end":29},"name":"set_channel_count","qualname":"<SoundRecorderDriver>::set_channel_count","value":"pub fn set_channel_count(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the channel count of the audio capture device.","sig":null,"attributes":[{"value":"/ Set the channel count of the audio capture device.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":11965,"byte_end":12019,"line_start":165,"line_end":165,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12024,"byte_end":12027,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This method allows you to specify the number of channels used for recording.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12032,"byte_end":12112,"line_start":167,"line_end":167,"column_start":5,"column_end":85}},{"value":"/ Currently only 16-bit mono and 16-bit stereo are supported.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12117,"byte_end":12180,"line_start":168,"line_end":168,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12185,"byte_end":12188,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12193,"byte_end":12209,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/ * `channel_count`   Number of channels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12214,"byte_end":12257,"line_start":171,"line_end":171,"column_start":5,"column_end":48}},{"value":"/                     Currently only mono (1) and stereo (2) are supported.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12262,"byte_end":12339,"line_start":172,"line_end":172,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12701,"byte_end":12714,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<SoundRecorderDriver>::channel_count","value":"pub fn channel_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels used by this recorder.","sig":null,"attributes":[{"value":"/ Get the number of channels used by this recorder.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12495,"byte_end":12548,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12553,"byte_end":12556,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Currently only mono and stereo are supported,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12561,"byte_end":12610,"line_start":178,"line_end":178,"column_start":5,"column_end":54}},{"value":"/ so the value is either 1 (for mono) or 2 (for stereo).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12615,"byte_end":12673,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12678,"byte_end":12689,"line_start":180,"line_end":180,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13297,"byte_end":13320,"line_start":195,"line_end":195,"column_start":12,"column_end":35},"name":"set_processing_interval","qualname":"<SoundRecorderDriver>::set_processing_interval","value":"pub fn set_processing_interval(&mut Self, Time)","parent":null,"children":[],"decl_id":null,"docs":" Set the processing interval.","sig":null,"attributes":[{"value":"/ Set the processing interval.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12809,"byte_end":12841,"line_start":184,"line_end":184,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12846,"byte_end":12849,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The processing interval controls the period between calls to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12854,"byte_end":12918,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ [`SoundRecorder::on_process_samples`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12923,"byte_end":12965,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ You may want to use a small interval if you want to process the recorded data in real time,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":12970,"byte_end":13065,"line_start":188,"line_end":188,"column_start":5,"column_end":100}},{"value":"/ for example.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13070,"byte_end":13086,"line_start":189,"line_end":189,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13091,"byte_end":13094,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note: this is only a hint, the actual period may vary.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13099,"byte_end":13157,"line_start":191,"line_end":191,"column_start":5,"column_end":63}},{"value":"/ So don't rely on this parameter to implement precise timing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13162,"byte_end":13226,"line_start":192,"line_end":192,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13231,"byte_end":13234,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The default processing interval is 100 ms.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13239,"byte_end":13285,"line_start":194,"line_end":194,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13531,"byte_end":13537,"line_start":200,"line_end":200,"column_start":12,"column_end":18},"name":"device","qualname":"<SoundRecorderDriver>::device","value":"pub fn device(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the current audio capture device.\n","sig":null,"attributes":[{"value":"/ Get the name of the current audio capture device.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13450,"byte_end":13503,"line_start":198,"line_end":198,"column_start":5,"column_end":58}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13508,"byte_end":13519,"line_start":199,"line_end":199,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":14027,"byte_end":14037,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"set_device","qualname":"<SoundRecorderDriver>::set_device","value":"pub fn set_device(&mut Self, &str) -> Result<(), SetDeviceError>","parent":null,"children":[],"decl_id":null,"docs":" Set the audio capture device.","sig":null,"attributes":[{"value":"/ Set the audio capture device.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13736,"byte_end":13769,"line_start":207,"line_end":207,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13774,"byte_end":13777,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This function sets the audio capture device to the device with the given name.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13782,"byte_end":13864,"line_start":209,"line_end":209,"column_start":5,"column_end":87}},{"value":"/ It can be called on the fly (i.e: while recording).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13869,"byte_end":13924,"line_start":210,"line_end":210,"column_start":5,"column_end":60}},{"value":"/ If you do so while recording and opening the device fails, it stops the recording.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":13929,"byte_end":14015,"line_start":211,"line_end":211,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":3370},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15177,"byte_end":15196,"line_start":243,"line_end":243,"column_start":12,"column_end":31},"name":"SoundBufferRecorder","qualname":"::audio::capture::SoundBufferRecorder","value":"SoundBufferRecorder {  }","parent":null,"children":[{"krate":0,"index":3371}],"decl_id":null,"docs":" Specialized [`SoundRecorder`] which stores the captured audio data into a sound buffer.","sig":null,"attributes":[{"value":"/ Specialized [`SoundRecorder`] which stores the captured audio data into a sound buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":14765,"byte_end":14856,"line_start":235,"line_end":235,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":14857,"byte_end":14860,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ `SoundBufferRecorder` allows to access a recorded sound through a [`SoundBuffer`],","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":14861,"byte_end":14947,"line_start":237,"line_end":237,"column_start":1,"column_end":87}},{"value":"/ so that it can be played, saved to a file, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":14948,"byte_end":14999,"line_start":238,"line_end":238,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15000,"byte_end":15003,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ As usual, don't forget to call the [`is_available`] function before using this type","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15004,"byte_end":15091,"line_start":240,"line_end":240,"column_start":1,"column_end":88}},{"value":"/ (see [`SoundRecorder`] for more details about this).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15092,"byte_end":15148,"line_start":241,"line_end":241,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3374},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15329,"byte_end":15343,"line_start":249,"line_end":249,"column_start":12,"column_end":26},"name":"SetDeviceError","qualname":"::audio::capture::SetDeviceError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error trying to set a capture device.\n","sig":null,"attributes":[{"value":"/ Error trying to set a capture device.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15246,"byte_end":15287,"line_start":247,"line_end":247,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15443,"byte_end":15446,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<SoundBufferRecorder>::new","value":"pub fn new() -> SoundBufferRecorder","parent":null,"children":[],"decl_id":null,"docs":" Create a new sound buffer recorder\n","sig":null,"attributes":[{"value":"/ Create a new sound buffer recorder","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15377,"byte_end":15415,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15420,"byte_end":15431,"line_start":253,"line_end":253,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16235,"byte_end":16240,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"start","qualname":"<SoundBufferRecorder>::start","value":"pub fn start(&mut Self, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Start the capture of a sound buffer recorder","sig":null,"attributes":[{"value":"/ Start the capture of a sound buffer recorder","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15676,"byte_end":15724,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15729,"byte_end":15732,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The sampleRate parameter defines the number of audio samples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15737,"byte_end":15801,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/ captured per second. The higher, the better the quality","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15806,"byte_end":15865,"line_start":263,"line_end":263,"column_start":5,"column_end":64}},{"value":"/ (for example, 44100 samples/sec is CD quality).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15870,"byte_end":15921,"line_start":264,"line_end":264,"column_start":5,"column_end":56}},{"value":"/ This function uses its own thread so that it doesn't block","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15926,"byte_end":15988,"line_start":265,"line_end":265,"column_start":5,"column_end":67}},{"value":"/ the rest of the program while the capture runs.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15993,"byte_end":16044,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ Please note that only one capture can happen at the same time.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16049,"byte_end":16115,"line_start":267,"line_end":267,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16120,"byte_end":16123,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16128,"byte_end":16143,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/ * `sample_rate` - Desired capture rate, in number of samples per second","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16148,"byte_end":16223,"line_start":270,"line_end":270,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16430,"byte_end":16434,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"stop","qualname":"<SoundBufferRecorder>::stop","value":"pub fn stop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop the capture of a sound recorder\n","sig":null,"attributes":[{"value":"/ Stop the capture of a sound recorder","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16378,"byte_end":16418,"line_start":275,"line_end":275,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16850,"byte_end":16861,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<SoundBufferRecorder>::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the sample rate of a sound buffer recorder","sig":null,"attributes":[{"value":"/ Get the sample rate of a sound buffer recorder","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16522,"byte_end":16572,"line_start":280,"line_end":280,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16577,"byte_end":16580,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The sample rate defines the number of audio samples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16585,"byte_end":16640,"line_start":282,"line_end":282,"column_start":5,"column_end":60}},{"value":"/ captured per second. The higher, the better the quality","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16645,"byte_end":16704,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/ (for example, 44100 samples/sec is CD quality).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16709,"byte_end":16760,"line_start":284,"line_end":284,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16765,"byte_end":16768,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Return the sample rate, in samples per second","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16773,"byte_end":16822,"line_start":286,"line_end":286,"column_start":5,"column_end":54}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16827,"byte_end":16838,"line_start":287,"line_end":287,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17345,"byte_end":17351,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"buffer","qualname":"<SoundBufferRecorder>::buffer","value":"pub fn buffer(&Self) -> &SoundBuffer","parent":null,"children":[],"decl_id":null,"docs":" Get the sound buffer containing the captured audio data","sig":null,"attributes":[{"value":"/ Get the sound buffer containing the captured audio data","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":16961,"byte_end":17020,"line_start":292,"line_end":292,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17025,"byte_end":17028,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ The sound buffer is valid only after the capture has ended.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17033,"byte_end":17096,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/ This function provides a read-only access to the internal","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17101,"byte_end":17162,"line_start":295,"line_end":295,"column_start":5,"column_end":66}},{"value":"/ sound buffer, but it can be copied if you need to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17167,"byte_end":17220,"line_start":296,"line_end":296,"column_start":5,"column_end":58}},{"value":"/ make any modification to it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17225,"byte_end":17257,"line_start":297,"line_end":297,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17262,"byte_end":17265,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Return Read-only access to the sound buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17270,"byte_end":17317,"line_start":299,"line_end":299,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17322,"byte_end":17333,"line_start":300,"line_end":300,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17674,"byte_end":17680,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"device","qualname":"<SoundBufferRecorder>::device","value":"pub fn device(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the current audio capture device.\n","sig":null,"attributes":[{"value":"/ Get the name of the current audio capture device.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17593,"byte_end":17646,"line_start":306,"line_end":306,"column_start":5,"column_end":58}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17651,"byte_end":17662,"line_start":307,"line_end":307,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":18176,"byte_end":18186,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"set_device","qualname":"<SoundBufferRecorder>::set_device","value":"pub fn set_device(&mut Self, &str) -> Result<(), SetDeviceError>","parent":null,"children":[],"decl_id":null,"docs":" Set the audio capture device.","sig":null,"attributes":[{"value":"/ Set the audio capture device.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17885,"byte_end":17918,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17923,"byte_end":17926,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This function sets the audio capture device to the device with the given name.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":17931,"byte_end":18013,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ It can be called on the fly (i.e: while recording).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":18018,"byte_end":18073,"line_start":318,"line_end":318,"column_start":5,"column_end":60}},{"value":"/ If you do so while recording and opening the device fails, it stops the recording.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":18078,"byte_end":18164,"line_start":319,"line_end":319,"column_start":5,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19604,"byte_end":19616,"line_start":371,"line_end":371,"column_start":8,"column_end":20},"name":"is_available","qualname":"::audio::capture::is_available","value":"pub fn is_available() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the system supports audio capture","sig":null,"attributes":[{"value":"/ Check if the system supports audio capture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19304,"byte_end":19350,"line_start":363,"line_end":363,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19351,"byte_end":19354,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ This function should always be called before using","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19355,"byte_end":19409,"line_start":365,"line_end":365,"column_start":1,"column_end":55}},{"value":"/ the audio capture features. If it returns false, then","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19410,"byte_end":19467,"line_start":366,"line_end":366,"column_start":1,"column_end":58}},{"value":"/ any attempt to use `SoundRecorder` will fail.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19468,"byte_end":19517,"line_start":367,"line_end":367,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19518,"byte_end":19521,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ Return true if audio capture is supported, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19522,"byte_end":19584,"line_start":369,"line_end":369,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19585,"byte_end":19596,"line_start":370,"line_end":370,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19892,"byte_end":19906,"line_start":379,"line_end":379,"column_start":8,"column_end":22},"name":"default_device","qualname":"::audio::capture::default_device","value":"pub fn default_device() -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the default audio capture device.","sig":null,"attributes":[{"value":"/ Get the name of the default audio capture device.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19688,"byte_end":19741,"line_start":374,"line_end":374,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19742,"byte_end":19745,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ This function returns the name of the default audio capture device.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19746,"byte_end":19817,"line_start":376,"line_end":376,"column_start":1,"column_end":72}},{"value":"/ If none is available, an empty string is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19818,"byte_end":19872,"line_start":377,"line_end":377,"column_start":1,"column_end":55}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19873,"byte_end":19884,"line_start":378,"line_end":378,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":172},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":20271,"byte_end":20288,"line_start":391,"line_end":391,"column_start":8,"column_end":25},"name":"available_devices","qualname":"::audio::capture::available_devices","value":"pub fn available_devices() -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of the names of all available audio capture devices.","sig":null,"attributes":[{"value":"/ Get a list of the names of all available audio capture devices.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":20068,"byte_end":20135,"line_start":386,"line_end":386,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":20136,"byte_end":20139,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ This function returns a vector of strings, containing the names of all available","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":20140,"byte_end":20224,"line_start":388,"line_end":388,"column_start":1,"column_end":85}},{"value":"/ audio capture devices.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":20225,"byte_end":20251,"line_start":389,"line_end":389,"column_start":1,"column_end":27}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":20252,"byte_end":20263,"line_start":390,"line_end":390,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":173},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"listener","qualname":"::audio::listener","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":" The audio listener is the point in the scene from where all the sounds are heard.","sig":null,"attributes":[{"value":"/ The audio listener is the point in the scene from where all the sounds are heard.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":20721,"byte_end":20806,"line_start":1,"line_end":1,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":20807,"byte_end":20810,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The audio listener defines the global properties of the audio environment,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":20811,"byte_end":20889,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ it defines where and how sounds and musics are heard.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":20890,"byte_end":20947,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":20948,"byte_end":20951,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ If [`View`] is the eyes of the user, then `listener` is his ears (by the way, they are often","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":20952,"byte_end":21048,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ linked together – same position, orientation, etc.).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21049,"byte_end":21107,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21108,"byte_end":21111,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `listener` is a simple interface, which allows to setup the listener in the 3D audio environment","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21112,"byte_end":21212,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/ (position, direction and up vector), and to adjust the global volume.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21213,"byte_end":21286,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21287,"byte_end":21290,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21291,"byte_end":21310,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21311,"byte_end":21314,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21315,"byte_end":21322,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use sfml::audio::listener;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21323,"byte_end":21353,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21354,"byte_end":21357,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ // Move the listener to the position (1, 0, -5)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21358,"byte_end":21409,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/ listener::set_position((1., 0., -5.));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21410,"byte_end":21452,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21453,"byte_end":21456,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // Make it face the right axis (1, 0, 0)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21457,"byte_end":21501,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/ listener::set_direction((1., 0., 0.));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21502,"byte_end":21544,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21545,"byte_end":21548,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Reduce the global volume","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21549,"byte_end":21580,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ listener::set_global_volume(50.);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21581,"byte_end":21618,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21619,"byte_end":21626,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21627,"byte_end":21630,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`View`]: crate::graphics::View","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21631,"byte_end":21666,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21667,"byte_end":21670,"line_start":28,"line_end":28,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22049,"byte_end":22066,"line_start":41,"line_end":41,"column_start":8,"column_end":25},"name":"set_global_volume","qualname":"::audio::listener::set_global_volume","value":"pub fn set_global_volume(f32)","parent":null,"children":[],"decl_id":null,"docs":" Change the global volume of all the sounds and musics","sig":null,"attributes":[{"value":"/ Change the global volume of all the sounds and musics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21730,"byte_end":21787,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21788,"byte_end":21791,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The volume is a number between 0 and 100, it is combined with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21792,"byte_end":21857,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/ the individual volume of each sound / music.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21858,"byte_end":21906,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/ The default value for the volume is 100 (maximum).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21907,"byte_end":21961,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21962,"byte_end":21965,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21966,"byte_end":21981,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/ * volume - The new global volume, in the range [0, 100]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":21982,"byte_end":22041,"line_start":40,"line_end":40,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22270,"byte_end":22283,"line_start":49,"line_end":49,"column_start":8,"column_end":21},"name":"global_volume","qualname":"::audio::listener::global_volume","value":"pub fn global_volume() -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the current value of the global volume","sig":null,"attributes":[{"value":"/ Get the current value of the global volume","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22140,"byte_end":22186,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22187,"byte_end":22190,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Return the current global volume, in the range [0, 100]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22191,"byte_end":22250,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22251,"byte_end":22262,"line_start":48,"line_end":48,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22532,"byte_end":22544,"line_start":60,"line_end":60,"column_start":8,"column_end":20},"name":"set_position","qualname":"::audio::listener::set_position","value":"pub fn set_position<P: Into<Vector3f>>(P)","parent":null,"children":[],"decl_id":null,"docs":" Set the position of the listener in the scene","sig":null,"attributes":[{"value":"/ Set the position of the listener in the scene","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22347,"byte_end":22396,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22397,"byte_end":22400,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The default listener's position is (0, 0, 0).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22401,"byte_end":22450,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22451,"byte_end":22454,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22455,"byte_end":22470,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22471,"byte_end":22474,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ * position - the New position of the listener","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22475,"byte_end":22524,"line_start":59,"line_end":59,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22764,"byte_end":22772,"line_start":68,"line_end":68,"column_start":8,"column_end":16},"name":"position","qualname":"::audio::listener::position","value":"pub fn position() -> Vector3f","parent":null,"children":[],"decl_id":null,"docs":" Get the current position of the listener in the scene","sig":null,"attributes":[{"value":"/ Get the current position of the listener in the scene","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22648,"byte_end":22705,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22706,"byte_end":22709,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Return the listener's position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22710,"byte_end":22744,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22745,"byte_end":22756,"line_start":67,"line_end":67,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23190,"byte_end":23203,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"set_direction","qualname":"::audio::listener::set_direction","value":"pub fn set_direction<D: Into<Vector3f>>(D)","parent":null,"children":[],"decl_id":null,"docs":" Set the orientation of the listener in the scene","sig":null,"attributes":[{"value":"/ Set the orientation of the listener in the scene","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22857,"byte_end":22909,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22910,"byte_end":22913,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The orientation defines the 3D axes of the listener","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22914,"byte_end":22969,"line_start":74,"line_end":74,"column_start":1,"column_end":56}},{"value":"/ (left, up, front) in the scene. The orientation vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":22970,"byte_end":23028,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/ doesn't have to be normalized.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23029,"byte_end":23063,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ The default listener's orientation is (0, 0, -1).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23064,"byte_end":23117,"line_start":77,"line_end":77,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23118,"byte_end":23121,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23122,"byte_end":23137,"line_start":79,"line_end":79,"column_start":1,"column_end":16}},{"value":"/ * direction - New listener's orientation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23138,"byte_end":23182,"line_start":80,"line_end":80,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23430,"byte_end":23439,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"direction","qualname":"::audio::listener::direction","value":"pub fn direction() -> Vector3f","parent":null,"children":[],"decl_id":null,"docs":" Get the current orientation of the listener in the scene","sig":null,"attributes":[{"value":"/ Get the current orientation of the listener in the scene","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23310,"byte_end":23370,"line_start":85,"line_end":85,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23371,"byte_end":23374,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Return the listener's direction","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23375,"byte_end":23410,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23411,"byte_end":23422,"line_start":88,"line_end":88,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23939,"byte_end":23952,"line_start":99,"line_end":99,"column_start":8,"column_end":21},"name":"set_up_vector","qualname":"::audio::listener::set_up_vector","value":"pub fn set_up_vector(&Vector3f)","parent":null,"children":[],"decl_id":null,"docs":" Set the upward vector of the listener in the scene.","sig":null,"attributes":[{"value":"/ Set the upward vector of the listener in the scene.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23525,"byte_end":23580,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23581,"byte_end":23584,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The up vector is the vector that points upward from the listener's perspective.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23585,"byte_end":23668,"line_start":95,"line_end":95,"column_start":1,"column_end":84}},{"value":"/ Together with the direction, it defines the 3D orientation of the listener in the scene.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23669,"byte_end":23761,"line_start":96,"line_end":96,"column_start":1,"column_end":93}},{"value":"/ The up vector doesn't have to be normalized. The default listener's up vector is (0, 1, 0).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23762,"byte_end":23857,"line_start":97,"line_end":97,"column_start":1,"column_end":96}},{"value":"/ It is usually not necessary to change it, especially in 2D scenarios.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":23858,"byte_end":23931,"line_start":98,"line_end":98,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":24132,"byte_end":24141,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"up_vector","qualname":"::audio::listener::up_vector","value":"pub fn up_vector() -> Vector3f","parent":null,"children":[],"decl_id":null,"docs":" Get the current upward vector of the listener in the scene. (not normalized)\n","sig":null,"attributes":[{"value":"/ Get the current upward vector of the listener in the scene. (not normalized)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":24032,"byte_end":24112,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/listener.rs","byte_start":24113,"byte_end":24124,"line_start":104,"line_end":104,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3381},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26099,"byte_end":26104,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"Music","qualname":"::audio::music::Music","value":"Music {  }","parent":null,"children":[{"krate":0,"index":3382}],"decl_id":null,"docs":" Streamed music played from an audio file.","sig":null,"attributes":[{"value":"/ Streamed music played from an audio file.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":24492,"byte_end":24537,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":24538,"byte_end":24541,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Music`s are sounds that are streamed rather than completely loaded in memory.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":24542,"byte_end":24624,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":24625,"byte_end":24628,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is especially useful for compressed musics that usually take hundreds of MB when they are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":24629,"byte_end":24727,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ uncompressed: by streaming it instead of loading it entirely, you avoid saturating the memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":24728,"byte_end":24825,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ and have almost no loading delay. This implies that the underlying resource","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":24826,"byte_end":24905,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ (file, stream or memory buffer) must remain valid for the lifetime of the `Music` object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":24906,"byte_end":24999,"line_start":21,"line_end":21,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25000,"byte_end":25003,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Apart from that, a `Music` has almost the same features as the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25004,"byte_end":25070,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ [`SoundBuffer`] / [`Sound`] pair: you can play/pause/stop it, request its parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25071,"byte_end":25159,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ (channels, sample rate), change the way it is played (pitch, volume, 3D position, ...), etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25160,"byte_end":25256,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25257,"byte_end":25260,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ As a sound stream, a music is played in its own thread in order not to block the rest of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25261,"byte_end":25357,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ program. This means that you can leave the music alone after calling [`play`],","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25358,"byte_end":25440,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ it will manage itself very well.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25441,"byte_end":25477,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25478,"byte_end":25481,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25482,"byte_end":25501,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25502,"byte_end":25505,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25506,"byte_end":25519,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use sfml::audio::{Music, SoundSource};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25520,"byte_end":25562,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25563,"byte_end":25566,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Open a new music from an audio file","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25567,"byte_end":25609,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/ let mut music = Music::from_file(\"music.ogg\").unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25610,"byte_end":25669,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25670,"byte_end":25673,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Change some parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25674,"byte_end":25703,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/ music.set_position((0., 1., 10.)); // change its 3D position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25704,"byte_end":25768,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ music.set_pitch(2.); // increase the pitch","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25769,"byte_end":25815,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ music.set_volume(50.); // reduce the volume","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25816,"byte_end":25863,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ music.set_looping(true); // make it loop","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25864,"byte_end":25908,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25909,"byte_end":25912,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Play it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25913,"byte_end":25927,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ music.play();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25928,"byte_end":25945,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25946,"byte_end":25953,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25954,"byte_end":25957,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`play`]: Music::play","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25958,"byte_end":25983,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ [`SoundBuffer`]: crate::audio::SoundBuffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":25984,"byte_end":26030,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ [`Sound`]: crate::audio::Sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26031,"byte_end":26065,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26067,"byte_end":26070,"line_start":53,"line_end":53,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26693,"byte_end":26702,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Music>::from_file","value":"pub fn from_file(&str) -> Option<Music>","parent":null,"children":[],"decl_id":null,"docs":" Create a new music and load it from a file","sig":null,"attributes":[{"value":"/ Create a new music and load it from a file","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26157,"byte_end":26203,"line_start":60,"line_end":60,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26208,"byte_end":26211,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This function doesn't start playing the music (call [`play`] to do so).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26216,"byte_end":26291,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ Here is a complete list of all the supported audio formats:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26296,"byte_end":26359,"line_start":63,"line_end":63,"column_start":5,"column_end":68}},{"value":"/ ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26364,"byte_end":26426,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/ w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26431,"byte_end":26498,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26503,"byte_end":26506,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26511,"byte_end":26526,"line_start":67,"line_end":67,"column_start":5,"column_end":20}},{"value":"/ * filename - Path of the music file to open","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26531,"byte_end":26578,"line_start":68,"line_end":68,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26583,"byte_end":26586,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26591,"byte_end":26627,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26632,"byte_end":26635,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`play`]: Music::play","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26640,"byte_end":26665,"line_start":72,"line_end":72,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26670,"byte_end":26681,"line_start":73,"line_end":73,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27590,"byte_end":27601,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<Music>::from_stream","value":"pub fn from_stream<T: Read + Seek>(&mut T) -> Option<Music>","parent":null,"children":[],"decl_id":null,"docs":" Create a new music and load it from a stream (a struct implementing Read and Seek)","sig":null,"attributes":[{"value":"/ Create a new music and load it from a stream (a struct implementing Read and Seek)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27023,"byte_end":27109,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27114,"byte_end":27117,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This function doesn't start playing the music (call [`play`] to do so).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27122,"byte_end":27197,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ Here is a complete list of all the supported audio formats:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27202,"byte_end":27265,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/ ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27270,"byte_end":27332,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/ w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27337,"byte_end":27404,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27409,"byte_end":27412,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27417,"byte_end":27432,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/ * stream - Your struct, implementing Read and Seek","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27437,"byte_end":27491,"line_start":92,"line_end":92,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27496,"byte_end":27499,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27504,"byte_end":27540,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27545,"byte_end":27548,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`play`]: Music::play","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27553,"byte_end":27578,"line_start":96,"line_end":96,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28496,"byte_end":28507,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"from_memory","qualname":"<Music>::from_memory","value":"pub fn from_memory(&[u8]) -> Option<Music>","parent":null,"children":[],"decl_id":null,"docs":" Create a new music and load it from memory","sig":null,"attributes":[{"value":"/ Create a new music and load it from memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":27961,"byte_end":28007,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28012,"byte_end":28015,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function doesn't start playing the music (call [`play`] to do so).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28020,"byte_end":28095,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ Here is a complete list of all the supported audio formats:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28100,"byte_end":28163,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/ ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28168,"byte_end":28230,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28235,"byte_end":28302,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28307,"byte_end":28310,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28315,"byte_end":28330,"line_start":115,"line_end":115,"column_start":5,"column_end":20}},{"value":"/ * mem - Pointer to the file data in memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28335,"byte_end":28381,"line_start":116,"line_end":116,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28386,"byte_end":28389,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28394,"byte_end":28430,"line_start":118,"line_end":118,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28435,"byte_end":28438,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [`play`]: Music::play","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28443,"byte_end":28468,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28473,"byte_end":28484,"line_start":121,"line_end":121,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29071,"byte_end":29082,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"set_looping","qualname":"<Music>::set_looping","value":"pub fn set_looping(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether this music should loop or not.","sig":null,"attributes":[{"value":"/ Sets whether this music should loop or not.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28787,"byte_end":28834,"line_start":132,"line_end":132,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28839,"byte_end":28842,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If `true`, the music will restart from beginning after","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28847,"byte_end":28905,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/ reaching the end and so on, until it is stopped or","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28910,"byte_end":28964,"line_start":135,"line_end":135,"column_start":5,"column_end":59}},{"value":"/ `set_looping(false)` is called.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":28969,"byte_end":29004,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29009,"byte_end":29012,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ By default, the music will *not* loop.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29017,"byte_end":29059,"line_start":138,"line_end":138,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29346,"byte_end":29356,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"is_looping","qualname":"<Music>::is_looping","value":"pub fn is_looping(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not a music is in loop mode","sig":null,"attributes":[{"value":"/ Tell whether or not a music is in loop mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29202,"byte_end":29249,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29254,"byte_end":29257,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Return true if the music is looping, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29262,"byte_end":29318,"line_start":145,"line_end":145,"column_start":5,"column_end":61}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29323,"byte_end":29334,"line_start":146,"line_end":146,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29552,"byte_end":29560,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"duration","qualname":"<Music>::duration","value":"pub fn duration(&Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the total duration of a music","sig":null,"attributes":[{"value":"/ Get the total duration of a music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29449,"byte_end":29486,"line_start":151,"line_end":151,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29491,"byte_end":29494,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Return Music duration","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29499,"byte_end":29524,"line_start":153,"line_end":153,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29529,"byte_end":29540,"line_start":154,"line_end":154,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30006,"byte_end":30010,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"play","qualname":"<Music>::play","value":"pub fn play(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start or resume playing a music","sig":null,"attributes":[{"value":"/ Start or resume playing a music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29661,"byte_end":29696,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29701,"byte_end":29704,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This function starts the music if it was stopped, resumes","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29709,"byte_end":29770,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/ it if it was paused, and restarts it from beginning if it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29775,"byte_end":29836,"line_start":162,"line_end":162,"column_start":5,"column_end":66}},{"value":"/ was it already playing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29841,"byte_end":29868,"line_start":163,"line_end":163,"column_start":5,"column_end":32}},{"value":"/ This function uses its own thread so that it doesn't block","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29873,"byte_end":29935,"line_start":164,"line_end":164,"column_start":5,"column_end":67}},{"value":"/ the rest of the program while the music is played.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":29940,"byte_end":29994,"line_start":165,"line_end":165,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30249,"byte_end":30254,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"pause","qualname":"<Music>::pause","value":"pub fn pause(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Pause a music","sig":null,"attributes":[{"value":"/ Pause a music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30084,"byte_end":30101,"line_start":170,"line_end":170,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30106,"byte_end":30109,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function pauses the music if it was playing,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30114,"byte_end":30167,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/ otherwise (music already paused or stopped) it has no effect.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30172,"byte_end":30237,"line_start":173,"line_end":173,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30552,"byte_end":30556,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"stop","qualname":"<Music>::stop","value":"pub fn stop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop playing a music","sig":null,"attributes":[{"value":"/ Stop playing a music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30329,"byte_end":30353,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30358,"byte_end":30361,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function stops the music if it was playing or paused,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30366,"byte_end":30428,"line_start":180,"line_end":180,"column_start":5,"column_end":67}},{"value":"/ and does nothing if it was already stopped.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30433,"byte_end":30480,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"/ It also resets the playing position (unlike pause).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30485,"byte_end":30540,"line_start":182,"line_end":182,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30815,"byte_end":30828,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<Music>::channel_count","value":"pub fn channel_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the number of channels of a music","sig":null,"attributes":[{"value":"/ Return the number of channels of a music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30630,"byte_end":30674,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30679,"byte_end":30682,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ 1 channel means a mono sound, 2 means stereo, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30687,"byte_end":30741,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30746,"byte_end":30749,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Return the number of channels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30754,"byte_end":30787,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30792,"byte_end":30803,"line_start":192,"line_end":192,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31176,"byte_end":31187,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<Music>::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the sample rate of a music","sig":null,"attributes":[{"value":"/ Get the sample rate of a music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30916,"byte_end":30950,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30955,"byte_end":30958,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The sample rate is the number of audio samples played per","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":30963,"byte_end":31024,"line_start":199,"line_end":199,"column_start":5,"column_end":66}},{"value":"/ second. The higher, the better the quality.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31029,"byte_end":31076,"line_start":200,"line_end":200,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31081,"byte_end":31084,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Return the sample rate, in number of samples per second","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31089,"byte_end":31148,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31153,"byte_end":31164,"line_start":203,"line_end":203,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31403,"byte_end":31409,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"status","qualname":"<Music>::status","value":"pub fn status(&Self) -> SoundStatus","parent":null,"children":[],"decl_id":null,"docs":" Get the current status of a music (stopped, paused, playing)","sig":null,"attributes":[{"value":"/ Get the current status of a music (stopped, paused, playing)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31273,"byte_end":31337,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31342,"byte_end":31345,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Return current status","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31350,"byte_end":31375,"line_start":210,"line_end":210,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31380,"byte_end":31391,"line_start":211,"line_end":211,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31639,"byte_end":31653,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"playing_offset","qualname":"<Music>::playing_offset","value":"pub fn playing_offset(&Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the current playing position of a music","sig":null,"attributes":[{"value":"/ Get the current playing position of a music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31512,"byte_end":31559,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31564,"byte_end":31567,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Return the current playing position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31572,"byte_end":31611,"line_start":218,"line_end":218,"column_start":5,"column_end":44}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31616,"byte_end":31627,"line_start":219,"line_end":219,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31997,"byte_end":32015,"line_start":231,"line_end":231,"column_start":12,"column_end":30},"name":"set_playing_offset","qualname":"<Music>::set_playing_offset","value":"pub fn set_playing_offset(&mut Self, Time)","parent":null,"children":[],"decl_id":null,"docs":" Change the current playing position of a music","sig":null,"attributes":[{"value":"/ Change the current playing position of a music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31759,"byte_end":31809,"line_start":224,"line_end":224,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31814,"byte_end":31817,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The playing position can be changed when the music is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31822,"byte_end":31879,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"/ either paused or playing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31884,"byte_end":31913,"line_start":227,"line_end":227,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31918,"byte_end":31921,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31926,"byte_end":31941,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"/ * timeOffset - New playing position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":31946,"byte_end":31985,"line_start":230,"line_end":230,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32783,"byte_end":32794,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"loop_points","qualname":"<Music>::loop_points","value":"pub fn loop_points(&Self) -> TimeSpan","parent":null,"children":[],"decl_id":null,"docs":" Get the positions of the of the music's looping sequence.","sig":null,"attributes":[{"value":"/ Get the positions of the of the music's looping sequence.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32138,"byte_end":32199,"line_start":234,"line_end":234,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32204,"byte_end":32207,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32212,"byte_end":32225,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/ Since [`set_loop_points`] performs some adjustments on the provided values and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32230,"byte_end":32312,"line_start":237,"line_end":237,"column_start":5,"column_end":87}},{"value":"/ rounds them to internal samples, a call to [`loop_points`] is not guaranteed to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32317,"byte_end":32400,"line_start":238,"line_end":238,"column_start":5,"column_end":88}},{"value":"/ return the same times passed into a previous call to [`set_loop_points`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32405,"byte_end":32482,"line_start":239,"line_end":239,"column_start":5,"column_end":82}},{"value":"/ However, it is guaranteed to return times that will map to the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32487,"byte_end":32553,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/ valid internal samples of this [`Music`] if they are later passed to [`set_loop_points`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32558,"byte_end":32651,"line_start":241,"line_end":241,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32656,"byte_end":32659,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`set_loop_points`]: Music::set_loop_points","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32664,"byte_end":32711,"line_start":243,"line_end":243,"column_start":5,"column_end":52}},{"value":"/ [`loop_points`]: Music::loop_points","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32716,"byte_end":32755,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32760,"byte_end":32771,"line_start":245,"line_end":245,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33705,"byte_end":33720,"line_start":259,"line_end":259,"column_start":12,"column_end":27},"name":"set_loop_points","qualname":"<Music>::set_loop_points","value":"pub fn set_loop_points(&mut Self, TimeSpan)","parent":null,"children":[],"decl_id":null,"docs":" Sets the beginning and end of the music's looping sequence.","sig":null,"attributes":[{"value":"/ Sets the beginning and end of the music's looping sequence.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32904,"byte_end":32967,"line_start":249,"line_end":249,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32972,"byte_end":32975,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Loop points allow one to specify a pair of positions such that, when the music is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":32980,"byte_end":33065,"line_start":251,"line_end":251,"column_start":5,"column_end":90}},{"value":"/ enabled for looping, it will seamlessly seek to the beginning whenever it encounters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33070,"byte_end":33158,"line_start":252,"line_end":252,"column_start":5,"column_end":93}},{"value":"/ the end. Valid ranges for timePoints.offset and timePoints.length are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33163,"byte_end":33236,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ `[0, Dur)` and `(0, Dur-offset]` respectively, where `Dur` is the value returned by","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33241,"byte_end":33328,"line_start":254,"line_end":254,"column_start":5,"column_end":92}},{"value":"/ `duration`. Note that the EOF \"loop point\" from the end to the beginning of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33333,"byte_end":33416,"line_start":255,"line_end":255,"column_start":5,"column_end":88}},{"value":"/ stream is still honored, in case the caller seeks to a point after the end of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33421,"byte_end":33506,"line_start":256,"line_end":256,"column_start":5,"column_end":90}},{"value":"/ loop range. This function can be safely called at any point after a stream is opened,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33511,"byte_end":33600,"line_start":257,"line_end":257,"column_start":5,"column_end":94}},{"value":"/ and will be applied to a playing sound without affecting the current playing offset.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33605,"byte_end":33693,"line_start":258,"line_end":258,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":3385},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36895,"byte_end":36900,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"Sound","qualname":"::audio::sound::Sound","value":"Sound {  }","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388}],"decl_id":null,"docs":" Regular sound that can be played in the audio environment.","sig":null,"attributes":[{"value":"/ Regular sound that can be played in the audio environment.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35644,"byte_end":35706,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35707,"byte_end":35710,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `Sound` is the type to use to play sounds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35711,"byte_end":35757,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35758,"byte_end":35761,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It provides:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35762,"byte_end":35778,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35779,"byte_end":35782,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ - Control (play, pause, stop)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35783,"byte_end":35816,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/ - Ability to modify output parameters in real-time (pitch, volume, ...)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35817,"byte_end":35892,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ - 3D spatial features (position, attenuation, ...).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35893,"byte_end":35948,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35949,"byte_end":35952,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `Sound` is perfect for playing short sounds that can fit in memory and require no latency,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":35953,"byte_end":36047,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ like foot steps or gun shots. For longer sounds, like background musics or long speeches,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36048,"byte_end":36141,"line_start":21,"line_end":21,"column_start":1,"column_end":94}},{"value":"/ rather see [`Music`] (which is based on streaming).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36142,"byte_end":36197,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36198,"byte_end":36201,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In order to work, a sound must be given a buffer of audio data to play.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36202,"byte_end":36277,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ Audio data (samples) is stored in [`SoundBuffer`], and attached to a sound with the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36278,"byte_end":36365,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/ [`set_buffer`] function. The buffer object attached to a sound must remain alive as long as","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36366,"byte_end":36461,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"/ the sound uses it. Note that multiple sounds can use the same sound buffer at the same time.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36462,"byte_end":36558,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36559,"byte_end":36562,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`set_buffer`]: Sound::set_buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36563,"byte_end":36600,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36601,"byte_end":36604,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36605,"byte_end":36624,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36625,"byte_end":36628,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36629,"byte_end":36642,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use sfml::audio::{Sound, SoundBuffer};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36643,"byte_end":36685,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36686,"byte_end":36689,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let buffer = SoundBuffer::from_file(\"sound.wav\").unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36690,"byte_end":36752,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/ let mut sound = Sound::with_buffer(&buffer);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36753,"byte_end":36801,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ sound.play();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36802,"byte_end":36819,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36820,"byte_end":36827,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36828,"byte_end":36831,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`Music`]: crate::audio::Music","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36832,"byte_end":36866,"line_start":41,"line_end":41,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37059,"byte_end":37062,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Sound>::new","value":"pub fn new() -> Sound","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Sound`\n","sig":null,"attributes":[{"value":"/ Create a new `Sound`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37007,"byte_end":37031,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37036,"byte_end":37047,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37345,"byte_end":37356,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"with_buffer","qualname":"<Sound>::with_buffer","value":"pub fn with_buffer(&SoundBuffer) -> Sound","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Sound` with a buffer\n","sig":null,"attributes":[{"value":"/ Create a new `Sound` with a buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37279,"byte_end":37317,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37322,"byte_end":37333,"line_start":61,"line_end":61,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37534,"byte_end":37545,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"set_looping","qualname":"<Sound>::set_looping","value":"pub fn set_looping(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether this sound should loop or not.\n","sig":null,"attributes":[{"value":"/ Sets whether this sound should loop or not.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37475,"byte_end":37522,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37809,"byte_end":37819,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"is_looping","qualname":"<Sound>::is_looping","value":"pub fn is_looping(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not a sound is in loop mode","sig":null,"attributes":[{"value":"/ Tell whether or not a sound is in loop mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37665,"byte_end":37712,"line_start":73,"line_end":73,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37717,"byte_end":37720,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Return true if the sound is looping, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37725,"byte_end":37781,"line_start":75,"line_end":75,"column_start":5,"column_end":61}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37786,"byte_end":37797,"line_start":76,"line_end":76,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38257,"byte_end":38261,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"play","qualname":"<Sound>::play","value":"pub fn play(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start or resume playing a sound","sig":null,"attributes":[{"value":"/ Start or resume playing a sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37912,"byte_end":37947,"line_start":81,"line_end":81,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37952,"byte_end":37955,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function starts the sound if it was stopped, resumes","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":37960,"byte_end":38021,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ it if it was paused, and restarts it from beginning if it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38026,"byte_end":38087,"line_start":84,"line_end":84,"column_start":5,"column_end":66}},{"value":"/ was it already playing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38092,"byte_end":38119,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/ This function uses its own thread so that it doesn't block","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38124,"byte_end":38186,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ the rest of the program while the sound is played.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38191,"byte_end":38245,"line_start":87,"line_end":87,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38500,"byte_end":38505,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"pause","qualname":"<Sound>::pause","value":"pub fn pause(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Pause a sound","sig":null,"attributes":[{"value":"/ Pause a sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38335,"byte_end":38352,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38357,"byte_end":38360,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function pauses the sound if it was playing,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38365,"byte_end":38418,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/ otherwise (sound already paused or stopped) it has no effect.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38423,"byte_end":38488,"line_start":95,"line_end":95,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38803,"byte_end":38807,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"stop","qualname":"<Sound>::stop","value":"pub fn stop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop playing a sound","sig":null,"attributes":[{"value":"/ Stop playing a sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38580,"byte_end":38604,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38609,"byte_end":38612,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This function stops the sound if it was playing or paused,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38617,"byte_end":38679,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/ and does nothing if it was already stopped.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38684,"byte_end":38731,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/ It also resets the playing position (unlike pause).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38736,"byte_end":38791,"line_start":104,"line_end":104,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39011,"byte_end":39017,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"status","qualname":"<Sound>::status","value":"pub fn status(&Self) -> SoundStatus","parent":null,"children":[],"decl_id":null,"docs":" Get the current status of a sound (stopped, paused, playing)","sig":null,"attributes":[{"value":"/ Get the current status of a sound (stopped, paused, playing)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38881,"byte_end":38945,"line_start":109,"line_end":109,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38950,"byte_end":38953,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Return current status","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38958,"byte_end":38983,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":38988,"byte_end":38999,"line_start":112,"line_end":112,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39247,"byte_end":39261,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"playing_offset","qualname":"<Sound>::playing_offset","value":"pub fn playing_offset(&Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the current playing position of a sound","sig":null,"attributes":[{"value":"/ Get the current playing position of a sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39120,"byte_end":39167,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39172,"byte_end":39175,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Return the current playing position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39180,"byte_end":39219,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39224,"byte_end":39235,"line_start":120,"line_end":120,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39605,"byte_end":39623,"line_start":132,"line_end":132,"column_start":12,"column_end":30},"name":"set_playing_offset","qualname":"<Sound>::set_playing_offset","value":"pub fn set_playing_offset(&mut Self, Time)","parent":null,"children":[],"decl_id":null,"docs":" Change the current playing position of a sound","sig":null,"attributes":[{"value":"/ Change the current playing position of a sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39367,"byte_end":39417,"line_start":125,"line_end":125,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39422,"byte_end":39425,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The playing position can be changed when the sound is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39430,"byte_end":39487,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/ either paused or playing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39492,"byte_end":39521,"line_start":128,"line_end":128,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39526,"byte_end":39529,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39534,"byte_end":39549,"line_start":130,"line_end":130,"column_start":5,"column_end":20}},{"value":"/ * timeOffset - New playing position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39554,"byte_end":39593,"line_start":131,"line_end":131,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39901,"byte_end":39911,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"set_buffer","qualname":"<Sound>::set_buffer","value":"pub fn set_buffer(&mut Self, &'s SoundBuffer)","parent":null,"children":[],"decl_id":null,"docs":" Set the source buffer containing the audio data to play","sig":null,"attributes":[{"value":"/ Set the source buffer containing the audio data to play","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39747,"byte_end":39806,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39811,"byte_end":39814,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39819,"byte_end":39834,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"/ * buffer - Sound buffer to attach to the sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":39839,"byte_end":39889,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40222,"byte_end":40228,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Sound>::buffer","value":"pub fn buffer(&Self) -> Option<&SoundBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Get the audio buffer attached to a sound","sig":null,"attributes":[{"value":"/ Get the audio buffer attached to a sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40071,"byte_end":40115,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40120,"byte_end":40123,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Return an option to Sound buffer attached to the sound or None","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40128,"byte_end":40194,"line_start":147,"line_end":147,"column_start":5,"column_end":71}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40199,"byte_end":40210,"line_start":148,"line_end":148,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3392},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45157,"byte_end":45168,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"SoundBuffer","qualname":"::audio::sound_buffer::SoundBuffer","value":"SoundBuffer {  }","parent":null,"children":[{"krate":0,"index":3393}],"decl_id":null,"docs":" Storage for audio samples defining a sound.","sig":null,"attributes":[{"value":"/ Storage for audio samples defining a sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":42668,"byte_end":42715,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":42716,"byte_end":42719,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A sound buffer holds the data of a sound, which is an array of audio samples.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":42720,"byte_end":42801,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":42802,"byte_end":42805,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A sample is a 16 bits signed integer that defines the amplitude of the sound at a given time.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":42806,"byte_end":42903,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ The sound is then reconstituted by playing these samples at a high rate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":42904,"byte_end":42979,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ (for example, 44100 samples per second is the standard rate used for playing CDs).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":42980,"byte_end":43066,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/ In short, audio samples are like texture pixels, and a `SoundBuffer` is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43067,"byte_end":43142,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ similar to a [`crate::graphics::Texture`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43143,"byte_end":43189,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43190,"byte_end":43193,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A sound buffer can be loaded from a file (see [`from_file`] for the complete list of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43194,"byte_end":43282,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ supported formats), from memory, from a custom stream or directly from an array of samples.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43283,"byte_end":43378,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ It can also be saved back to a file.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43379,"byte_end":43419,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43420,"byte_end":43423,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`from_file`]: SoundBuffer::from_file","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43424,"byte_end":43465,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43466,"byte_end":43469,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Sound buffers alone are not very useful: they hold the audio data but cannot be played.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43470,"byte_end":43561,"line_start":28,"line_end":28,"column_start":1,"column_end":92}},{"value":"/ To do so, you need to use the [`Sound`] type, which provides functions to play/pause/stop","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43562,"byte_end":43655,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"/ the sound as well as changing the way it is outputted (volume, pitch, 3D position, ...).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43656,"byte_end":43748,"line_start":30,"line_end":30,"column_start":1,"column_end":93}},{"value":"/ This separation allows more flexibility and better performances: indeed a `SoundBuffer` is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43749,"byte_end":43843,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ a heavy resource, and any operation on it is slow (often too slow for real-time applications).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43844,"byte_end":43942,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ On the other side, a [`Sound`] is a lightweight object, which can use the audio data of a sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":43943,"byte_end":44042,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/ buffer and change the way it is played without actually modifying that data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44043,"byte_end":44123,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ Note that it is also possible to bind several [`Sound`] instances to the same `SoundBuffer`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44124,"byte_end":44220,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44221,"byte_end":44224,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ It is important to note that the [`Sound`] instance doesn't copy the buffer that it uses,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44225,"byte_end":44318,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/ it only keeps a reference to it. Thus, a `SoundBuffer` can not be destructed while it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44319,"byte_end":44411,"line_start":38,"line_end":38,"column_start":1,"column_end":93}},{"value":"/ borrowed by a [`Sound`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44412,"byte_end":44440,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44441,"byte_end":44444,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44445,"byte_end":44464,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44465,"byte_end":44468,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44469,"byte_end":44482,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ use sfml::audio::{Sound, SoundBuffer, SoundSource};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44483,"byte_end":44538,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44539,"byte_end":44542,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Load a new sound buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44543,"byte_end":44573,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/ let buffer = SoundBuffer::from_file(\"sound.wav\").unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44574,"byte_end":44636,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44637,"byte_end":44640,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Create a sound source and bind it to the buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44641,"byte_end":44695,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"/ let mut sound_1 = Sound::with_buffer(&buffer);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44696,"byte_end":44746,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44747,"byte_end":44750,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Play the sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44751,"byte_end":44772,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/ sound_1.play();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44773,"byte_end":44792,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44793,"byte_end":44796,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // Create another sound source bound to the same buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44797,"byte_end":44856,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/ let mut sound_2 = Sound::with_buffer(&buffer);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44857,"byte_end":44907,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44908,"byte_end":44911,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Play it with a higher pitch -- the first sound remains unchanged","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44912,"byte_end":44983,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"/ sound_2.set_pitch(2.0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":44984,"byte_end":45011,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/ sound_2.play();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45012,"byte_end":45031,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45032,"byte_end":45039,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45040,"byte_end":45043,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Sound`]: crate::audio::Sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45044,"byte_end":45078,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45096,"byte_end":45134,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45135,"byte_end":45145,"line_start":66,"line_end":66,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45652,"byte_end":45664,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"save_to_file","qualname":"<SoundBuffer>::save_to_file","value":"pub fn save_to_file(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Save a sound buffer to an audio file","sig":null,"attributes":[{"value":"/ Save a sound buffer to an audio file","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45219,"byte_end":45259,"line_start":72,"line_end":72,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45264,"byte_end":45267,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Here is a complete list of all the supported audio formats:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45272,"byte_end":45335,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/ ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45340,"byte_end":45402,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45407,"byte_end":45474,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45479,"byte_end":45482,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45487,"byte_end":45502,"line_start":78,"line_end":78,"column_start":5,"column_end":20}},{"value":"/ * filename - Path of the sound file to write","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45507,"byte_end":45555,"line_start":79,"line_end":79,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45560,"byte_end":45563,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Return true if saving succeeded, false if it faileds","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45568,"byte_end":45624,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45629,"byte_end":45640,"line_start":82,"line_end":82,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46071,"byte_end":46083,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"sample_count","qualname":"<SoundBuffer>::sample_count","value":"pub fn sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of samples stored in a sound buffer","sig":null,"attributes":[{"value":"/ Get the number of samples stored in a sound buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45851,"byte_end":45905,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45910,"byte_end":45913,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The array of samples can be accessed with [`samples`](SoundBuffer::samples).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45918,"byte_end":45998,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46003,"byte_end":46006,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Return the number of samples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46011,"byte_end":46043,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46048,"byte_end":46059,"line_start":93,"line_end":93,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46306,"byte_end":46313,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"samples","qualname":"<SoundBuffer>::samples","value":"pub fn samples(&Self) -> &[i16]","parent":null,"children":[],"decl_id":null,"docs":" Get the samples stored in the buffer","sig":null,"attributes":[{"value":"/ Get the samples stored in the buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46176,"byte_end":46216,"line_start":98,"line_end":98,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46221,"byte_end":46224,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Panic if the sample count exceeds usize range","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46229,"byte_end":46278,"line_start":100,"line_end":100,"column_start":5,"column_end":54}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46283,"byte_end":46294,"line_start":101,"line_end":101,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46848,"byte_end":46861,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<SoundBuffer>::channel_count","value":"pub fn channel_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels used by a sound buffer","sig":null,"attributes":[{"value":"/ Get the number of channels used by a sound buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46618,"byte_end":46671,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46676,"byte_end":46679,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the sound is mono then the number of channels will","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46684,"byte_end":46741,"line_start":113,"line_end":113,"column_start":5,"column_end":62}},{"value":"/ be 1, 2 for stereo, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46746,"byte_end":46774,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46779,"byte_end":46782,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Return the number of channels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46787,"byte_end":46820,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46825,"byte_end":46836,"line_start":117,"line_end":117,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47069,"byte_end":47077,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"duration","qualname":"<SoundBuffer>::duration","value":"pub fn duration(&Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the total duration of a sound buffer","sig":null,"attributes":[{"value":"/ Get the total duration of a sound buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":46955,"byte_end":46999,"line_start":122,"line_end":122,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47004,"byte_end":47007,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Return the sound duration","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47012,"byte_end":47041,"line_start":124,"line_end":124,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47046,"byte_end":47057,"line_start":125,"line_end":125,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47496,"byte_end":47507,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<SoundBuffer>::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the sample rate of a sound buffer","sig":null,"attributes":[{"value":"/ Get the sample rate of a sound buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47184,"byte_end":47225,"line_start":130,"line_end":130,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47230,"byte_end":47233,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The sample rate is the number of samples played per second.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47238,"byte_end":47301,"line_start":132,"line_end":132,"column_start":5,"column_end":68}},{"value":"/ The higher, the better the quality (for example, 44100","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47306,"byte_end":47364,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/ samples/s is CD quality).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47369,"byte_end":47398,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47403,"byte_end":47406,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Return the sample rate (number of samples per second)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47411,"byte_end":47468,"line_start":136,"line_end":136,"column_start":5,"column_end":62}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47473,"byte_end":47484,"line_start":137,"line_end":137,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48150,"byte_end":48159,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"from_file","qualname":"<SoundBuffer>::from_file","value":"pub fn from_file(&str) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new sound buffer and load it from a file","sig":null,"attributes":[{"value":"/ Create a new sound buffer and load it from a file","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47731,"byte_end":47784,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47789,"byte_end":47792,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Here is a complete list of all the supported audio formats:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47797,"byte_end":47860,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47865,"byte_end":47927,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/ w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":47932,"byte_end":47999,"line_start":149,"line_end":149,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48004,"byte_end":48007,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48012,"byte_end":48027,"line_start":151,"line_end":151,"column_start":5,"column_end":20}},{"value":"/ * filename - Path of the sound file to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48032,"byte_end":48079,"line_start":152,"line_end":152,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48084,"byte_end":48087,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48092,"byte_end":48122,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48127,"byte_end":48138,"line_start":155,"line_end":155,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48512,"byte_end":48523,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"from_memory","qualname":"<SoundBuffer>::from_memory","value":"pub fn from_memory(&[u8]) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Load the sound buffer from a file in memory.\n","sig":null,"attributes":[{"value":"/ Load the sound buffer from a file in memory.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48436,"byte_end":48484,"line_start":162,"line_end":162,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48489,"byte_end":48500,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48796,"byte_end":48807,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<SoundBuffer>::from_stream","value":"pub fn from_stream<T: Read + Seek>(&mut T) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Load the sound buffer from a custom stream.\n","sig":null,"attributes":[{"value":"/ Load the sound buffer from a custom stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":48737,"byte_end":48784,"line_start":169,"line_end":169,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49217,"byte_end":49229,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"from_samples","qualname":"<SoundBuffer>::from_samples","value":"pub fn from_samples(&[i16], u32, u32) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Load the sound buffer from a slice of audio samples.","sig":null,"attributes":[{"value":"/ Load the sound buffer from a slice of audio samples.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49050,"byte_end":49106,"line_start":175,"line_end":175,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49111,"byte_end":49114,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The assumed format of the audio samples is 16 bits signed integer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49119,"byte_end":49189,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49194,"byte_end":49205,"line_start":178,"line_end":178,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":397},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50136,"byte_end":50147,"line_start":4,"line_end":4,"column_start":11,"column_end":22},"name":"SoundSource","qualname":"::audio::sound_source::SoundSource","value":"SoundSource","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":" Base trait defining a sound's properties.\n","sig":null,"attributes":[{"value":"/ Base trait defining a sound's properties.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50080,"byte_end":50125,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50575,"byte_end":50584,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"set_pitch","qualname":"::audio::sound_source::SoundSource::set_pitch","value":"pub fn set_pitch(&mut Self, f32)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Set the pitch of the sound.","sig":null,"attributes":[{"value":"/ Set the pitch of the sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50154,"byte_end":50185,"line_start":5,"line_end":5,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50190,"byte_end":50193,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ The pitch represents the perceived fundamental frequency of a sound;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50198,"byte_end":50270,"line_start":7,"line_end":7,"column_start":5,"column_end":77}},{"value":"/ thus you can make a sound more acute or grave by changing its pitch.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50275,"byte_end":50347,"line_start":8,"line_end":8,"column_start":5,"column_end":77}},{"value":"/ A side effect of changing the pitch is to modify the playing speed of the sound as well.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50352,"byte_end":50444,"line_start":9,"line_end":9,"column_start":5,"column_end":97}},{"value":"/ The default value for the pitch is 1.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50449,"byte_end":50490,"line_start":10,"line_end":10,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50495,"byte_end":50498,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50503,"byte_end":50519,"line_start":12,"line_end":12,"column_start":5,"column_end":21}},{"value":"/ pitch - New pitch to apply to the sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50524,"byte_end":50567,"line_start":13,"line_end":13,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50847,"byte_end":50857,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"set_volume","qualname":"::audio::sound_source::SoundSource::set_volume","value":"pub fn set_volume(&mut Self, f32)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Set the volume of the sound.","sig":null,"attributes":[{"value":"/ Set the volume of the sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50614,"byte_end":50646,"line_start":16,"line_end":16,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50651,"byte_end":50654,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ The volume is a value between 0 (mute) and 100 (full volume).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50659,"byte_end":50724,"line_start":18,"line_end":18,"column_start":5,"column_end":70}},{"value":"/ The default value for the volume is 100.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50729,"byte_end":50773,"line_start":19,"line_end":19,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50778,"byte_end":50781,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50786,"byte_end":50802,"line_start":21,"line_end":21,"column_start":5,"column_end":21}},{"value":"/ volume - Volume of the sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50807,"byte_end":50839,"line_start":22,"line_end":22,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51168,"byte_end":51180,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"set_position","qualname":"::audio::sound_source::SoundSource::set_position","value":"pub fn set_position<P: Into<Vector3f>>(&mut Self, P)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Set the 3D position of the sound in the audio scene.","sig":null,"attributes":[{"value":"/ Set the 3D position of the sound in the audio scene.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50888,"byte_end":50944,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50949,"byte_end":50952,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Only sounds with one channel (mono sounds) can be spatialized.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":50957,"byte_end":51023,"line_start":27,"line_end":27,"column_start":5,"column_end":71}},{"value":"/ The default position of a sound is (0, 0, 0).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51028,"byte_end":51077,"line_start":28,"line_end":28,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51082,"byte_end":51085,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51090,"byte_end":51106,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ position - Position of the sound in the scene","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51111,"byte_end":51160,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51758,"byte_end":51782,"line_start":43,"line_end":43,"column_start":8,"column_end":32},"name":"set_relative_to_listener","qualname":"::audio::sound_source::SoundSource::set_relative_to_listener","value":"pub fn set_relative_to_listener(&mut Self, bool)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Make the sound's position relative to the listener or absolute.","sig":null,"attributes":[{"value":"/ Make the sound's position relative to the listener or absolute.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51230,"byte_end":51297,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51302,"byte_end":51305,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Making a sound relative to the listener will ensure that it will always be played the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51310,"byte_end":51399,"line_start":36,"line_end":36,"column_start":5,"column_end":94}},{"value":"/ same way regardless of the position of the listener. This can be useful for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51404,"byte_end":51483,"line_start":37,"line_end":37,"column_start":5,"column_end":84}},{"value":"/ non-spatialized sounds, sounds that are produced by the listener, or sounds attached to it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51488,"byte_end":51583,"line_start":38,"line_end":38,"column_start":5,"column_end":100}},{"value":"/ The default value is false (position is absolute).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51588,"byte_end":51642,"line_start":39,"line_end":39,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51647,"byte_end":51650,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51655,"byte_end":51671,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/ relative - True to set the position relative, false to set it absolute","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51676,"byte_end":51750,"line_start":42,"line_end":42,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52323,"byte_end":52339,"line_start":54,"line_end":54,"column_start":8,"column_end":24},"name":"set_min_distance","qualname":"::audio::sound_source::SoundSource::set_min_distance","value":"pub fn set_min_distance(&mut Self, f32)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Set the minimum distance of the sound.","sig":null,"attributes":[{"value":"/ Set the minimum distance of the sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51816,"byte_end":51858,"line_start":45,"line_end":45,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51863,"byte_end":51866,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The \"minimum distance\" of a sound is the maximum distance at which it is heard at its","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51871,"byte_end":51960,"line_start":47,"line_end":47,"column_start":5,"column_end":94}},{"value":"/ maximum volume. Further than the minimum distance, it will start to fade out according to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":51965,"byte_end":52058,"line_start":48,"line_end":48,"column_start":5,"column_end":98}},{"value":"/ its attenuation factor. A value of 0 (\"inside the head of the listener\") is an invalid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52063,"byte_end":52153,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ value and is forbidden. The default value of the minimum distance is 1.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52158,"byte_end":52233,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52238,"byte_end":52241,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52246,"byte_end":52262,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/ distance - New minimum distance of the sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52267,"byte_end":52315,"line_start":53,"line_end":53,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53010,"byte_end":53025,"line_start":67,"line_end":67,"column_start":8,"column_end":23},"name":"set_attenuation","qualname":"::audio::sound_source::SoundSource::set_attenuation","value":"pub fn set_attenuation(&mut Self, f32)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Set the attenuation factor of the sound.","sig":null,"attributes":[{"value":"/ Set the attenuation factor of the sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52372,"byte_end":52416,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52421,"byte_end":52424,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The attenuation is a multiplicative factor which makes the sound more or less loud","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52429,"byte_end":52515,"line_start":58,"line_end":58,"column_start":5,"column_end":91}},{"value":"/ according to its distance from the listener. An attenuation of 0 will produce a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52520,"byte_end":52603,"line_start":59,"line_end":59,"column_start":5,"column_end":88}},{"value":"/ non-attenuated sound, i.e. its volume will always be the same whether it is heard from","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52608,"byte_end":52698,"line_start":60,"line_end":60,"column_start":5,"column_end":95}},{"value":"/ near or from far. On the other hand, an attenuation value such as 100 will make the sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52703,"byte_end":52796,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ fade out very quickly as it gets further from the listener.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52801,"byte_end":52864,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ The default value of the attenuation is 1.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52869,"byte_end":52915,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52920,"byte_end":52923,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52928,"byte_end":52944,"line_start":65,"line_end":65,"column_start":5,"column_end":21}},{"value":"/ attenuation - New attenuation factor of the sound","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":52949,"byte_end":53002,"line_start":66,"line_end":66,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53100,"byte_end":53105,"line_start":70,"line_end":70,"column_start":8,"column_end":13},"name":"pitch","qualname":"::audio::sound_source::SoundSource::pitch","value":"pub fn pitch(&Self) -> f32","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Get the pitch of the sound.\n","sig":null,"attributes":[{"value":"/ Get the pitch of the sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53061,"byte_end":53092,"line_start":69,"line_end":69,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53237,"byte_end":53243,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"volume","qualname":"::audio::sound_source::SoundSource::volume","value":"pub fn volume(&Self) -> f32","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Get the volume of the sound.","sig":null,"attributes":[{"value":"/ Get the volume of the sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53126,"byte_end":53158,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53163,"byte_end":53166,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Returns the volume of the sound, in the range [0, 100]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53171,"byte_end":53229,"line_start":74,"line_end":74,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53328,"byte_end":53336,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"position","qualname":"::audio::sound_source::SoundSource::position","value":"pub fn position(&Self) -> Vector3f","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Get the 3D position of the sound in the audio scene.\n","sig":null,"attributes":[{"value":"/ Get the 3D position of the sound in the audio scene.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53264,"byte_end":53320,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53451,"byte_end":53474,"line_start":81,"line_end":81,"column_start":8,"column_end":31},"name":"is_relative_to_listener","qualname":"::audio::sound_source::SoundSource::is_relative_to_listener","value":"pub fn is_relative_to_listener(&Self) -> bool","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Tell whether the sound's position is relative to the listener or is absolute.\n","sig":null,"attributes":[{"value":"/ Tell whether the sound's position is relative to the listener or is absolute.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53362,"byte_end":53443,"line_start":80,"line_end":80,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53546,"byte_end":53558,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"min_distance","qualname":"::audio::sound_source::SoundSource::min_distance","value":"pub fn min_distance(&Self) -> f32","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Get the minimum distance of the sound.\n","sig":null,"attributes":[{"value":"/ Get the minimum distance of the sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53496,"byte_end":53538,"line_start":83,"line_end":83,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53631,"byte_end":53642,"line_start":87,"line_end":87,"column_start":8,"column_end":19},"name":"attenuation","qualname":"::audio::sound_source::SoundSource::attenuation","value":"pub fn attenuation(&Self) -> f32","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Get the attenuation factor of the sound.\n","sig":null,"attributes":[{"value":"/ Get the attenuation factor of the sound.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_source.rs","byte_start":53579,"byte_end":53623,"line_start":86,"line_end":86,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3397},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":53833,"byte_end":53844,"line_start":5,"line_end":5,"column_start":12,"column_end":23},"name":"SoundStatus","qualname":"::audio::sound_status::SoundStatus","value":"","parent":null,"children":[],"decl_id":null,"docs":" Enumeration of statuses for sounds and musics\n","sig":null,"attributes":[{"value":"/ Enumeration of statuses for sounds and musics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":53689,"byte_end":53738,"line_start":2,"line_end":2,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":53739,"byte_end":53759,"line_start":3,"line_end":3,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":416},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":53941,"byte_end":53948,"line_start":9,"line_end":9,"column_start":15,"column_end":22},"name":"STOPPED","qualname":"::audio::sound_status::SoundStatus::STOPPED","value":"Self","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Sound is not playing.\n","sig":null,"attributes":[{"value":"/ Sound is not playing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":53901,"byte_end":53926,"line_start":8,"line_end":8,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":417},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":54032,"byte_end":54038,"line_start":11,"line_end":11,"column_start":15,"column_end":21},"name":"PAUSED","qualname":"::audio::sound_status::SoundStatus::PAUSED","value":"Self","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Sound is paused.\n","sig":null,"attributes":[{"value":"/ Sound is paused.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":53997,"byte_end":54017,"line_start":10,"line_end":10,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":418},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":54122,"byte_end":54129,"line_start":13,"line_end":13,"column_start":15,"column_end":22},"name":"PLAYING","qualname":"::audio::sound_status::SoundStatus::PLAYING","value":"Self","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Sound is playing.\n","sig":null,"attributes":[{"value":"/ Sound is playing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":54086,"byte_end":54107,"line_start":12,"line_end":12,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":447},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54423,"byte_end":54434,"line_start":11,"line_end":11,"column_start":11,"column_end":22},"name":"SoundStream","qualname":"::audio::sound_stream::SoundStream","value":"SoundStream","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" Trait for streamed audio sources.\n","sig":null,"attributes":[{"value":"/ Trait for streamed audio sources.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54375,"byte_end":54412,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54695,"byte_end":54703,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"get_data","qualname":"::audio::sound_stream::SoundStream::get_data","value":"pub fn get_data(&mut Self) -> (&mut [i16], bool)","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" Request a new chunk of audio samples from the stream source.","sig":null,"attributes":[{"value":"/ Request a new chunk of audio samples from the stream source.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54441,"byte_end":54505,"line_start":12,"line_end":12,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54510,"byte_end":54513,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Returns `(chunk, keep_playing)`, where `chunk` is the chunk of audio samples,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54518,"byte_end":54599,"line_start":14,"line_end":14,"column_start":5,"column_end":86}},{"value":"/ and `keep_playing` tells the streaming loop whether to keep playing or to stop.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54604,"byte_end":54687,"line_start":15,"line_end":15,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54811,"byte_end":54815,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"seek","qualname":"::audio::sound_stream::SoundStream::seek","value":"pub fn seek(&mut Self, Time)","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" Change the current playing position in the stream source.\n","sig":null,"attributes":[{"value":"/ Change the current playing position in the stream source.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54742,"byte_end":54803,"line_start":17,"line_end":17,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54902,"byte_end":54915,"line_start":20,"line_end":20,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::audio::sound_stream::SoundStream::channel_count","value":"pub fn channel_count(&Self) -> u32","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" Return the number of channels of the stream.\n","sig":null,"attributes":[{"value":"/ Return the number of channels of the stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54846,"byte_end":54894,"line_start":19,"line_end":19,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54988,"byte_end":54999,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"sample_rate","qualname":"::audio::sound_stream::SoundStream::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" Get the stream sample rate of the stream.\n","sig":null,"attributes":[{"value":"/ Get the stream sample rate of the stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":54935,"byte_end":54980,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3416},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":55113,"byte_end":55130,"line_start":27,"line_end":27,"column_start":12,"column_end":29},"name":"SoundStreamPlayer","qualname":"::audio::sound_stream::SoundStreamPlayer","value":"SoundStreamPlayer {  }","parent":null,"children":[{"krate":0,"index":3419},{"krate":0,"index":3420}],"decl_id":null,"docs":" Player for custom streamed audio sources. See [`SoundStream`].\n","sig":null,"attributes":[{"value":"/ Player for custom streamed audio sources. See [`SoundStream`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":55018,"byte_end":55084,"line_start":25,"line_end":25,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":56467,"byte_end":56470,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<SoundStreamPlayer>::new","value":"pub fn new(&'a mut S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `SoundStreamPlayer` with the specified [`SoundStream`].\n","sig":null,"attributes":[{"value":"/ Create a new `SoundStreamPlayer` with the specified [`SoundStream`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":56383,"byte_end":56455,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57023,"byte_end":57027,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"play","qualname":"<SoundStreamPlayer>::play","value":"pub fn play(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start or resume playing the audio stream.\n","sig":null,"attributes":[{"value":"/ Start or resume playing the audio stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":56966,"byte_end":57011,"line_start":82,"line_end":82,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57309,"byte_end":57314,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"pause","qualname":"<SoundStreamPlayer>::pause","value":"pub fn pause(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Pause the audio stream.","sig":null,"attributes":[{"value":"/ Pause the audio stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57132,"byte_end":57159,"line_start":88,"line_end":88,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57164,"byte_end":57167,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This function pauses the stream if it was playing,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57172,"byte_end":57226,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/ otherwise (stream already paused or stopped) it has no effect.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57231,"byte_end":57297,"line_start":91,"line_end":91,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57515,"byte_end":57521,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"status","qualname":"<SoundStreamPlayer>::status","value":"pub fn status(&Self) -> SoundStatus","parent":null,"children":[],"decl_id":null,"docs":" Get the current status of the stream (stopped, paused, playing)\n","sig":null,"attributes":[{"value":"/ Get the current status of the stream (stopped, paused, playing)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57420,"byte_end":57487,"line_start":97,"line_end":97,"column_start":5,"column_end":72}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57492,"byte_end":57503,"line_start":98,"line_end":98,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59296,"byte_end":59300,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"stop","qualname":"<SoundStreamPlayer>::stop","value":"pub fn stop(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Stop playing, lending out the underlying [`SoundStream`].","sig":null,"attributes":[{"value":"/ Stop playing, lending out the underlying [`SoundStream`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57634,"byte_end":57695,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57700,"byte_end":57703,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This function stops the stream if it was playing or paused, and does nothing if it was","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57708,"byte_end":57798,"line_start":104,"line_end":104,"column_start":5,"column_end":95}},{"value":"/ already stopped. It also resets the playing position (unlike [`pause`]).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57803,"byte_end":57879,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57884,"byte_end":57887,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`pause`]: SoundStreamPlayer::pause","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57892,"byte_end":57931,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57936,"byte_end":57939,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ It lends out the underlying `SoundStream`, allowing it to be manipulated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":57944,"byte_end":58021,"line_start":109,"line_end":109,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58026,"byte_end":58029,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58034,"byte_end":58047,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58052,"byte_end":58055,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58060,"byte_end":58073,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # use sfml::audio::{SoundStream, SoundStreamPlayer};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58078,"byte_end":58134,"line_start":114,"line_end":114,"column_start":5,"column_end":61}},{"value":"/ # struct MusicStream;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58139,"byte_end":58164,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/ # impl MusicStream {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58169,"byte_end":58193,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/ #    fn load(_arg: &str) -> Self { unimplemented!() }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58198,"byte_end":58255,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58260,"byte_end":58267,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # impl SoundStream for MusicStream {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58272,"byte_end":58312,"line_start":119,"line_end":119,"column_start":5,"column_end":45}},{"value":"/ # fn get_data(&mut self) -> (&mut [i16], bool) { unimplemented!() }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58317,"byte_end":58388,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ # fn seek(&mut self, _: sfml::system::Time) { unimplemented!() }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58393,"byte_end":58461,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/ # fn channel_count(&self) -> u32 { unimplemented!() }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58466,"byte_end":58523,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/ # fn sample_rate(&self) -> u32 { unimplemented!() }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58528,"byte_end":58583,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58588,"byte_end":58595,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ let mut music_stream = MusicStream::load(\"cool_song.ogg\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58600,"byte_end":58662,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/ let mut player = SoundStreamPlayer::new(&mut music_stream);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58667,"byte_end":58730,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/ player.play();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58735,"byte_end":58753,"line_start":127,"line_end":127,"column_start":5,"column_end":23}},{"value":"/ // ...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58758,"byte_end":58768,"line_start":128,"line_end":128,"column_start":5,"column_end":15}},{"value":"/ // Let's say we want to change the song being played.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58773,"byte_end":58830,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ // We can't just simply reassign `music_stream`, since it's being borrowed by `player`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58835,"byte_end":58926,"line_start":130,"line_end":130,"column_start":5,"column_end":96}},{"value":"/ // Manipulating the stream while it's being played is _unsafe_, so it's not allowed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":58931,"byte_end":59019,"line_start":131,"line_end":131,"column_start":5,"column_end":93}},{"value":"/ //","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59024,"byte_end":59030,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ // Instead, let's stop the player first, reassign the stream, then restart the player.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59035,"byte_end":59125,"line_start":133,"line_end":133,"column_start":5,"column_end":95}},{"value":"/ {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59130,"byte_end":59135,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/    let stream = player.stop();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59140,"byte_end":59174,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/    *stream = MusicStream::load(\"another_cool_song.ogg\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59179,"byte_end":59239,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59244,"byte_end":59249,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ player.play();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59254,"byte_end":59272,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59277,"byte_end":59284,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59533,"byte_end":59547,"line_start":148,"line_end":148,"column_start":12,"column_end":26},"name":"playing_offset","qualname":"<SoundStreamPlayer>::playing_offset","value":"pub fn playing_offset(&Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the current playing position, from the beginning of the stream\n","sig":null,"attributes":[{"value":"/ Get the current playing position, from the beginning of the stream","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59435,"byte_end":59505,"line_start":146,"line_end":146,"column_start":5,"column_end":75}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59510,"byte_end":59521,"line_start":147,"line_end":147,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59965,"byte_end":59983,"line_start":156,"line_end":156,"column_start":12,"column_end":30},"name":"set_playing_offset","qualname":"<SoundStreamPlayer>::set_playing_offset","value":"pub fn set_playing_offset(&mut Self, Time)","parent":null,"children":[],"decl_id":null,"docs":" Change the current playing position of the stream.","sig":null,"attributes":[{"value":"/ Change the current playing position of the stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59663,"byte_end":59717,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59722,"byte_end":59725,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The playing position can be changed when the stream is either paused or playing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59730,"byte_end":59814,"line_start":153,"line_end":153,"column_start":5,"column_end":89}},{"value":"/ Changing the playing position when the stream is stopped has no effect,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59819,"byte_end":59894,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ since playing the stream would reset its position.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":59899,"byte_end":59953,"line_start":155,"line_end":155,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60250,"byte_end":60263,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<SoundStreamPlayer>::channel_count","value":"pub fn channel_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the number of channels of the stream.","sig":null,"attributes":[{"value":"/ Return the number of channels of the stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60107,"byte_end":60155,"line_start":159,"line_end":159,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60160,"byte_end":60163,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ 1 channel means a mono sound, 2 means stereo, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60168,"byte_end":60222,"line_start":161,"line_end":161,"column_start":5,"column_end":59}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60227,"byte_end":60238,"line_start":162,"line_end":162,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60560,"byte_end":60571,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<SoundStreamPlayer>::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the stream sample rate of the stream.","sig":null,"attributes":[{"value":"/ Get the stream sample rate of the stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60361,"byte_end":60406,"line_start":166,"line_end":166,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60411,"byte_end":60414,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The sample rate is the number of audio samples played per second.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60419,"byte_end":60488,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/ The higher, the better the quality.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60493,"byte_end":60532,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60537,"byte_end":60548,"line_start":170,"line_end":170,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60746,"byte_end":60756,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"is_looping","qualname":"<SoundStreamPlayer>::is_looping","value":"pub fn is_looping(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not the stream is in loop mode.\n","sig":null,"attributes":[{"value":"/ Tell whether or not the stream is in loop mode.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60667,"byte_end":60718,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60723,"byte_end":60734,"line_start":175,"line_end":175,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":61156,"byte_end":61167,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"set_looping","qualname":"<SoundStreamPlayer>::set_looping","value":"pub fn set_looping(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the stream should loop after reaching the end.","sig":null,"attributes":[{"value":"/ Set whether or not the stream should loop after reaching the end.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60859,"byte_end":60928,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60933,"byte_end":60936,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ If set, the stream will restart from beginning after reaching the end and so on,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":60941,"byte_end":61025,"line_start":181,"line_end":181,"column_start":5,"column_end":89}},{"value":"/ until it is stopped or `set_looping(false)` is called.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":61030,"byte_end":61088,"line_start":182,"line_end":182,"column_start":5,"column_end":63}},{"value":"/ The default looping state for streams is false.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":61093,"byte_end":61144,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3425},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/time_span.rs","byte_start":63547,"byte_end":63555,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"TimeSpan","qualname":"::audio::time_span::TimeSpan","value":"TimeSpan { offset, length }","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":3427}],"decl_id":null,"docs":" Structure defining a time range\n","sig":null,"attributes":[{"value":"/ Structure defining a time range","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/time_span.rs","byte_start":63500,"byte_end":63535,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3426},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/time_span.rs","byte_start":63614,"byte_end":63620,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"name":"offset","qualname":"::audio::time_span::TimeSpan::offset","value":"system::time::Time","parent":{"krate":0,"index":3425},"children":[],"decl_id":null,"docs":" The beginning offset of the time range.\n","sig":null,"attributes":[{"value":"/ The beginning offset of the time range.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/time_span.rs","byte_start":63562,"byte_end":63605,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3427},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/time_span.rs","byte_start":63674,"byte_end":63680,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"length","qualname":"::audio::time_span::TimeSpan::length","value":"system::time::Time","parent":{"krate":0,"index":3425},"children":[],"decl_id":null,"docs":" The length of the time range.\n","sig":null,"attributes":[{"value":"/ The length of the time range.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/time_span.rs","byte_start":63632,"byte_end":63665,"line_start":9,"line_end":9,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":505},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"graphics","qualname":"::graphics","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":631},{"krate":0,"index":751},{"krate":0,"index":813},{"krate":0,"index":937},{"krate":0,"index":1063},{"krate":0,"index":1077},{"krate":0,"index":1142},{"krate":0,"index":1193},{"krate":0,"index":1208},{"krate":0,"index":1269},{"krate":0,"index":1281},{"krate":0,"index":1318},{"krate":0,"index":1439},{"krate":0,"index":1477},{"krate":0,"index":1560},{"krate":0,"index":1674},{"krate":0,"index":1830},{"krate":0,"index":1909},{"krate":0,"index":1950},{"krate":0,"index":2054},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2249},{"krate":0,"index":2277},{"krate":0,"index":2304},{"krate":0,"index":2323},{"krate":0,"index":2389},{"krate":0,"index":2438}],"decl_id":null,"docs":" 2D graphics module: sprites, text, shapes..\n","sig":null,"attributes":[{"value":"cfg(feature = \"graphics\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1545,"byte_end":1573,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"/ 2D graphics module: sprites, text, shapes..","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":64070,"byte_end":64117,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":618},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blend_mode","qualname":"::graphics::blend_mode","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":3435},{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":622},{"krate":0,"index":3443},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3503},{"krate":0,"index":3505},{"krate":0,"index":624}],"decl_id":null,"docs":" Available blending modes for drawing\n","sig":null,"attributes":[{"value":"/ Available blending modes for drawing","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65441,"byte_end":65481,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3435},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67592,"byte_end":67601,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"BlendMode","qualname":"::graphics::blend_mode::BlendMode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blending modes for drawing.","sig":null,"attributes":[{"value":"/ Blending modes for drawing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65515,"byte_end":65546,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65547,"byte_end":65550,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `BlendMode` is a type that represents a blend mode.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65551,"byte_end":65606,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65607,"byte_end":65610,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A blend mode determines how the colors of an object you draw are mixed with the colors that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65611,"byte_end":65706,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ are already in the buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65707,"byte_end":65737,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65738,"byte_end":65741,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The type is composed of 6 components","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65742,"byte_end":65782,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65783,"byte_end":65786,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ - Color Source Factor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65787,"byte_end":65812,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/ - Color Destination Factor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65813,"byte_end":65843,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ - Color Blend Equation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65844,"byte_end":65870,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ - Alpha Source Factor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65871,"byte_end":65896,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/ - Alpha Destination Factor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65897,"byte_end":65927,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ - Alpha Blend Equation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65928,"byte_end":65954,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65955,"byte_end":65958,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The source factor specifies how the pixel you are drawing contributes to the final color.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":65959,"byte_end":66052,"line_start":21,"line_end":21,"column_start":1,"column_end":94}},{"value":"/ The destination factor specifies how the pixel already drawn in the buffer contributes to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66053,"byte_end":66146,"line_start":22,"line_end":22,"column_start":1,"column_end":94}},{"value":"/ the final color.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66147,"byte_end":66167,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66168,"byte_end":66171,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The color channels RGB (red, green, blue; simply referred to as color) and A","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66172,"byte_end":66252,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ (alpha; the transparency) can be treated separately. This separation can be useful for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66253,"byte_end":66343,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/ specific blend modes, but most often you won't need it and will simply treat the color as","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66344,"byte_end":66437,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"/ a single unit.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66438,"byte_end":66456,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66457,"byte_end":66460,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The blend factors and equations correspond to their OpenGL equivalents.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66461,"byte_end":66536,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ In general, the color of the resulting pixel is calculated according to the following","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66537,"byte_end":66626,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ formula (src is the color of the source pixel, dst the color of the destination pixel,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66627,"byte_end":66717,"line_start":32,"line_end":32,"column_start":1,"column_end":91}},{"value":"/ the other variables correspond to the public members, with the equations","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66718,"byte_end":66794,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ being + or - operators):","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66795,"byte_end":66823,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66824,"byte_end":66827,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66828,"byte_end":66841,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ dst.rgb = colorSrcFactor * src.rgb (colorEquation) colorDstFactor * dst.rgb","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66842,"byte_end":66921,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ dst.a   = alphaSrcFactor * src.a   (alphaEquation) alphaDstFactor * dst.a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":66922,"byte_end":66999,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67000,"byte_end":67007,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67008,"byte_end":67011,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All factors and colors are represented as floating point numbers between 0 and 1.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67012,"byte_end":67097,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ Where necessary, the result is clamped to fit in that range.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67098,"byte_end":67162,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67163,"byte_end":67166,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ In SFML, a blend mode can be specified every time you draw a [`Drawable`] object to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67167,"byte_end":67254,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"/ a render target. It is part of the [`RenderStates`] compound that is passed to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67255,"byte_end":67337,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/ [`RenderTarget::draw`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67338,"byte_end":67365,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67366,"byte_end":67369,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Drawable`]: crate::graphics::Drawable","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67370,"byte_end":67413,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ [`RenderStates`]: crate::graphics::RenderStates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67414,"byte_end":67465,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ [`RenderTarget::draw`]: crate::graphics::RenderTarget::draw","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67466,"byte_end":67529,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67560,"byte_end":67580,"line_start":52,"line_end":52,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3444},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68028,"byte_end":68032,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"Zero","qualname":"::graphics::blend_mode::Factor::Zero","value":"Factor::Zero","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (0, 0, 0, 0)\n","sig":null,"attributes":[{"value":"/ (0, 0, 0, 0)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68007,"byte_end":68023,"line_start":69,"line_end":69,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3447},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68063,"byte_end":68066,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"One","qualname":"::graphics::blend_mode::Factor::One","value":"Factor::One","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (1, 1, 1, 1)\n","sig":null,"attributes":[{"value":"/ (1, 1, 1, 1)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68042,"byte_end":68058,"line_start":71,"line_end":71,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3450},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68113,"byte_end":68121,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"SrcColor","qualname":"::graphics::blend_mode::Factor::SrcColor","value":"Factor::SrcColor","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (src.r, src.g, src.b, src.a)\n","sig":null,"attributes":[{"value":"/ (src.r, src.g, src.b, src.a)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68076,"byte_end":68108,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3453},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68183,"byte_end":68199,"line_start":76,"line_end":76,"column_start":5,"column_end":21},"name":"OneMinusSrcColor","qualname":"::graphics::blend_mode::Factor::OneMinusSrcColor","value":"Factor::OneMinusSrcColor","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (1, 1, 1, 1) - (src.r, src.g, src.b, src.a)\n","sig":null,"attributes":[{"value":"/ (1, 1, 1, 1) - (src.r, src.g, src.b, src.a)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68131,"byte_end":68178,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3456},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68246,"byte_end":68254,"line_start":78,"line_end":78,"column_start":5,"column_end":13},"name":"DstColor","qualname":"::graphics::blend_mode::Factor::DstColor","value":"Factor::DstColor","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (dst.r, dst.g, dst.b, dst.a)\n","sig":null,"attributes":[{"value":"/ (dst.r, dst.g, dst.b, dst.a)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68209,"byte_end":68241,"line_start":77,"line_end":77,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3459},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68316,"byte_end":68332,"line_start":80,"line_end":80,"column_start":5,"column_end":21},"name":"OneMinusDstColor","qualname":"::graphics::blend_mode::Factor::OneMinusDstColor","value":"Factor::OneMinusDstColor","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (1, 1, 1, 1) - (dst.r, dst.g, dst.b, dst.a)\n","sig":null,"attributes":[{"value":"/ (1, 1, 1, 1) - (dst.r, dst.g, dst.b, dst.a)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68264,"byte_end":68311,"line_start":79,"line_end":79,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3462},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68379,"byte_end":68387,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"name":"SrcAlpha","qualname":"::graphics::blend_mode::Factor::SrcAlpha","value":"Factor::SrcAlpha","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (src.a, src.a, src.a, src.a)\n","sig":null,"attributes":[{"value":"/ (src.a, src.a, src.a, src.a)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68342,"byte_end":68374,"line_start":81,"line_end":81,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3465},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68449,"byte_end":68465,"line_start":84,"line_end":84,"column_start":5,"column_end":21},"name":"OneMinusSrcAlpha","qualname":"::graphics::blend_mode::Factor::OneMinusSrcAlpha","value":"Factor::OneMinusSrcAlpha","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (1, 1, 1, 1) - (src.a, src.a, src.a, src.a)\n","sig":null,"attributes":[{"value":"/ (1, 1, 1, 1) - (src.a, src.a, src.a, src.a)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68397,"byte_end":68444,"line_start":83,"line_end":83,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3468},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68512,"byte_end":68520,"line_start":86,"line_end":86,"column_start":5,"column_end":13},"name":"DstAlpha","qualname":"::graphics::blend_mode::Factor::DstAlpha","value":"Factor::DstAlpha","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (dst.a, dst.a, dst.a, dst.a)\n","sig":null,"attributes":[{"value":"/ (dst.a, dst.a, dst.a, dst.a)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68475,"byte_end":68507,"line_start":85,"line_end":85,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3471},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68582,"byte_end":68598,"line_start":88,"line_end":88,"column_start":5,"column_end":21},"name":"OneMinusDstAlpha","qualname":"::graphics::blend_mode::Factor::OneMinusDstAlpha","value":"Factor::OneMinusDstAlpha","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" (1, 1, 1, 1) - (dst.a, dst.a, dst.a, dst.a)\n","sig":null,"attributes":[{"value":"/ (1, 1, 1, 1) - (dst.a, dst.a, dst.a, dst.a)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68530,"byte_end":68577,"line_start":87,"line_end":87,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3443},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67994,"byte_end":68000,"line_start":68,"line_end":68,"column_start":10,"column_end":16},"name":"Factor","qualname":"::graphics::blend_mode::Factor","value":"pub enum Factor {\n    Zero = ,\n    One = ,\n    SrcColor = ,\n    OneMinusSrcColor = ,\n    DstColor = ,\n    OneMinusDstColor = ,\n    SrcAlpha = ,\n    OneMinusSrcAlpha = ,\n    DstAlpha = ,\n    OneMinusDstAlpha = ,\n}","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3447},{"krate":0,"index":3450},{"krate":0,"index":3453},{"krate":0,"index":3456},{"krate":0,"index":3459},{"krate":0,"index":3462},{"krate":0,"index":3465},{"krate":0,"index":3468},{"krate":0,"index":3471}],"decl_id":null,"docs":" Enumeration of the blending factors.","sig":null,"attributes":[{"value":"/ Enumeration of the blending factors.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67756,"byte_end":67796,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67797,"byte_end":67800,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The factors are mapped directly to their OpenGL equivalents, specified by","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67801,"byte_end":67878,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ `glBlendFunc()` or `glBlendFuncSeparate()`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67879,"byte_end":67926,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"repr(u32)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67972,"byte_end":67984,"line_start":67,"line_end":67,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3486},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68923,"byte_end":68926,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"Add","qualname":"::graphics::blend_mode::Equation::Add","value":"Equation::Add","parent":{"krate":0,"index":3485},"children":[],"decl_id":null,"docs":" Pixel = Src * SrcFactor + Dst * DstFactor.\n","sig":null,"attributes":[{"value":"/ Pixel = Src * SrcFactor + Dst * DstFactor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68872,"byte_end":68918,"line_start":98,"line_end":98,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3489},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68987,"byte_end":68995,"line_start":101,"line_end":101,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::graphics::blend_mode::Equation::Subtract","value":"Equation::Subtract","parent":{"krate":0,"index":3485},"children":[],"decl_id":null,"docs":" Pixel = Src * SrcFactor - Dst * DstFactor.\n","sig":null,"attributes":[{"value":"/ Pixel = Src * SrcFactor - Dst * DstFactor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68936,"byte_end":68982,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3492},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69056,"byte_end":69071,"line_start":103,"line_end":103,"column_start":5,"column_end":20},"name":"ReverseSubtract","qualname":"::graphics::blend_mode::Equation::ReverseSubtract","value":"Equation::ReverseSubtract","parent":{"krate":0,"index":3485},"children":[],"decl_id":null,"docs":" Pixel = Dst * DstFactor - Src * SrcFactor.\n","sig":null,"attributes":[{"value":"/ Pixel = Dst * DstFactor - Src * SrcFactor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69005,"byte_end":69051,"line_start":102,"line_end":102,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":3485},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68857,"byte_end":68865,"line_start":97,"line_end":97,"column_start":10,"column_end":18},"name":"Equation","qualname":"::graphics::blend_mode::Equation","value":"pub enum Equation { Add = , Subtract = , ReverseSubtract = , }","parent":null,"children":[{"krate":0,"index":3486},{"krate":0,"index":3489},{"krate":0,"index":3492}],"decl_id":null,"docs":" Enumeration of the blending equations.","sig":null,"attributes":[{"value":"/ Enumeration of the blending equations.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68607,"byte_end":68649,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68650,"byte_end":68653,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The equations are mapped directly to their OpenGL equivalents, specified by","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68654,"byte_end":68733,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ `glBlendEquation()` or `glBlendEquationSeparate()`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68734,"byte_end":68789,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"repr(u32)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":68835,"byte_end":68847,"line_start":96,"line_end":96,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69163,"byte_end":69166,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"name":"new","qualname":"<BlendMode>::new","value":"pub const fn new(Factor, Factor, Equation, Factor, Factor, Equation) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BlendMode`\n","sig":null,"attributes":[{"value":"/ Create a new `BlendMode`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69101,"byte_end":69129,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69134,"byte_end":69145,"line_start":108,"line_end":108,"column_start":5,"column_end":16}}]},{"kind":"Const","id":{"krate":0,"index":627},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69768,"byte_end":69773,"line_start":130,"line_end":130,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::graphics::blend_mode::BlendMode::ALPHA","value":"Self","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" \"Alpha\" blend mode\n","sig":null,"attributes":[{"value":"/ \"Alpha\" blend mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69731,"byte_end":69753,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":628},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":70139,"byte_end":70142,"line_start":140,"line_end":140,"column_start":15,"column_end":18},"name":"ADD","qualname":"::graphics::blend_mode::BlendMode::ADD","value":"BlendMode","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" \"Add\" blend mode\n","sig":null,"attributes":[{"value":"/ \"Add\" blend mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":70104,"byte_end":70124,"line_start":139,"line_end":139,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":629},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":70492,"byte_end":70500,"line_start":150,"line_end":150,"column_start":15,"column_end":23},"name":"MULTIPLY","qualname":"::graphics::blend_mode::BlendMode::MULTIPLY","value":"BlendMode","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" \"Multiply\" blend mode\n","sig":null,"attributes":[{"value":"/ \"Multiply\" blend mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":70452,"byte_end":70477,"line_start":149,"line_end":149,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":630},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":70853,"byte_end":70857,"line_start":160,"line_end":160,"column_start":15,"column_end":19},"name":"NONE","qualname":"::graphics::blend_mode::BlendMode::NONE","value":"BlendMode","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" \"None\" blend mode\n","sig":null,"attributes":[{"value":"/ \"None\" blend mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":70817,"byte_end":70838,"line_start":159,"line_end":159,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3506},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71556,"byte_end":71567,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"CircleShape","qualname":"::graphics::circle_shape::CircleShape","value":"CircleShape {  }","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3509}],"decl_id":null,"docs":" Specialized shape representing a circle.\n","sig":null,"attributes":[{"value":"/ Specialized shape representing a circle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71483,"byte_end":71527,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71872,"byte_end":71884,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"with_texture","qualname":"<CircleShape>::with_texture","value":"pub fn with_texture(&'s Texture) -> CircleShape","parent":null,"children":[],"decl_id":null,"docs":" Create a new circle shape initialized with a texture","sig":null,"attributes":[{"value":"/ Create a new circle shape initialized with a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71690,"byte_end":71746,"line_start":21,"line_end":21,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71751,"byte_end":71754,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71759,"byte_end":71774,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"/ * texture - The texture to initialize the `CircleShape` with.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71779,"byte_end":71844,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71849,"byte_end":71860,"line_start":25,"line_end":25,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72346,"byte_end":72349,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<CircleShape>::new","value":"pub fn new(f32, u32) -> CircleShape","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CircleShape` and initialize it.","sig":null,"attributes":[{"value":"/ Create a new `CircleShape` and initialize it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72043,"byte_end":72092,"line_start":32,"line_end":32,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72097,"byte_end":72100,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72105,"byte_end":72121,"line_start":34,"line_end":34,"column_start":5,"column_end":21}},{"value":"/ * radius - The radius of the `CircleShape`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72126,"byte_end":72172,"line_start":35,"line_end":35,"column_start":5,"column_end":51}},{"value":"/ * `point_count` - The number of points to define the `CircleShape`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72177,"byte_end":72247,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72252,"byte_end":72255,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Default value on SFML are radius = 0 / pointCount = 30","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72260,"byte_end":72318,"line_start":38,"line_end":38,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72323,"byte_end":72334,"line_start":39,"line_end":39,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72667,"byte_end":72677,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"set_radius","qualname":"<CircleShape>::set_radius","value":"pub fn set_radius(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set the radius of a circle","sig":null,"attributes":[{"value":"/ Set the radius of a circle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72553,"byte_end":72583,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72588,"byte_end":72591,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72596,"byte_end":72611,"line_start":49,"line_end":49,"column_start":5,"column_end":20}},{"value":"/ * radius - New radius of the circle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72616,"byte_end":72655,"line_start":50,"line_end":50,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72896,"byte_end":72902,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"radius","qualname":"<CircleShape>::radius","value":"pub fn radius(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Set the radius of a circle","sig":null,"attributes":[{"value":"/ Set the radius of a circle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72790,"byte_end":72820,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72825,"byte_end":72828,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Return the radius of the circle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72833,"byte_end":72868,"line_start":57,"line_end":57,"column_start":5,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72873,"byte_end":72884,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73130,"byte_end":73145,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"set_point_count","qualname":"<CircleShape>::set_point_count","value":"pub fn set_point_count(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the number of points of a circle","sig":null,"attributes":[{"value":"/ Set the number of points of a circle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":72997,"byte_end":73037,"line_start":63,"line_end":63,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73042,"byte_end":73045,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73050,"byte_end":73065,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"/ * count - New number of points of the circle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73070,"byte_end":73118,"line_start":66,"line_end":66,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3513},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79226,"byte_end":79231,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Color","qualname":"::graphics::color::Color","value":"","parent":null,"children":[],"decl_id":null,"docs":" Utility type for manpulating RGBA colors","sig":null,"attributes":[{"value":"/ Utility type for manpulating RGBA colors","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79015,"byte_end":79059,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79060,"byte_end":79063,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ `Color` is a simple color type composed of 4 components: Red, Green, Blue, Alpha","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79064,"byte_end":79148,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79149,"byte_end":79169,"line_start":7,"line_end":7,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79586,"byte_end":79589,"line_start":21,"line_end":21,"column_start":18,"column_end":21},"name":"rgb","qualname":"<Color>::rgb","value":"pub const fn rgb(u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a color from its 3 RGB components","sig":null,"attributes":[{"value":"/ Construct a color from its 3 RGB components","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79276,"byte_end":79323,"line_start":12,"line_end":12,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79328,"byte_end":79331,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79336,"byte_end":79351,"line_start":14,"line_end":14,"column_start":5,"column_end":20}},{"value":"/ * red - Red component   (0 .. 255)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79356,"byte_end":79394,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/ * green - -Green component (0 .. 255)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79399,"byte_end":79440,"line_start":16,"line_end":16,"column_start":5,"column_end":46}},{"value":"/ * blue - Blue component  (0 .. 255)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79445,"byte_end":79484,"line_start":17,"line_end":17,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79489,"byte_end":79492,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Return Color object constructed from the components","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79497,"byte_end":79552,"line_start":19,"line_end":19,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79557,"byte_end":79568,"line_start":20,"line_end":20,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80120,"byte_end":80124,"line_start":40,"line_end":40,"column_start":18,"column_end":22},"name":"rgba","qualname":"<Color>::rgba","value":"pub const fn rgba(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a color from its 4 RGBA components","sig":null,"attributes":[{"value":"/ Construct a color from its 4 RGBA components","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79763,"byte_end":79811,"line_start":30,"line_end":30,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79816,"byte_end":79819,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79824,"byte_end":79839,"line_start":32,"line_end":32,"column_start":5,"column_end":20}},{"value":"/ * red - Red component   (0 .. 255)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79844,"byte_end":79882,"line_start":33,"line_end":33,"column_start":5,"column_end":43}},{"value":"/ * green - -Green component (0 .. 255)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79887,"byte_end":79928,"line_start":34,"line_end":34,"column_start":5,"column_end":46}},{"value":"/ * blue - Blue component  (0 .. 255)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79933,"byte_end":79972,"line_start":35,"line_end":35,"column_start":5,"column_end":44}},{"value":"/ * alpha - Alpha component  (0 .. 255)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79977,"byte_end":80018,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80023,"byte_end":80026,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Return Color object constructed from the components","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80031,"byte_end":80086,"line_start":38,"line_end":38,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80091,"byte_end":80102,"line_start":39,"line_end":39,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80380,"byte_end":80383,"line_start":51,"line_end":51,"column_start":18,"column_end":21},"name":"red","qualname":"<Color>::red","value":"pub const fn red(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The red component of this color\n","sig":null,"attributes":[{"value":"/ The red component of this color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80311,"byte_end":80346,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80351,"byte_end":80362,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80497,"byte_end":80504,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"red_mut","qualname":"<Color>::red_mut","value":"pub fn red_mut(&mut Self) -> &mut u8","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to the red component\n","sig":null,"attributes":[{"value":"/ Mutable reference to the red component","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80427,"byte_end":80469,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80474,"byte_end":80485,"line_start":56,"line_end":56,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80633,"byte_end":80638,"line_start":63,"line_end":63,"column_start":18,"column_end":23},"name":"green","qualname":"<Color>::green","value":"pub const fn green(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The green component of this color\n","sig":null,"attributes":[{"value":"/ The green component of this color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80562,"byte_end":80599,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80604,"byte_end":80615,"line_start":62,"line_end":62,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80754,"byte_end":80763,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"green_mut","qualname":"<Color>::green_mut","value":"pub fn green_mut(&mut Self) -> &mut u8","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to the green component\n","sig":null,"attributes":[{"value":"/ Mutable reference to the green component","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80682,"byte_end":80726,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80731,"byte_end":80742,"line_start":68,"line_end":68,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80891,"byte_end":80895,"line_start":75,"line_end":75,"column_start":18,"column_end":22},"name":"blue","qualname":"<Color>::blue","value":"pub const fn blue(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The blue component of this color\n","sig":null,"attributes":[{"value":"/ The blue component of this color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80821,"byte_end":80857,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80862,"byte_end":80873,"line_start":74,"line_end":74,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81010,"byte_end":81018,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"blue_mut","qualname":"<Color>::blue_mut","value":"pub fn blue_mut(&mut Self) -> &mut u8","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to the blue component\n","sig":null,"attributes":[{"value":"/ Mutable reference to the blue component","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80939,"byte_end":80982,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":80987,"byte_end":80998,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81147,"byte_end":81152,"line_start":87,"line_end":87,"column_start":18,"column_end":23},"name":"alpha","qualname":"<Color>::alpha","value":"pub const fn alpha(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The alpha component of this color\n","sig":null,"attributes":[{"value":"/ The alpha component of this color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81076,"byte_end":81113,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81118,"byte_end":81129,"line_start":86,"line_end":86,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81268,"byte_end":81277,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"alpha_mut","qualname":"<Color>::alpha_mut","value":"pub fn alpha_mut(&mut Self) -> &mut u8","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to the alpha component\n","sig":null,"attributes":[{"value":"/ Mutable reference to the alpha component","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81196,"byte_end":81240,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81245,"byte_end":81256,"line_start":92,"line_end":92,"column_start":5,"column_end":16}}]},{"kind":"Const","id":{"krate":0,"index":785},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81376,"byte_end":81381,"line_start":98,"line_end":98,"column_start":15,"column_end":20},"name":"BLACK","qualname":"::graphics::color::Color::BLACK","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Black predefined color\n","sig":null,"attributes":[{"value":"/ Black predefined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81335,"byte_end":81361,"line_start":97,"line_end":97,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":786},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81456,"byte_end":81461,"line_start":101,"line_end":101,"column_start":15,"column_end":20},"name":"WHITE","qualname":"::graphics::color::Color::WHITE","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" White predefined color\n","sig":null,"attributes":[{"value":"/ White predefined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81415,"byte_end":81441,"line_start":100,"line_end":100,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":787},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81540,"byte_end":81543,"line_start":104,"line_end":104,"column_start":15,"column_end":18},"name":"RED","qualname":"::graphics::color::Color::RED","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Red predefined color\n","sig":null,"attributes":[{"value":"/ Red predefined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81501,"byte_end":81525,"line_start":103,"line_end":103,"column_start":5,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":788},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81620,"byte_end":81625,"line_start":107,"line_end":107,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::graphics::color::Color::GREEN","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Green predefined color\n","sig":null,"attributes":[{"value":"/ Green predefined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81579,"byte_end":81605,"line_start":106,"line_end":106,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":789},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81701,"byte_end":81705,"line_start":110,"line_end":110,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::graphics::color::Color::BLUE","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Blue predefined color\n","sig":null,"attributes":[{"value":"/ Blue predefined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81661,"byte_end":81686,"line_start":109,"line_end":109,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":790},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81783,"byte_end":81789,"line_start":113,"line_end":113,"column_start":15,"column_end":21},"name":"YELLOW","qualname":"::graphics::color::Color::YELLOW","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Yellow predefined color\n","sig":null,"attributes":[{"value":"/ Yellow predefined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81741,"byte_end":81768,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":791},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81870,"byte_end":81877,"line_start":116,"line_end":116,"column_start":15,"column_end":22},"name":"MAGENTA","qualname":"::graphics::color::Color::MAGENTA","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Magenta predefined color\n","sig":null,"attributes":[{"value":"/ Magenta predefined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81827,"byte_end":81855,"line_start":115,"line_end":115,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":792},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81955,"byte_end":81959,"line_start":119,"line_end":119,"column_start":15,"column_end":19},"name":"CYAN","qualname":"::graphics::color::Color::CYAN","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Cyan predifined color\n","sig":null,"attributes":[{"value":"/ Cyan predifined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81915,"byte_end":81940,"line_start":118,"line_end":118,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":793},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82043,"byte_end":82054,"line_start":122,"line_end":122,"column_start":15,"column_end":26},"name":"TRANSPARENT","qualname":"::graphics::color::Color::TRANSPARENT","value":"Self","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Tranparent predefined color\n","sig":null,"attributes":[{"value":"/ Tranparent predefined color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":81997,"byte_end":82028,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3528},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84213,"byte_end":84224,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"ConvexShape","qualname":"::graphics::convex_shape::ConvexShape","value":"ConvexShape {  }","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531}],"decl_id":null,"docs":" Specialized shape representing a convex polygon","sig":null,"attributes":[{"value":"/ Specialized shape representing a convex polygon","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":83890,"byte_end":83941,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":83942,"byte_end":83945,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is important to keep in mind that a convex shape must","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":83946,"byte_end":84006,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ always be... convex, otherwise it may not be drawn correctly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84007,"byte_end":84072,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ Moreover, the points must be defined in order; using a random","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84073,"byte_end":84138,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ order would result in an incorrect shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84139,"byte_end":84184,"line_start":18,"line_end":18,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3535},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84437,"byte_end":84454,"line_start":28,"line_end":28,"column_start":12,"column_end":29},"name":"ConvexShapePoints","qualname":"::graphics::convex_shape::ConvexShapePoints","value":"ConvexShapePoints {  }","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3537}],"decl_id":null,"docs":" An iterator over the points of a [`ConvexShape`].\n","sig":null,"attributes":[{"value":"/ An iterator over the points of a [`ConvexShape`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84316,"byte_end":84369,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84387,"byte_end":84425,"line_start":27,"line_end":27,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84701,"byte_end":84704,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<ConvexShape>::new","value":"pub fn new(u32) -> ConvexShape","parent":null,"children":[],"decl_id":null,"docs":" Create a new convex shape","sig":null,"attributes":[{"value":"/ Create a new convex shape","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84548,"byte_end":84577,"line_start":34,"line_end":34,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84582,"byte_end":84585,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84590,"byte_end":84605,"line_start":36,"line_end":36,"column_start":5,"column_end":20}},{"value":"/ * `points_count` - The number of point for the convex shape","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84610,"byte_end":84673,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84678,"byte_end":84689,"line_start":38,"line_end":38,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85287,"byte_end":85299,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"with_texture","qualname":"<ConvexShape>::with_texture","value":"pub fn with_texture(u32, &'s Texture) -> ConvexShape","parent":null,"children":[],"decl_id":null,"docs":" Create a new convex shape with a texture","sig":null,"attributes":[{"value":"/ Create a new convex shape with a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85058,"byte_end":85102,"line_start":50,"line_end":50,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85107,"byte_end":85110,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85115,"byte_end":85130,"line_start":52,"line_end":52,"column_start":5,"column_end":20}},{"value":"/ * texture - The texture to apply to the convex shape","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85135,"byte_end":85191,"line_start":53,"line_end":53,"column_start":5,"column_end":61}},{"value":"/ * `points_count` - The number of point for the convex shape","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85196,"byte_end":85259,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85264,"byte_end":85275,"line_start":55,"line_end":55,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86019,"byte_end":86028,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"set_point","qualname":"<ConvexShape>::set_point","value":"pub fn set_point<P: Into<Vector2f>>(&mut Self, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Set the position of a point.","sig":null,"attributes":[{"value":"/ Set the position of a point.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85485,"byte_end":85517,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85522,"byte_end":85525,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Don't forget that the polygon must remain convex, and the points need to stay ordered!","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85530,"byte_end":85620,"line_start":64,"line_end":64,"column_start":5,"column_end":95}},{"value":"/ [`set_point_count`] must be called first in order to set the total number of points.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85625,"byte_end":85713,"line_start":65,"line_end":65,"column_start":5,"column_end":93}},{"value":"/ The result is undefined if index is out of the valid range.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85718,"byte_end":85781,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85786,"byte_end":85789,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`set_point_count`]: ConvexShape::set_point_count","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85794,"byte_end":85847,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85852,"byte_end":85855,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85860,"byte_end":85875,"line_start":70,"line_end":70,"column_start":5,"column_end":20}},{"value":"/ * index - Index of the point to change, in range `[0 .. get_point_count() - 1]`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85880,"byte_end":85963,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ * point - New position of the point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":85968,"byte_end":86007,"line_start":72,"line_end":72,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86552,"byte_end":86567,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"set_point_count","qualname":"<ConvexShape>::set_point_count","value":"pub fn set_point_count(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the number of points of a convex","sig":null,"attributes":[{"value":"/ Set the number of points of a convex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86419,"byte_end":86459,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86464,"byte_end":86467,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86472,"byte_end":86487,"line_start":88,"line_end":88,"column_start":5,"column_end":20}},{"value":"/ * count - New number of points of the convex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86492,"byte_end":86540,"line_start":89,"line_end":89,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86792,"byte_end":86798,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"points","qualname":"<ConvexShape>::points","value":"pub fn points(&Self) -> ConvexShapePoints","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable iterator over all the points of the `ConvexShape`\n","sig":null,"attributes":[{"value":"/ Return an immutable iterator over all the points of the `ConvexShape`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86691,"byte_end":86764,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":86769,"byte_end":86780,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":999},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93677,"byte_end":93694,"line_start":14,"line_end":14,"column_start":11,"column_end":28},"name":"CustomShapePoints","qualname":"::graphics::custom_shape::CustomShapePoints","value":"CustomShapePoints","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"decl_id":null,"docs":" The points of a custom shape.\n","sig":null,"attributes":[{"value":"/ The points of a custom shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93633,"byte_end":93666,"line_start":13,"line_end":13,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93784,"byte_end":93795,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"point_count","qualname":"::graphics::custom_shape::CustomShapePoints::point_count","value":"pub fn point_count(&Self) -> u32","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":" Gets the total count of points.","sig":null,"attributes":[{"value":"/ Gets the total count of points.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93701,"byte_end":93736,"line_start":15,"line_end":15,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93741,"byte_end":93744,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Return the points count","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93749,"byte_end":93776,"line_start":17,"line_end":17,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94046,"byte_end":94051,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"point","qualname":"::graphics::custom_shape::CustomShapePoints::point","value":"pub fn point(&Self, u32) -> Vector2f","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":" Gets a given point.","sig":null,"attributes":[{"value":"/ Gets a given point.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93816,"byte_end":93839,"line_start":20,"line_end":20,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93844,"byte_end":93847,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Argument","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93852,"byte_end":93866,"line_start":22,"line_end":22,"column_start":5,"column_end":19}},{"value":"/ * point - The index of the point to return","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93871,"byte_end":93917,"line_start":23,"line_end":23,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93922,"byte_end":93925,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Returns a [`Vector2f`] containing the coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93930,"byte_end":93984,"line_start":25,"line_end":25,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93989,"byte_end":93992,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ [`Vector2f`]: crate::system::Vector2f","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":93997,"byte_end":94038,"line_start":27,"line_end":27,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3540},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94157,"byte_end":94168,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"CustomShape","qualname":"::graphics::custom_shape::CustomShape","value":"CustomShape {  }","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544}],"decl_id":null,"docs":" A custom textured shape with outline.\n","sig":null,"attributes":[{"value":"/ A custom textured shape with outline.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94087,"byte_end":94128,"line_start":31,"line_end":31,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94927,"byte_end":94930,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<CustomShape>::new","value":"pub fn new(Box<dyn CustomShapePoints + Send>) -> CustomShape","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CustomShape`","sig":null,"attributes":[{"value":"/ Create a new `CustomShape`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94782,"byte_end":94812,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94817,"byte_end":94820,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94825,"byte_end":94840,"line_start":55,"line_end":55,"column_start":5,"column_end":20}},{"value":"/ * points - Implementation of [`CustomShapePoints`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94845,"byte_end":94899,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94904,"byte_end":94915,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95682,"byte_end":95694,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"with_texture","qualname":"<CustomShape>::with_texture","value":"pub fn with_texture(Box<dyn CustomShapePoints + Send>, &'s Texture)\n-> CustomShape","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CustomShape` with a texture","sig":null,"attributes":[{"value":"/ Create a new `CustomShape` with a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95455,"byte_end":95500,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95505,"byte_end":95508,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95513,"byte_end":95528,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/ * points - Implementation of [`CustomShapePoints`] trait","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95533,"byte_end":95593,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/ * texture - The texture to bind to the `CustomShape`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95598,"byte_end":95654,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95659,"byte_end":95670,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":96284,"byte_end":96290,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"update","qualname":"<CustomShape>::update","value":"pub fn update(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Recompute the internal geometry of a shape","sig":null,"attributes":[{"value":"/ Recompute the internal geometry of a shape","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95914,"byte_end":95960,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95965,"byte_end":95968,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function must be called by specialized shape objects","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":95973,"byte_end":96034,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/ everytime their points change (ie. the result of either","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":96039,"byte_end":96098,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"/ the [`point_count`] or [`point`] callbacks is different).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":96103,"byte_end":96164,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":96169,"byte_end":96172,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`point_count`]: CustomShapePoints::point_count","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":96177,"byte_end":96228,"line_start":96,"line_end":96,"column_start":5,"column_end":56}},{"value":"/ [`point`]: CustomShapePoints::point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":96233,"byte_end":96272,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1071},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/drawable.rs","byte_start":100860,"byte_end":100868,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Drawable","qualname":"::graphics::drawable::Drawable","value":"Drawable","parent":null,"children":[{"krate":0,"index":1072}],"decl_id":null,"docs":" The trait drawable is inherited by each object who can be drawn in a [`RenderTarget`]\n","sig":null,"attributes":[{"value":"/ The trait drawable is inherited by each object who can be drawn in a [`RenderTarget`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/drawable.rs","byte_start":100760,"byte_end":100849,"line_start":3,"line_end":3,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/drawable.rs","byte_start":100933,"byte_end":100937,"line_start":6,"line_end":6,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::drawable::Drawable::draw","value":"pub fn draw<'a:'shader, 'texture, 'shader,\n            'shader_texture>(&'a Self, &mut dyn RenderTarget, &RenderStates)","parent":{"krate":0,"index":1071},"children":[],"decl_id":null,"docs":" Draw a drawable object into a [`RenderTarget`]\n","sig":null,"attributes":[{"value":"/ Draw a drawable object into a [`RenderTarget`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/drawable.rs","byte_start":100875,"byte_end":100925,"line_start":5,"line_end":5,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3548},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103647,"byte_end":103651,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"Font","qualname":"::graphics::font::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":3549}],"decl_id":null,"docs":" Type for loading and manipulating character fonts.","sig":null,"attributes":[{"value":"/ Type for loading and manipulating character fonts.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101403,"byte_end":101457,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101458,"byte_end":101461,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Fonts can be loaded from a file, from memory or from a custom stream,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101462,"byte_end":101535,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ and supports the most common types of fonts.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101536,"byte_end":101584,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101585,"byte_end":101588,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ See the [`from_file`] function for the complete list of supported formats.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101589,"byte_end":101667,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101668,"byte_end":101671,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`from_file`]: Font::from_file","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101672,"byte_end":101706,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101707,"byte_end":101710,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Once it is loaded, a `Font` instance provides three types of information about the font:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101711,"byte_end":101803,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101804,"byte_end":101807,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - Global metrics, such as the line spacing","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101808,"byte_end":101854,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/ - Per-glyph metrics, such as bounding box or kerning","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101855,"byte_end":101911,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ - Pixel representation of glyphs","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101912,"byte_end":101948,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101949,"byte_end":101952,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Fonts alone are not very useful: they hold the font data but cannot make anything useful of it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":101953,"byte_end":102052,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/ To do so you need to use the [`Text`] type, which is able to properly output text with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102053,"byte_end":102143,"line_start":31,"line_end":31,"column_start":1,"column_end":91}},{"value":"/ several options such as character size, style, color, position, rotation, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102144,"byte_end":102226,"line_start":32,"line_end":32,"column_start":1,"column_end":83}},{"value":"/ This separation allows more flexibility and better performances:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102227,"byte_end":102295,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ indeed a `Font` is a heavy resource, and any operation on it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102296,"byte_end":102363,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ slow (often too slow for real-time applications).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102364,"byte_end":102417,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/ On the other side, a [`Text`] is a lightweight object which can combine the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102418,"byte_end":102497,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ glyphs data and metrics of a `Font` to display any text on a render target.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102498,"byte_end":102577,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ Note that it is also possible to bind several [`Text`] instances to the same `Font`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102578,"byte_end":102666,"line_start":38,"line_end":38,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102667,"byte_end":102670,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ It is important to note that the [`Text`] instance doesn't copy the font that it uses,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102671,"byte_end":102761,"line_start":40,"line_end":40,"column_start":1,"column_end":91}},{"value":"/ it only keeps a reference to it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102762,"byte_end":102798,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/ Thus, a `Font` must not be destructed while it is used by a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102799,"byte_end":102862,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/ [`Text`] (i.e. never write a function that uses a local `Font` instance for creating a text).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102863,"byte_end":102960,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102961,"byte_end":102964,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Apart from loading font files, and passing them to instances of [`Text`],","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":102965,"byte_end":103042,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ you should normally not have to deal directly with this type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103043,"byte_end":103108,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/ However, it may be useful to access the font metrics or rasterized glyphs for advanced usage.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103109,"byte_end":103206,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103207,"byte_end":103210,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Note that if the font is a bitmap font, it is not scalable,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103211,"byte_end":103274,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/ thus not all requested sizes will be available to use.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103275,"byte_end":103333,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ This needs to be taken into consideration when using [`Text`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103334,"byte_end":103400,"line_start":51,"line_end":51,"column_start":1,"column_end":67}},{"value":"/ If you need to display text of a certain size, make sure the corresponding bitmap font that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103401,"byte_end":103496,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ supports that size is used.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103497,"byte_end":103528,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103529,"byte_end":103532,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Text`]: crate::graphics::Text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103533,"byte_end":103568,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103586,"byte_end":103624,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103625,"byte_end":103635,"line_start":58,"line_end":58,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104057,"byte_end":104064,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"kerning","qualname":"<Font>::kerning","value":"pub fn kerning(&Self, u32, u32, u32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the kerning value corresponding to a given pair of characters in a font","sig":null,"attributes":[{"value":"/ Get the kerning value corresponding to a given pair of characters in a font","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103695,"byte_end":103774,"line_start":64,"line_end":64,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103779,"byte_end":103782,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103787,"byte_end":103802,"line_start":66,"line_end":66,"column_start":5,"column_end":20}},{"value":"/ * first - Unicode code point of the first character","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103807,"byte_end":103862,"line_start":67,"line_end":67,"column_start":5,"column_end":60}},{"value":"/ * second - Unicode code point of the second character","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103867,"byte_end":103924,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/ * characterSize - Character size, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103929,"byte_end":103976,"line_start":69,"line_end":69,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103981,"byte_end":103984,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Return the kerning offset, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103989,"byte_end":104029,"line_start":71,"line_end":71,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104034,"byte_end":104045,"line_start":72,"line_end":72,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104412,"byte_end":104424,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"line_spacing","qualname":"<Font>::line_spacing","value":"pub fn line_spacing(&Self, u32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the line spacing value","sig":null,"attributes":[{"value":"/ Get the line spacing value","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104223,"byte_end":104253,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104258,"byte_end":104261,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104266,"byte_end":104281,"line_start":79,"line_end":79,"column_start":5,"column_end":20}},{"value":"/ * characterSize - Character size, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104286,"byte_end":104333,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104338,"byte_end":104341,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Return the line spacing, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104346,"byte_end":104384,"line_start":82,"line_end":82,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104389,"byte_end":104400,"line_start":83,"line_end":83,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104855,"byte_end":104860,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"pub fn glyph(&Self, u32, u32, bool, f32) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" Get a glyph in a font","sig":null,"attributes":[{"value":"/ Get a glyph in a font","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104547,"byte_end":104572,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104577,"byte_end":104580,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104585,"byte_end":104600,"line_start":90,"line_end":90,"column_start":5,"column_end":20}},{"value":"/ * codePoint - Unicode code point of the character to get","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104605,"byte_end":104665,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ * characterSize - Character size, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104670,"byte_end":104717,"line_start":92,"line_end":92,"column_start":5,"column_end":52}},{"value":"/ * bold - Retrieve the bold version or the regular one?","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104722,"byte_end":104780,"line_start":93,"line_end":93,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104785,"byte_end":104788,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Return the corresponding glyph","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104793,"byte_end":104827,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":104832,"byte_end":104843,"line_start":96,"line_end":96,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105315,"byte_end":105319,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"info","qualname":"<Font>::info","value":"pub fn info(&Self) -> Info","parent":null,"children":[],"decl_id":null,"docs":" Returns the font information.\n","sig":null,"attributes":[{"value":"/ Returns the font information.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105254,"byte_end":105287,"line_start":114,"line_end":114,"column_start":5,"column_end":38}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105292,"byte_end":105303,"line_start":115,"line_end":115,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105612,"byte_end":105630,"line_start":126,"line_end":126,"column_start":12,"column_end":30},"name":"underline_position","qualname":"<Font>::underline_position","value":"pub fn underline_position(&Self, u32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the underline.\n","sig":null,"attributes":[{"value":"/ Returns the position of the underline.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105542,"byte_end":105584,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105589,"byte_end":105600,"line_start":125,"line_end":125,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105829,"byte_end":105848,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"underline_thickness","qualname":"<Font>::underline_thickness","value":"pub fn underline_thickness(&Self, u32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the thickness of the underline.\n","sig":null,"attributes":[{"value":"/ Returns the thickness of the underline.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105758,"byte_end":105801,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105806,"byte_end":105817,"line_start":130,"line_end":130,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106520,"byte_end":106529,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Font>::from_file","value":"pub fn from_file(&str) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Load the font from a file.","sig":null,"attributes":[{"value":"/ Load the font from a file.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":105977,"byte_end":106007,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106012,"byte_end":106015,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The supported font formats are: TrueType, Type 1, CFF, OpenType, SFNT, X11 PCF,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106020,"byte_end":106103,"line_start":136,"line_end":136,"column_start":5,"column_end":88}},{"value":"/ Windows FNT, BDF, PFR and Type 42.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106108,"byte_end":106146,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ Note that this function know nothing about the standard fonts installed on the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106151,"byte_end":106233,"line_start":138,"line_end":138,"column_start":5,"column_end":87}},{"value":"/ user's system, thus you can't load them directly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106238,"byte_end":106291,"line_start":139,"line_end":139,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106296,"byte_end":106299,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106304,"byte_end":106317,"line_start":141,"line_end":141,"column_start":5,"column_end":18}},{"value":"/ SFML cannot preload all the font data in this function,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106322,"byte_end":106381,"line_start":142,"line_end":142,"column_start":5,"column_end":64}},{"value":"/ so the file has to remain accessible until the `Font` object loads a new font or","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106386,"byte_end":106470,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ is destroyed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106475,"byte_end":106492,"line_start":144,"line_end":144,"column_start":5,"column_end":22}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106497,"byte_end":106508,"line_start":145,"line_end":145,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106960,"byte_end":106971,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<Font>::from_stream","value":"pub fn from_stream<T: Read + Seek>(&mut T) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new font from a stream (a struct implementing Read and Seek)","sig":null,"attributes":[{"value":"/ Create a new font from a stream (a struct implementing Read and Seek)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106745,"byte_end":106818,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106823,"byte_end":106826,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106831,"byte_end":106846,"line_start":154,"line_end":154,"column_start":5,"column_end":20}},{"value":"/ * stream - Your struct, implementing Read and Seek","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106851,"byte_end":106905,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106910,"byte_end":106913,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":106918,"byte_end":106948,"line_start":157,"line_end":157,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107390,"byte_end":107401,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"from_memory","qualname":"<Font>::from_memory","value":"pub fn from_memory(&[u8]) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new font from memory","sig":null,"attributes":[{"value":"/ Create a new font from memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107214,"byte_end":107247,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107252,"byte_end":107255,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107260,"byte_end":107275,"line_start":166,"line_end":166,"column_start":5,"column_end":20}},{"value":"/ * memory -  The in-memory font file","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107280,"byte_end":107319,"line_start":167,"line_end":167,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107324,"byte_end":107327,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107332,"byte_end":107362,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107367,"byte_end":107378,"line_start":170,"line_end":170,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107992,"byte_end":107999,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"texture","qualname":"<Font>::texture","value":"pub fn texture(&mut Self, u32) -> &Texture","parent":null,"children":[],"decl_id":null,"docs":" Get the texture containing the glyphs of a given size in a font","sig":null,"attributes":[{"value":"/ Get the texture containing the glyphs of a given size in a font","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107604,"byte_end":107671,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107676,"byte_end":107679,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107684,"byte_end":107699,"line_start":179,"line_end":179,"column_start":5,"column_end":20}},{"value":"/ * characterSize - Character size, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107704,"byte_end":107751,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107756,"byte_end":107759,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Return the texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107764,"byte_end":107786,"line_start":182,"line_end":182,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107791,"byte_end":107794,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Note: Unfortunately, this method requires mutable access, because CSFML","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107799,"byte_end":107874,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ uses a texture cache or something that it must update every time this function","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107879,"byte_end":107961,"line_start":185,"line_end":185,"column_start":5,"column_end":87}},{"value":"/ is called.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":107966,"byte_end":107980,"line_start":186,"line_end":186,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3553},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":108907,"byte_end":108911,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"Info","qualname":"::graphics::font::Info","value":"Info { family }","parent":null,"children":[{"krate":0,"index":3554}],"decl_id":null,"docs":" Holds various information about a font.\n","sig":null,"attributes":[{"value":"/ Holds various information about a font.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":108835,"byte_end":108878,"line_start":217,"line_end":217,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3554},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":108947,"byte_end":108953,"line_start":221,"line_end":221,"column_start":9,"column_end":15},"name":"family","qualname":"::graphics::font::Info::family","value":"std::string::String","parent":{"krate":0,"index":3553},"children":[],"decl_id":null,"docs":" The font family.\n","sig":null,"attributes":[{"value":"/ The font family.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":108918,"byte_end":108938,"line_start":220,"line_end":220,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1142},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"glsl","qualname":"::graphics::glsl","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":3557},{"krate":0,"index":3562},{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":3567},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1178},{"krate":0,"index":3577},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":1183},{"krate":0,"index":3587},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":1188},{"krate":0,"index":3597},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":1190}],"decl_id":null,"docs":" GLSL types.\n","sig":null,"attributes":[{"value":"/ GLSL types.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109168,"byte_end":109183,"line_start":1,"line_end":1,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":1157},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109333,"byte_end":109337,"line_start":10,"line_end":10,"column_start":10,"column_end":14},"name":"Vec2","qualname":"::graphics::glsl::Vec2","value":"Vector2<f32>","parent":null,"children":[],"decl_id":null,"docs":" 2D float vector (`vec2` in GLSL).\n","sig":null,"attributes":[{"value":"/ 2D float vector (`vec2` in GLSL).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109286,"byte_end":109323,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1158},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109400,"byte_end":109405,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"IVec2","qualname":"::graphics::glsl::IVec2","value":"Vector2<i32>","parent":null,"children":[],"decl_id":null,"docs":" 2D int vector (`ivec2` in GLSL).\n","sig":null,"attributes":[{"value":"/ 2D int vector (`ivec2` in GLSL).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109354,"byte_end":109390,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1159},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109469,"byte_end":109474,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"BVec2","qualname":"::graphics::glsl::BVec2","value":"Vector2<bool>","parent":null,"children":[],"decl_id":null,"docs":" 2D bool vector (`bvec2` in GLSL).\n","sig":null,"attributes":[{"value":"/ 2D bool vector (`bvec2` in GLSL).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109422,"byte_end":109459,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1160},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109539,"byte_end":109543,"line_start":16,"line_end":16,"column_start":10,"column_end":14},"name":"Vec3","qualname":"::graphics::glsl::Vec3","value":"Vector3<f32>","parent":null,"children":[],"decl_id":null,"docs":" 3D float vector (`vec3` in GLSL).\n","sig":null,"attributes":[{"value":"/ 3D float vector (`vec3` in GLSL).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109492,"byte_end":109529,"line_start":15,"line_end":15,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1161},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109606,"byte_end":109611,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"IVec3","qualname":"::graphics::glsl::IVec3","value":"Vector3<i32>","parent":null,"children":[],"decl_id":null,"docs":" 3D int vector (`ivec3` in GLSL).\n","sig":null,"attributes":[{"value":"/ 3D int vector (`ivec3` in GLSL).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109560,"byte_end":109596,"line_start":17,"line_end":17,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109675,"byte_end":109680,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"BVec3","qualname":"::graphics::glsl::BVec3","value":"Vector3<bool>","parent":null,"children":[],"decl_id":null,"docs":" 3D bool vector (`bvec3` in GLSL).\n","sig":null,"attributes":[{"value":"/ 3D bool vector (`bvec3` in GLSL).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109628,"byte_end":109665,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3557},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109773,"byte_end":109777,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Vec4","qualname":"::graphics::glsl::Vec4","value":"Vec4 { x, y, z, w }","parent":null,"children":[{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561}],"decl_id":null,"docs":" GLSL `vec4` type.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109729,"byte_end":109739,"line_start":23,"line_end":23,"column_start":1,"column_end":11}},{"value":"/ GLSL `vec4` type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109740,"byte_end":109761,"line_start":24,"line_end":24,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3558},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109807,"byte_end":109808,"line_start":27,"line_end":27,"column_start":9,"column_end":10},"name":"x","qualname":"::graphics::glsl::Vec4::x","value":"f32","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":" `x` field.\n","sig":null,"attributes":[{"value":"/ `x` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109784,"byte_end":109798,"line_start":26,"line_end":26,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3559},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109842,"byte_end":109843,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"y","qualname":"::graphics::glsl::Vec4::y","value":"f32","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":" `y` field.\n","sig":null,"attributes":[{"value":"/ `y` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109819,"byte_end":109833,"line_start":28,"line_end":28,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3560},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109877,"byte_end":109878,"line_start":31,"line_end":31,"column_start":9,"column_end":10},"name":"z","qualname":"::graphics::glsl::Vec4::z","value":"f32","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":" `z` field.\n","sig":null,"attributes":[{"value":"/ `z` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109854,"byte_end":109868,"line_start":30,"line_end":30,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3561},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109912,"byte_end":109913,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"w","qualname":"::graphics::glsl::Vec4::w","value":"f32","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":" `w` field.\n","sig":null,"attributes":[{"value":"/ `w` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109889,"byte_end":109903,"line_start":32,"line_end":32,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3567},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110454,"byte_end":110459,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"IVec4","qualname":"::graphics::glsl::IVec4","value":"IVec4 { x, y, z, w }","parent":null,"children":[{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3571}],"decl_id":null,"docs":" GLSL `ivec4` type.\n","sig":null,"attributes":[{"value":"/ GLSL `ivec4` type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110420,"byte_end":110442,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3568},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110489,"byte_end":110490,"line_start":62,"line_end":62,"column_start":9,"column_end":10},"name":"x","qualname":"::graphics::glsl::IVec4::x","value":"i32","parent":{"krate":0,"index":3567},"children":[],"decl_id":null,"docs":" `x` field.\n","sig":null,"attributes":[{"value":"/ `x` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110466,"byte_end":110480,"line_start":61,"line_end":61,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3569},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110524,"byte_end":110525,"line_start":64,"line_end":64,"column_start":9,"column_end":10},"name":"y","qualname":"::graphics::glsl::IVec4::y","value":"i32","parent":{"krate":0,"index":3567},"children":[],"decl_id":null,"docs":" `y` field.\n","sig":null,"attributes":[{"value":"/ `y` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110501,"byte_end":110515,"line_start":63,"line_end":63,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3570},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110559,"byte_end":110560,"line_start":66,"line_end":66,"column_start":9,"column_end":10},"name":"z","qualname":"::graphics::glsl::IVec4::z","value":"i32","parent":{"krate":0,"index":3567},"children":[],"decl_id":null,"docs":" `z` field.\n","sig":null,"attributes":[{"value":"/ `z` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110536,"byte_end":110550,"line_start":65,"line_end":65,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3571},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110594,"byte_end":110595,"line_start":68,"line_end":68,"column_start":9,"column_end":10},"name":"w","qualname":"::graphics::glsl::IVec4::w","value":"i32","parent":{"krate":0,"index":3567},"children":[],"decl_id":null,"docs":" `w` field.\n","sig":null,"attributes":[{"value":"/ `w` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110571,"byte_end":110585,"line_start":67,"line_end":67,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3577},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111788,"byte_end":111793,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"BVec4","qualname":"::graphics::glsl::BVec4","value":"BVec4 { x, y, z, w }","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581}],"decl_id":null,"docs":" GLSL `bvec4` type.\n","sig":null,"attributes":[{"value":"/ GLSL `bvec4` type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111754,"byte_end":111776,"line_start":125,"line_end":125,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3578},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111823,"byte_end":111824,"line_start":128,"line_end":128,"column_start":9,"column_end":10},"name":"x","qualname":"::graphics::glsl::BVec4::x","value":"bool","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" `x` field.\n","sig":null,"attributes":[{"value":"/ `x` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111800,"byte_end":111814,"line_start":127,"line_end":127,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3579},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111859,"byte_end":111860,"line_start":130,"line_end":130,"column_start":9,"column_end":10},"name":"y","qualname":"::graphics::glsl::BVec4::y","value":"bool","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" `y` field.\n","sig":null,"attributes":[{"value":"/ `y` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111836,"byte_end":111850,"line_start":129,"line_end":129,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3580},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111895,"byte_end":111896,"line_start":132,"line_end":132,"column_start":9,"column_end":10},"name":"z","qualname":"::graphics::glsl::BVec4::z","value":"bool","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" `z` field.\n","sig":null,"attributes":[{"value":"/ `z` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111872,"byte_end":111886,"line_start":131,"line_end":131,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3581},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111931,"byte_end":111932,"line_start":134,"line_end":134,"column_start":9,"column_end":10},"name":"w","qualname":"::graphics::glsl::BVec4::w","value":"bool","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" `w` field.\n","sig":null,"attributes":[{"value":"/ `w` field.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111908,"byte_end":111922,"line_start":133,"line_end":133,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3587},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112344,"byte_end":112348,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"Mat3","qualname":"::graphics::glsl::Mat3","value":"","parent":null,"children":[],"decl_id":null,"docs":" GLSL `mat3` type.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112270,"byte_end":112280,"line_start":149,"line_end":149,"column_start":1,"column_end":11}},{"value":"/ GLSL `mat3` type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112311,"byte_end":112332,"line_start":151,"line_end":151,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3589},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112349,"byte_end":112361,"line_start":152,"line_end":152,"column_start":17,"column_end":29},"name":"0","qualname":"::graphics::glsl::Mat3::0","value":"[f32; 9]","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3597},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112579,"byte_end":112583,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"Mat4","qualname":"::graphics::glsl::Mat4","value":"","parent":null,"children":[],"decl_id":null,"docs":" GLSL `mat4` type.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112505,"byte_end":112515,"line_start":160,"line_end":160,"column_start":1,"column_end":11}},{"value":"/ GLSL `mat4` type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112546,"byte_end":112567,"line_start":162,"line_end":162,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3599},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112584,"byte_end":112597,"line_start":163,"line_end":163,"column_start":17,"column_end":30},"name":"0","qualname":"::graphics::glsl::Mat4::0","value":"[f32; 16]","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3607},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113264,"byte_end":113269,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::graphics::glyph::Glyph","value":"","parent":null,"children":[],"decl_id":null,"docs":" Structure describing a glyph.","sig":null,"attributes":[{"value":"/ Structure describing a glyph.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":112874,"byte_end":112907,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":112908,"byte_end":112911,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A glyph is the visual representation of a character.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":112912,"byte_end":112968,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":112969,"byte_end":112972,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `Glyph` structure provides the information needed to handle the glyph:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":112973,"byte_end":113051,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113052,"byte_end":113055,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - its coordinates in the font's texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113056,"byte_end":113099,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/ - its bounding rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113100,"byte_end":113128,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ - the offset to apply to get the starting position of the next glyph","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113129,"byte_end":113201,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113232,"byte_end":113252,"line_start":14,"line_end":14,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113396,"byte_end":113403,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"advance","qualname":"<Glyph>::advance","value":"pub fn advance(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Offset to move horizontally to the next character.\n","sig":null,"attributes":[{"value":"/ Offset to move horizontally to the next character.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113314,"byte_end":113368,"line_start":18,"line_end":18,"column_start":5,"column_end":59}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113373,"byte_end":113384,"line_start":19,"line_end":19,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113558,"byte_end":113564,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"bounds","qualname":"<Glyph>::bounds","value":"pub fn bounds(&Self) -> FloatRect","parent":null,"children":[],"decl_id":null,"docs":" Bounding rectangle of the glyph, in coordinates relative to the baseline.\n","sig":null,"attributes":[{"value":"/ Bounding rectangle of the glyph, in coordinates relative to the baseline.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113453,"byte_end":113530,"line_start":23,"line_end":23,"column_start":5,"column_end":82}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113535,"byte_end":113546,"line_start":24,"line_end":24,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113731,"byte_end":113743,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"texture_rect","qualname":"<Glyph>::texture_rect","value":"pub fn texture_rect(&Self) -> IntRect","parent":null,"children":[],"decl_id":null,"docs":" Texture coordinates of the glyph inside the font's texture.\n","sig":null,"attributes":[{"value":"/ Texture coordinates of the glyph inside the font's texture.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113640,"byte_end":113703,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113708,"byte_end":113719,"line_start":29,"line_end":29,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3615},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114147,"byte_end":114152,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Image","qualname":"::graphics::image::Image","value":"Image {  }","parent":null,"children":[{"krate":0,"index":3616}],"decl_id":null,"docs":" Loading, manipulating and saving images.\n","sig":null,"attributes":[{"value":"/ Loading, manipulating and saving images.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114074,"byte_end":114118,"line_start":15,"line_end":15,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114412,"byte_end":114415,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Image>::new","value":"pub fn new(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an image","sig":null,"attributes":[{"value":"/ Create an image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114205,"byte_end":114224,"line_start":22,"line_end":22,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114229,"byte_end":114232,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This image is filled with black pixels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114237,"byte_end":114280,"line_start":24,"line_end":24,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114285,"byte_end":114288,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114293,"byte_end":114308,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/ * width - Width of the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114313,"byte_end":114345,"line_start":27,"line_end":27,"column_start":5,"column_end":37}},{"value":"/ * height - Height of the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114350,"byte_end":114384,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114389,"byte_end":114400,"line_start":29,"line_end":29,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115023,"byte_end":115034,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<Image>::from_stream","value":"pub fn from_stream<T: Read + Seek>(&mut T) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create an image from a custom stream.","sig":null,"attributes":[{"value":"/ Create an image from a custom stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114613,"byte_end":114654,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114659,"byte_end":114662,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The supported image formats are bmp, png, tga, jpg, gif, psd, hdr and pic.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114667,"byte_end":114745,"line_start":38,"line_end":38,"column_start":5,"column_end":83}},{"value":"/ Some format options are not supported, like progressive jpeg.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114750,"byte_end":114815,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ If this function fails, the image is left unchanged.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114820,"byte_end":114876,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114881,"byte_end":114884,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114889,"byte_end":114904,"line_start":42,"line_end":42,"column_start":5,"column_end":20}},{"value":"/ * stream - Your struct, implementing Read and Seek","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114909,"byte_end":114963,"line_start":43,"line_end":43,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114968,"byte_end":114971,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading fails","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114976,"byte_end":115011,"line_start":45,"line_end":45,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115761,"byte_end":115772,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"from_memory","qualname":"<Image>::from_memory","value":"pub fn from_memory(&[u8]) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create an image from a file in memory","sig":null,"attributes":[{"value":"/ Create an image from a file in memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115342,"byte_end":115383,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115388,"byte_end":115391,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The supported image formats are bmp, png, tga, jpg, gif, psd, hdr and pic.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115396,"byte_end":115474,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"/ Some format options are not supported, like progressive jpeg.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115479,"byte_end":115544,"line_start":59,"line_end":59,"column_start":5,"column_end":70}},{"value":"/ If this function fails, the image is left unchanged.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115549,"byte_end":115605,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115610,"byte_end":115613,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115618,"byte_end":115633,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/ * mem - Pointer to the file data in memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115638,"byte_end":115684,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115689,"byte_end":115692,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115697,"byte_end":115733,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":115738,"byte_end":115749,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116281,"byte_end":116291,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"from_color","qualname":"<Image>::from_color","value":"pub fn from_color(u32, u32, Color) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create an image and fill it with a unique color","sig":null,"attributes":[{"value":"/ Create an image and fill it with a unique color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116019,"byte_end":116070,"line_start":76,"line_end":76,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116075,"byte_end":116078,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116083,"byte_end":116098,"line_start":78,"line_end":78,"column_start":5,"column_end":20}},{"value":"/ * width - Width of the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116103,"byte_end":116135,"line_start":79,"line_end":79,"column_start":5,"column_end":37}},{"value":"/ * height - Height of the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116140,"byte_end":116174,"line_start":80,"line_end":80,"column_start":5,"column_end":39}},{"value":"/ * color - Fill color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116179,"byte_end":116203,"line_start":81,"line_end":81,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116208,"byte_end":116211,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if creation fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116216,"byte_end":116253,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116258,"byte_end":116269,"line_start":84,"line_end":84,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116976,"byte_end":116985,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Image>::from_file","value":"pub fn from_file(&str) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create an image from a file on disk","sig":null,"attributes":[{"value":"/ Create an image from a file on disk","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116551,"byte_end":116590,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116595,"byte_end":116598,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The supported image formats are bmp, png, tga, jpg, gif,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116603,"byte_end":116663,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/ psd, hdr and pic. Some format options are not supported,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116668,"byte_end":116728,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/ like progressive jpeg.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116733,"byte_end":116759,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ If this function fails, the image is left unchanged.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116764,"byte_end":116820,"line_start":99,"line_end":99,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116825,"byte_end":116828,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116833,"byte_end":116848,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/ * filename - Path of the image file to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116853,"byte_end":116900,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116905,"byte_end":116908,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading fails","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116913,"byte_end":116948,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":116953,"byte_end":116964,"line_start":105,"line_end":105,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117728,"byte_end":117746,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"create_from_pixels","qualname":"<Image>::create_from_pixels","value":"pub fn create_from_pixels(u32, u32, &[u8]) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create an image from an vector of pixels","sig":null,"attributes":[{"value":"/ Create an image from an vector of pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117276,"byte_end":117320,"line_start":116,"line_end":116,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117325,"byte_end":117328,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The pixel vector is assumed to contain 32-bits RGBA pixels,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117333,"byte_end":117396,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/ and have the given width and height. If not, this is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117401,"byte_end":117457,"line_start":119,"line_end":119,"column_start":5,"column_end":61}},{"value":"/ an undefined behaviour.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117462,"byte_end":117489,"line_start":120,"line_end":120,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117494,"byte_end":117497,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117502,"byte_end":117517,"line_start":122,"line_end":122,"column_start":5,"column_end":20}},{"value":"/ * width - Width of the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117522,"byte_end":117554,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ * height - Height of the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117559,"byte_end":117593,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ * pixels - Vector of pixels to copy to the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117598,"byte_end":117650,"line_start":125,"line_end":125,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117655,"byte_end":117658,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if creation fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117663,"byte_end":117700,"line_start":127,"line_end":127,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":117705,"byte_end":117716,"line_start":128,"line_end":128,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118471,"byte_end":118483,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"save_to_file","qualname":"<Image>::save_to_file","value":"pub fn save_to_file(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Save an image to a file on disk","sig":null,"attributes":[{"value":"/ Save an image to a file on disk","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118016,"byte_end":118051,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118056,"byte_end":118059,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The format of the image is automatically deduced from","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118064,"byte_end":118121,"line_start":140,"line_end":140,"column_start":5,"column_end":62}},{"value":"/ the extension. The supported image formats are bmp, png,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118126,"byte_end":118186,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/ tga and jpg. The destination file is overwritten","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118191,"byte_end":118243,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/ if it already exists. This function fails if the image is empty.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118248,"byte_end":118316,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118321,"byte_end":118324,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118329,"byte_end":118344,"line_start":145,"line_end":145,"column_start":5,"column_end":20}},{"value":"/ * filename - Path of the file to save","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118349,"byte_end":118390,"line_start":146,"line_end":146,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118395,"byte_end":118398,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Return true if saving was successful","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118403,"byte_end":118443,"line_start":148,"line_end":148,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118448,"byte_end":118459,"line_start":149,"line_end":149,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118765,"byte_end":118769,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"size","qualname":"<Image>::size","value":"pub fn size(&Self) -> Vector2u","parent":null,"children":[],"decl_id":null,"docs":" Return the size of an image","sig":null,"attributes":[{"value":"/ Return the size of an image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118664,"byte_end":118695,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118700,"byte_end":118703,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Return the size in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118708,"byte_end":118737,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118742,"byte_end":118753,"line_start":158,"line_end":158,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119242,"byte_end":119264,"line_start":172,"line_end":172,"column_start":12,"column_end":34},"name":"create_mask_from_color","qualname":"<Image>::create_mask_from_color","value":"pub fn create_mask_from_color(&Self, Color, u8)","parent":null,"children":[],"decl_id":null,"docs":" Create a transparency mask from a specified color-key","sig":null,"attributes":[{"value":"/ Create a transparency mask from a specified color-key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118874,"byte_end":118931,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118936,"byte_end":118939,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This function sets the alpha value of every pixel matching","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":118944,"byte_end":119006,"line_start":165,"line_end":165,"column_start":5,"column_end":67}},{"value":"/ the given color to alpha (0 by default), so that they","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119011,"byte_end":119068,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/ become transparent.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119073,"byte_end":119096,"line_start":167,"line_end":167,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119101,"byte_end":119104,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119109,"byte_end":119124,"line_start":169,"line_end":169,"column_start":5,"column_end":20}},{"value":"/ * color - Color to make transparent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119129,"byte_end":119168,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ * alpha - Alpha value to assign to transparent pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119173,"byte_end":119230,"line_start":171,"line_end":171,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119770,"byte_end":119779,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"set_pixel","qualname":"<Image>::set_pixel","value":"pub fn set_pixel(&mut Self, u32, u32, Color)","parent":null,"children":[],"decl_id":null,"docs":" Change the color of a pixel in an image","sig":null,"attributes":[{"value":"/ Change the color of a pixel in an image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119390,"byte_end":119433,"line_start":176,"line_end":176,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119438,"byte_end":119441,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This function doesn't check the validity of the pixel","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119446,"byte_end":119503,"line_start":178,"line_end":178,"column_start":5,"column_end":62}},{"value":"/ coordinates, using out-of-range values will result in","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119508,"byte_end":119565,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ an undefined behaviour.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119570,"byte_end":119597,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119602,"byte_end":119605,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119610,"byte_end":119625,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/ * x - X coordinate of pixel to change","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119630,"byte_end":119671,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ * y - Y coordinate of pixel to change","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119676,"byte_end":119717,"line_start":184,"line_end":184,"column_start":5,"column_end":46}},{"value":"/ * color - New color of the pixel","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119722,"byte_end":119758,"line_start":185,"line_end":185,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120316,"byte_end":120324,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"pixel_at","qualname":"<Image>::pixel_at","value":"pub fn pixel_at(&Self, u32, u32) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Get the color of a pixel in an image","sig":null,"attributes":[{"value":"/ Get the color of a pixel in an image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119902,"byte_end":119942,"line_start":190,"line_end":190,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119947,"byte_end":119950,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This function doesn't check the validity of the pixel","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":119955,"byte_end":120012,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"/ coordinates, using out-of-range values will result in","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120017,"byte_end":120074,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"/ an undefined behaviour.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120079,"byte_end":120106,"line_start":194,"line_end":194,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120111,"byte_end":120114,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120119,"byte_end":120134,"line_start":196,"line_end":196,"column_start":5,"column_end":20}},{"value":"/ * x - X coordinate of pixel to get","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120139,"byte_end":120177,"line_start":197,"line_end":197,"column_start":5,"column_end":43}},{"value":"/ * y - Y coordinate of pixel to get","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120182,"byte_end":120220,"line_start":198,"line_end":198,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120225,"byte_end":120228,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Return the Color of the pixel at coordinates (x, y)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120233,"byte_end":120288,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120293,"byte_end":120304,"line_start":201,"line_end":201,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120507,"byte_end":120517,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"pixel_data","qualname":"<Image>::pixel_data","value":"pub fn pixel_data(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the memory buffer of this image.\n","sig":null,"attributes":[{"value":"/ Return the memory buffer of this image.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120436,"byte_end":120479,"line_start":206,"line_end":206,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120484,"byte_end":120495,"line_start":207,"line_end":207,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120808,"byte_end":120825,"line_start":218,"line_end":218,"column_start":12,"column_end":29},"name":"flip_horizontally","qualname":"<Image>::flip_horizontally","value":"pub fn flip_horizontally(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally (left <-> right)\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally (left <-> right)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120749,"byte_end":120796,"line_start":217,"line_end":217,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120968,"byte_end":120983,"line_start":223,"line_end":223,"column_start":12,"column_end":27},"name":"flip_vertically","qualname":"<Image>::flip_vertically","value":"pub fn flip_vertically(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically (top <-> bottom)\n","sig":null,"attributes":[{"value":"/ Flip an image vertically (top <-> bottom)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":120911,"byte_end":120956,"line_start":222,"line_end":222,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":122026,"byte_end":122036,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"copy_image","qualname":"<Image>::copy_image","value":"pub fn copy_image(&mut Self, &Image, u32, u32, &IntRect, bool)","parent":null,"children":[],"decl_id":null,"docs":" Copy pixels from an image onto another","sig":null,"attributes":[{"value":"/ Copy pixels from an image onto another","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121067,"byte_end":121109,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121114,"byte_end":121117,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function does a slow pixel copy and should not be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121122,"byte_end":121180,"line_start":229,"line_end":229,"column_start":5,"column_end":63}},{"value":"/ used intensively. It can be used to prepare a complex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121185,"byte_end":121242,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ static image from several others, but if you need this","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121247,"byte_end":121305,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/ kind of feature in real-time you'd better use [`RenderTexture`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121310,"byte_end":121378,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121383,"byte_end":121386,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ [`RenderTexture`]: crate::graphics::RenderTexture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121391,"byte_end":121444,"line_start":234,"line_end":234,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121449,"byte_end":121452,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If sourceRect is empty, the whole image is copied.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121457,"byte_end":121511,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/ If applyAlpha is set to true, the transparency of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121516,"byte_end":121569,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/ source pixels is applied. If it is false, the pixels are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121574,"byte_end":121634,"line_start":238,"line_end":238,"column_start":5,"column_end":65}},{"value":"/ copied unchanged with their alpha value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121639,"byte_end":121683,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121688,"byte_end":121691,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121696,"byte_end":121711,"line_start":241,"line_end":241,"column_start":5,"column_end":20}},{"value":"/ * source - Source image to copy","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121716,"byte_end":121751,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/ * destX - X coordinate of the destination position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121756,"byte_end":121810,"line_start":243,"line_end":243,"column_start":5,"column_end":59}},{"value":"/ * destY - Y coordinate of the destination position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121815,"byte_end":121869,"line_start":244,"line_end":244,"column_start":5,"column_end":59}},{"value":"/ * sourceRect - Sub-rectangle of the source image to copy","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121874,"byte_end":121934,"line_start":245,"line_end":245,"column_start":5,"column_end":65}},{"value":"/ * applyAlpha - Should the copy take in account the source transparency?","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":121939,"byte_end":122014,"line_start":246,"line_end":246,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3619},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123453,"byte_end":123466,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PrimitiveType","qualname":"::graphics::primitive_type::PrimitiveType","value":"","parent":null,"children":[],"decl_id":null,"docs":" Types of primitives that a [`VertexArray`] can render.","sig":null,"attributes":[{"value":"/ Types of primitives that a [`VertexArray`] can render.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123117,"byte_end":123175,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123176,"byte_end":123179,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Points and lines have no area, therefore their thickness will always be 1 pixel,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123180,"byte_end":123264,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ regardless the current transform and view.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123265,"byte_end":123311,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123312,"byte_end":123315,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`VertexArray`]: crate::graphics::VertexArray","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123316,"byte_end":123365,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123366,"byte_end":123369,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123370,"byte_end":123390,"line_start":10,"line_end":10,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":1274},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123572,"byte_end":123578,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"name":"POINTS","qualname":"::graphics::primitive_type::PrimitiveType::POINTS","value":"Self","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" List of individual points.\n","sig":null,"attributes":[{"value":"/ List of individual points.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123527,"byte_end":123557,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":1275},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123672,"byte_end":123677,"line_start":18,"line_end":18,"column_start":15,"column_end":20},"name":"LINES","qualname":"::graphics::primitive_type::PrimitiveType::LINES","value":"Self","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" List of individual lines.\n","sig":null,"attributes":[{"value":"/ List of individual lines.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123628,"byte_end":123657,"line_start":17,"line_end":17,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":1276},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123817,"byte_end":123827,"line_start":20,"line_end":20,"column_start":15,"column_end":25},"name":"LINE_STRIP","qualname":"::graphics::primitive_type::PrimitiveType::LINE_STRIP","value":"Self","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" List of connected lines, a point uses the previous point to form a line.\n","sig":null,"attributes":[{"value":"/ List of connected lines, a point uses the previous point to form a line.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123726,"byte_end":123802,"line_start":19,"line_end":19,"column_start":5,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":1277},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123928,"byte_end":123937,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"name":"TRIANGLES","qualname":"::graphics::primitive_type::PrimitiveType::TRIANGLES","value":"Self","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" List of individual triangles.\n","sig":null,"attributes":[{"value":"/ List of individual triangles.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123880,"byte_end":123913,"line_start":21,"line_end":21,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":1278},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":124094,"byte_end":124108,"line_start":24,"line_end":24,"column_start":15,"column_end":29},"name":"TRIANGLE_STRIP","qualname":"::graphics::primitive_type::PrimitiveType::TRIANGLE_STRIP","value":"Self","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" List of connected triangles, a point uses the two previous points to form a triangle.\n","sig":null,"attributes":[{"value":"/ List of connected triangles, a point uses the two previous points to form a triangle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123990,"byte_end":124079,"line_start":23,"line_end":23,"column_start":5,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":1279},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":124294,"byte_end":124306,"line_start":27,"line_end":27,"column_start":15,"column_end":27},"name":"TRIANGLE_FAN","qualname":"::graphics::primitive_type::PrimitiveType::TRIANGLE_FAN","value":"Self","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" List of connected triangles, a point uses the common center\n and the previous point to form a triangle.\n","sig":null,"attributes":[{"value":"/ List of connected triangles, a point uses the common center","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":124165,"byte_end":124228,"line_start":25,"line_end":25,"column_start":5,"column_end":68}},{"value":"/ and the previous point to form a triangle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":124233,"byte_end":124279,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1280},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":124444,"byte_end":124449,"line_start":29,"line_end":29,"column_start":15,"column_end":20},"name":"QUADS","qualname":"::graphics::primitive_type::PrimitiveType::QUADS","value":"Self","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" List of individual quads (deprecated, don't work with OpenGL ES)\n","sig":null,"attributes":[{"value":"/ List of individual quads (deprecated, don't work with OpenGL ES)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":124361,"byte_end":124429,"line_start":28,"line_end":28,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3637},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124739,"byte_end":124743,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Rect","qualname":"::graphics::rect::Rect","value":"Rect { left, top, width, height }","parent":null,"children":[{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3642}],"decl_id":null,"docs":" Utility type for manipulating 2D axis-aligned rectangles.\n","sig":null,"attributes":[{"value":"/ Utility type for manipulating 2D axis-aligned rectangles.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124584,"byte_end":124645,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124646,"byte_end":124656,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3639},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124799,"byte_end":124803,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"left","qualname":"::graphics::rect::Rect::left","value":"T","parent":{"krate":0,"index":3637},"children":[],"decl_id":null,"docs":" Left coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Left coordinate of the rectangle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124753,"byte_end":124790,"line_start":10,"line_end":10,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3640},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124857,"byte_end":124860,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"top","qualname":"::graphics::rect::Rect::top","value":"T","parent":{"krate":0,"index":3637},"children":[],"decl_id":null,"docs":" Top coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Top coordinate of the rectangle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124812,"byte_end":124848,"line_start":12,"line_end":12,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3641},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124905,"byte_end":124910,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"width","qualname":"::graphics::rect::Rect::width","value":"T","parent":{"krate":0,"index":3637},"children":[],"decl_id":null,"docs":" Width of the rectangle.\n","sig":null,"attributes":[{"value":"/ Width of the rectangle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124869,"byte_end":124896,"line_start":14,"line_end":14,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3642},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124956,"byte_end":124962,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"height","qualname":"::graphics::rect::Rect::height","value":"T","parent":{"krate":0,"index":3637},"children":[],"decl_id":null,"docs":" Height of the rectangle.\n","sig":null,"attributes":[{"value":"/ Height of the rectangle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124919,"byte_end":124947,"line_start":16,"line_end":16,"column_start":5,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":1295},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125004,"byte_end":125011,"line_start":21,"line_end":21,"column_start":10,"column_end":17},"name":"IntRect","qualname":"::graphics::rect::IntRect","value":"Rect<i32>","parent":null,"children":[],"decl_id":null,"docs":" A [`Rect`] of `i32`.\n","sig":null,"attributes":[{"value":"/ A [`Rect`] of `i32`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":124970,"byte_end":124994,"line_start":20,"line_end":20,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":1296},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125059,"byte_end":125068,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"FloatRect","qualname":"::graphics::rect::FloatRect","value":"Rect<f32>","parent":null,"children":[],"decl_id":null,"docs":" A [`Rect`] of `f32`.\n","sig":null,"attributes":[{"value":"/ A [`Rect`] of `f32`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125025,"byte_end":125049,"line_start":22,"line_end":22,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125170,"byte_end":125173,"line_start":27,"line_end":27,"column_start":18,"column_end":21},"name":"new","qualname":"<Rect<T>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a rectangle from its coordinates.\n","sig":null,"attributes":[{"value":"/ Construct a rectangle from its coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125105,"byte_end":125152,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125397,"byte_end":125406,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"from_vecs","qualname":"<Rect<T>>::from_vecs","value":"pub fn from_vecs(Vector2<T>, Vector2<T>) -> Rect<T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a rectangle from its position and size.\n","sig":null,"attributes":[{"value":"/ Construct a rectangle from its position and size.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125332,"byte_end":125385,"line_start":36,"line_end":36,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125748,"byte_end":125756,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect<T>>::contains","value":"pub fn contains(Self, Vector2<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a point is inside the rectangle's area.\n","sig":null,"attributes":[{"value":"/ Check if a point is inside the rectangle's area.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125670,"byte_end":125722,"line_start":48,"line_end":48,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125727,"byte_end":125736,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125908,"byte_end":125917,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"contains2","qualname":"<Rect<T>>::contains2","value":"pub fn contains2(Self, T, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a point is inside the rectangle's area.\n","sig":null,"attributes":[{"value":"/ Check if a point is inside the rectangle's area.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125844,"byte_end":125896,"line_start":54,"line_end":54,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":126479,"byte_end":126491,"line_start":67,"line_end":67,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Rect<T>>::intersection","value":"pub fn intersection(Self, &Rect<T>) -> Option<Rect<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the intersection between two rectangles, if any.","sig":null,"attributes":[{"value":"/ Returns the intersection between two rectangles, if any.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":126264,"byte_end":126324,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":126329,"byte_end":126332,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If the rectangles intersect, returns Some filled with the intersection","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":126337,"byte_end":126411,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ of the two rectangles. Otherwise, returns None.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":126416,"byte_end":126467,"line_start":66,"line_end":66,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3671},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":128953,"byte_end":128967,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"RectangleShape","qualname":"::graphics::rectangle_shape::RectangleShape","value":"RectangleShape {  }","parent":null,"children":[{"krate":0,"index":3673},{"krate":0,"index":3674}],"decl_id":null,"docs":" Specialized shape representing a rectangle\n","sig":null,"attributes":[{"value":"/ Specialized shape representing a rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":128878,"byte_end":128924,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129162,"byte_end":129165,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<RectangleShape>::new","value":"pub fn new() -> RectangleShape","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `RectangleShape`.\n","sig":null,"attributes":[{"value":"/ Returns a new `RectangleShape`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129099,"byte_end":129134,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129139,"byte_end":129150,"line_start":22,"line_end":22,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129542,"byte_end":129554,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"with_texture","qualname":"<RectangleShape>::with_texture","value":"pub fn with_texture(&'s Texture) -> RectangleShape","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `RectangleShape` with the provided texture.\n","sig":null,"attributes":[{"value":"/ Returns a new `RectangleShape` with the provided texture.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129453,"byte_end":129514,"line_start":32,"line_end":32,"column_start":5,"column_end":66}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129519,"byte_end":129530,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129791,"byte_end":129800,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"with_size","qualname":"<RectangleShape>::with_size","value":"pub fn with_size(Vector2f) -> RectangleShape","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `RectangleShape` with the provided size.\n","sig":null,"attributes":[{"value":"/ Returns a new `RectangleShape` with the provided size.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129705,"byte_end":129763,"line_start":40,"line_end":40,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129768,"byte_end":129779,"line_start":41,"line_end":41,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130054,"byte_end":130058,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"size","qualname":"<RectangleShape>::size","value":"pub fn size(&Self) -> Vector2f","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a rectangle shape","sig":null,"attributes":[{"value":"/ Get the size of a rectangle shape","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129933,"byte_end":129970,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129975,"byte_end":129978,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Return the height Size of the rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129983,"byte_end":130026,"line_start":50,"line_end":50,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130031,"byte_end":130042,"line_start":51,"line_end":51,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130306,"byte_end":130314,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"set_size","qualname":"<RectangleShape>::set_size","value":"pub fn set_size<S: Into<Vector2f>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a rectangle shape","sig":null,"attributes":[{"value":"/ Set the size of a rectangle shape","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130182,"byte_end":130219,"line_start":56,"line_end":56,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130224,"byte_end":130227,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130232,"byte_end":130247,"line_start":58,"line_end":58,"column_start":5,"column_end":20}},{"value":"/ * size - The new size of the rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130252,"byte_end":130294,"line_start":59,"line_end":59,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3678},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138644,"byte_end":138656,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"RenderStates","qualname":"::graphics::render_states::RenderStates","value":"RenderStates {  }","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684}],"decl_id":null,"docs":" Define the states used for drawing to a [`RenderTarget`].","sig":null,"attributes":[{"value":"/ Define the states used for drawing to a [`RenderTarget`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136313,"byte_end":136374,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136375,"byte_end":136378,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ There are four global states that can be applied to the drawn objects:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136379,"byte_end":136453,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136454,"byte_end":136457,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - the blend mode: how pixels of the object are blended with the background","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136458,"byte_end":136536,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ - the transform: how the object is positioned/rotated/scaled","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136537,"byte_end":136601,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ - the texture: what image is mapped to the object","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136602,"byte_end":136655,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ - the shader: what custom effect is applied to the object","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136656,"byte_end":136717,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136718,"byte_end":136721,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ High-level objects such as sprites or text force some of these states when they are drawn.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136722,"byte_end":136816,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ For example, a sprite will set its own texture, so that you don't have to care about it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136817,"byte_end":136908,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ when drawing the sprite.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136909,"byte_end":136937,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136938,"byte_end":136941,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The transform is a special case: sprites, texts and shapes","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":136942,"byte_end":137004,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/ (and it's a good idea to do it with your own drawable classes too) combine their transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137005,"byte_end":137099,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ with the one that is passed in the `RenderStates` structure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137100,"byte_end":137164,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ So that you can use a \"global\" transform on top of each object's transform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137165,"byte_end":137244,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137245,"byte_end":137248,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Most objects, especially high-level drawables, can be drawn directly without defining","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137249,"byte_end":137338,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"/ render states explicitly – the default set of states is ok in most cases.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137339,"byte_end":137418,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137419,"byte_end":137422,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137423,"byte_end":137436,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # use sfml::graphics::RenderTarget;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137437,"byte_end":137476,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ # let window: sfml::graphics::RenderWindow = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137477,"byte_end":137543,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ # let sprite: sfml::graphics::Sprite = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137544,"byte_end":137604,"line_start":29,"line_end":29,"column_start":1,"column_end":61}},{"value":"/ window.draw(&sprite);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137605,"byte_end":137630,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137631,"byte_end":137638,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137639,"byte_end":137642,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ To draw with a specific render state, use [`RenderTarget::draw_with_renderstates`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137643,"byte_end":137730,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137731,"byte_end":137734,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137735,"byte_end":137748,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # use sfml::graphics::*;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137749,"byte_end":137777,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # let mut window: RenderWindow = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137778,"byte_end":137832,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ # let shader: Shader = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137833,"byte_end":137877,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ # let sprite: Sprite = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137878,"byte_end":137922,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/ let mut states = RenderStates::default();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137923,"byte_end":137968,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ states.set_shader(Some(&shader));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":137969,"byte_end":138006,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ window.draw_with_renderstates(&sprite, &states);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138007,"byte_end":138059,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138060,"byte_end":138067,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138068,"byte_end":138071,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ When you're inside the `draw` function of a drawable object (implementing [`Drawable`]),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138072,"byte_end":138164,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/ you can either pass the render states unmodified, or change some of them.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138165,"byte_end":138242,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ For example, a transformable object will combine the current transform with its own transform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138243,"byte_end":138341,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/ A sprite will set its texture. Etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138342,"byte_end":138381,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138382,"byte_end":138385,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`RenderTarget`]: crate::graphics::RenderTarget","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138386,"byte_end":138437,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ [`RenderTarget::draw_with_renderstates`]: crate::graphics::RenderTarget::draw_with_renderstates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138438,"byte_end":138537,"line_start":51,"line_end":51,"column_start":1,"column_end":100}},{"value":"/ [`Drawable`]: crate::graphics::Drawable","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138538,"byte_end":138581,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138612,"byte_end":138632,"line_start":54,"line_end":54,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":139298,"byte_end":139301,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<RenderStates>::new","value":"pub fn new(BlendMode, Transform, Option<&'texture Texture>,\n           Option<&'shader Shader>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `RenderStates`.","sig":null,"attributes":[{"value":"/ Create a new `RenderStates`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138940,"byte_end":138972,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138977,"byte_end":138980,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138985,"byte_end":139000,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"/ * `blend_mode` - The `BlendMode`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":139005,"byte_end":139041,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/ * transform - The transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":139046,"byte_end":139077,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/ * texture - Some(texture) if there is a texture, None otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":139082,"byte_end":139149,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ * shader - Some(shader) if there is a shader, None otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":139154,"byte_end":139218,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":139223,"byte_end":139226,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Return a new default `RenderStates`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":139231,"byte_end":139270,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":139275,"byte_end":139286,"line_start":71,"line_end":71,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140212,"byte_end":140226,"line_start":100,"line_end":100,"column_start":12,"column_end":26},"name":"set_blend_mode","qualname":"<RenderStates>::set_blend_mode","value":"pub fn set_blend_mode(&mut Self, BlendMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the blending mode\n","sig":null,"attributes":[{"value":"/ Sets the blending mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140174,"byte_end":140200,"line_start":99,"line_end":99,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140355,"byte_end":140368,"line_start":104,"line_end":104,"column_start":12,"column_end":25},"name":"set_transform","qualname":"<RenderStates>::set_transform","value":"pub fn set_transform(&mut Self, Transform)","parent":null,"children":[],"decl_id":null,"docs":" Sets the transform\n","sig":null,"attributes":[{"value":"/ Sets the transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140321,"byte_end":140343,"line_start":103,"line_end":103,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140493,"byte_end":140504,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"set_texture","qualname":"<RenderStates>::set_texture","value":"pub fn set_texture(&mut Self, Option<&'texture Texture>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the texture\n","sig":null,"attributes":[{"value":"/ Sets the texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140461,"byte_end":140481,"line_start":107,"line_end":107,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140719,"byte_end":140729,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"set_shader","qualname":"<RenderStates>::set_shader","value":"pub fn set_shader(&mut Self, Option<&'shader Shader>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the shader\n","sig":null,"attributes":[{"value":"/ Sets the shader","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140688,"byte_end":140707,"line_start":114,"line_end":114,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":1474},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":141117,"byte_end":141124,"line_start":127,"line_end":127,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::graphics::render_states::RenderStates::<'static, 'static, 'static>::DEFAULT","value":"Self","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" The default render state.","sig":null,"attributes":[{"value":"/ The default render state.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140981,"byte_end":141010,"line_start":124,"line_end":124,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":141015,"byte_end":141018,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This can be used in a const context, unlike the [`Default`] implementation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":141023,"byte_end":141102,"line_start":126,"line_end":126,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":1535},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142849,"byte_end":142861,"line_start":29,"line_end":29,"column_start":11,"column_end":23},"name":"RenderTarget","qualname":"::graphics::render_target::RenderTarget","value":"RenderTarget","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559}],"decl_id":null,"docs":" Trait for all render targets (window, texture, ...)","sig":null,"attributes":[{"value":"/ Trait for all render targets (window, texture, ...)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":141804,"byte_end":141859,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":141860,"byte_end":141863,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `RenderTarget` defines the common behavior of all the 2D render targets usable in","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":141864,"byte_end":141949,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/ the graphics module.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":141950,"byte_end":141974,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":141975,"byte_end":141978,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It makes it possible to draw 2D entities like sprites, shapes, text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":141979,"byte_end":142050,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ without using any OpenGL command directly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142051,"byte_end":142097,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142098,"byte_end":142101,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A `RenderTarget` is also able to use views ([`View`]), which are a kind of 2D cameras.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142102,"byte_end":142192,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ With views you can globally scroll, rotate or zoom everything that is drawn,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142193,"byte_end":142273,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ without having to transform every single entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142274,"byte_end":142326,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/ See the documentation of [`View`] for more details and sample pieces of code about this type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142327,"byte_end":142424,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142425,"byte_end":142428,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ On top of that, render targets are still able to render direct OpenGL stuff.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142429,"byte_end":142509,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ It is even possible to mix together OpenGL calls and regular SFML drawing commands.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142510,"byte_end":142597,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ When doing so, make sure that OpenGL states are not messed up by calling the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142598,"byte_end":142678,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ [`push_gl_states`]/[`pop_gl_states`] functions.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142679,"byte_end":142730,"line_start":25,"line_end":25,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142731,"byte_end":142734,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`push_gl_states`]: RenderTarget::push_gl_states","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142735,"byte_end":142787,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ [`pop_gl_states`]: RenderTarget::pop_gl_states","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142788,"byte_end":142838,"line_start":28,"line_end":28,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142896,"byte_end":142901,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"clear","qualname":"::graphics::render_target::RenderTarget::clear","value":"pub fn clear(&mut Self, Color)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" clear the screen\n","sig":null,"attributes":[{"value":"/ clear the screen","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142868,"byte_end":142888,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142968,"byte_end":142972,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"view","qualname":"::graphics::render_target::RenderTarget::view","value":"pub fn view(&Self) -> &View","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" return the current view\n","sig":null,"attributes":[{"value":"/ return the current view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142933,"byte_end":142960,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143049,"byte_end":143061,"line_start":37,"line_end":37,"column_start":8,"column_end":20},"name":"default_view","qualname":"::graphics::render_target::RenderTarget::default_view","value":"pub fn default_view(&Self) -> &View","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" get the default view for the render target\n","sig":null,"attributes":[{"value":"/ get the default view for the render target","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":142995,"byte_end":143041,"line_start":36,"line_end":36,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143124,"byte_end":143132,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"set_view","qualname":"::graphics::render_target::RenderTarget::set_view","value":"pub fn set_view(&mut Self, &View)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" set a new view to the target\n","sig":null,"attributes":[{"value":"/ set a new view to the target","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143084,"byte_end":143116,"line_start":39,"line_end":39,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143212,"byte_end":143220,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"viewport","qualname":"::graphics::render_target::RenderTarget::viewport","value":"pub fn viewport(&Self, &View) -> IntRect","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" get the viewport of the render target\n","sig":null,"attributes":[{"value":"/ get the viewport of the render target","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143163,"byte_end":143204,"line_start":42,"line_end":42,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144513,"byte_end":144532,"line_start":72,"line_end":72,"column_start":8,"column_end":27},"name":"map_pixel_to_coords","qualname":"::graphics::render_target::RenderTarget::map_pixel_to_coords","value":"pub fn map_pixel_to_coords(&Self, Vector2i, &View) -> Vector2f","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Convert a point from window coordinates to world coordinates","sig":null,"attributes":[{"value":"/ Convert a point from window coordinates to world coordinates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143258,"byte_end":143322,"line_start":45,"line_end":45,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143327,"byte_end":143330,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This function finds the 2D position that matches the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143335,"byte_end":143391,"line_start":47,"line_end":47,"column_start":5,"column_end":61}},{"value":"/ given pixel of the render-window. In other words, it does","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143396,"byte_end":143457,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/ the inverse of what the graphics card does, to find the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143462,"byte_end":143521,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/ initial position of a rendered pixel.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143526,"byte_end":143567,"line_start":50,"line_end":50,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143572,"byte_end":143575,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Initially, both coordinate systems (world units and target pixels)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143580,"byte_end":143650,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ match perfectly. But if you define a custom view or resize your","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143655,"byte_end":143722,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ render window, this assertion is not true anymore, ie. a point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143727,"byte_end":143793,"line_start":54,"line_end":54,"column_start":5,"column_end":71}},{"value":"/ located at (10, 50) in your render-window may map to the point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143798,"byte_end":143864,"line_start":55,"line_end":55,"column_start":5,"column_end":71}},{"value":"/ (150, 75) in your 2D world -- if the view is translated by (140, 25).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143869,"byte_end":143942,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143947,"byte_end":143950,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function is typically used to find which point (or object) is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":143955,"byte_end":144025,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ located below the mouse cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144030,"byte_end":144065,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144070,"byte_end":144073,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This version uses a custom view for calculations, see the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144078,"byte_end":144139,"line_start":61,"line_end":61,"column_start":5,"column_end":66}},{"value":"/ [`map_pixel_to_coords_current_view`](RenderTarget::map_pixel_to_coords_current_view)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144144,"byte_end":144232,"line_start":62,"line_end":62,"column_start":5,"column_end":93}},{"value":"/ function if you want to use the current view of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144237,"byte_end":144292,"line_start":63,"line_end":63,"column_start":5,"column_end":60}},{"value":"/ render-window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144297,"byte_end":144315,"line_start":64,"line_end":64,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144320,"byte_end":144323,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144328,"byte_end":144343,"line_start":66,"line_end":66,"column_start":5,"column_end":20}},{"value":"/ * point - Pixel to convert","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144348,"byte_end":144378,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/ * view - The view to use for converting the point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144383,"byte_end":144436,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144441,"byte_end":144444,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Return the converted point, in \"world\" units","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144449,"byte_end":144497,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144502,"byte_end":144505,"line_start":71,"line_end":71,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145722,"byte_end":145754,"line_start":98,"line_end":98,"column_start":8,"column_end":40},"name":"map_pixel_to_coords_current_view","qualname":"::graphics::render_target::RenderTarget::map_pixel_to_coords_current_view","value":"pub fn map_pixel_to_coords_current_view(&Self, Vector2i) -> Vector2f","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Convert a point from window coordinates to world coordinates","sig":null,"attributes":[{"value":"/ Convert a point from window coordinates to world coordinates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144588,"byte_end":144652,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144657,"byte_end":144660,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This function finds the 2D position that matches the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144665,"byte_end":144721,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/ given pixel of the render-window. In other words, it does","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144726,"byte_end":144787,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ the inverse of what the graphics card does, to find the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144792,"byte_end":144851,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/ initial position of a rendered pixel.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144856,"byte_end":144897,"line_start":79,"line_end":79,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144902,"byte_end":144905,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Initially, both coordinate systems (world units and target pixels)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144910,"byte_end":144980,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ match perfectly. But if you define a custom view or resize your","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":144985,"byte_end":145052,"line_start":82,"line_end":82,"column_start":5,"column_end":72}},{"value":"/ render window, this assertion is not true anymore, ie. a point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145057,"byte_end":145123,"line_start":83,"line_end":83,"column_start":5,"column_end":71}},{"value":"/ located at (10, 50) in your render-window may map to the point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145128,"byte_end":145194,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/ (150, 75) in your 2D world -- if the view is translated by (140, 25).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145199,"byte_end":145272,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145277,"byte_end":145280,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This function is typically used to find which point (or object) is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145285,"byte_end":145355,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ located below the mouse cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145360,"byte_end":145395,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145400,"byte_end":145403,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This version uses the current view for calculations, see the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145408,"byte_end":145472,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/ [`map_pixel_to_coords`](RenderTarget::map_pixel_to_coords) function if","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145477,"byte_end":145551,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ you want to use a custom view.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145556,"byte_end":145590,"line_start":92,"line_end":92,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145595,"byte_end":145598,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145603,"byte_end":145618,"line_start":94,"line_end":94,"column_start":5,"column_end":20}},{"value":"/ * point - Pixel to convert","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145623,"byte_end":145653,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145658,"byte_end":145661,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Return the converted point, in \"world\" units","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145666,"byte_end":145714,"line_start":97,"line_end":97,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146893,"byte_end":146912,"line_start":121,"line_end":121,"column_start":8,"column_end":27},"name":"map_coords_to_pixel","qualname":"::graphics::render_target::RenderTarget::map_coords_to_pixel","value":"pub fn map_coords_to_pixel(&Self, Vector2f, &View) -> Vector2i","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Convert a point from world coordinates to window coordinates","sig":null,"attributes":[{"value":"/ Convert a point from world coordinates to window coordinates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145797,"byte_end":145861,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145866,"byte_end":145869,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This function finds the pixel of the render-window that matches","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145874,"byte_end":145941,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/ the given 2D point. In other words, it goes through the same process","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":145946,"byte_end":146018,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ as the graphics card, to compute the final position of a rendered point.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146023,"byte_end":146099,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146104,"byte_end":146107,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Initially, both coordinate systems (world units and target pixels)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146112,"byte_end":146182,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ match perfectly. But if you define a custom view or resize your","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146187,"byte_end":146254,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/ render window, this assertion is not true anymore, ie. a point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146259,"byte_end":146325,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ located at (150, 75) in your 2D world may map to the pixel","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146330,"byte_end":146392,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"/ (10, 50) of your render-window -- if the view is translated by (140, 25).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146397,"byte_end":146474,"line_start":110,"line_end":110,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146479,"byte_end":146482,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This version uses a custom view for calculations, see","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146487,"byte_end":146544,"line_start":112,"line_end":112,"column_start":5,"column_end":62}},{"value":"/ [`map_coords_to_pixel_current_view`](RenderTarget::map_coords_to_pixel_current_view)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146549,"byte_end":146637,"line_start":113,"line_end":113,"column_start":5,"column_end":93}},{"value":"/ if you want to use the current view of the render-window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146642,"byte_end":146703,"line_start":114,"line_end":114,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146708,"byte_end":146711,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146716,"byte_end":146731,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/ * point - Point to convert","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146736,"byte_end":146766,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/ * view - The view to use for converting the point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146771,"byte_end":146824,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146829,"byte_end":146832,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Return the converted point, in \"world\" units","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146837,"byte_end":146885,"line_start":120,"line_end":120,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148102,"byte_end":148134,"line_start":147,"line_end":147,"column_start":8,"column_end":40},"name":"map_coords_to_pixel_current_view","qualname":"::graphics::render_target::RenderTarget::map_coords_to_pixel_current_view","value":"pub fn map_coords_to_pixel_current_view(&Self, Vector2f) -> Vector2i","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Convert a point from window coordinates to world coordinates","sig":null,"attributes":[{"value":"/ Convert a point from window coordinates to world coordinates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":146968,"byte_end":147032,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147037,"byte_end":147040,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function finds the 2D position that matches the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147045,"byte_end":147101,"line_start":125,"line_end":125,"column_start":5,"column_end":61}},{"value":"/ given pixel of the render-window. In other words, it does","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147106,"byte_end":147167,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ the inverse of what the graphics card does, to find the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147172,"byte_end":147231,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ initial position of a rendered pixel.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147236,"byte_end":147277,"line_start":128,"line_end":128,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147282,"byte_end":147285,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Initially, both coordinate systems (world units and target pixels)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147290,"byte_end":147360,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ match perfectly. But if you define a custom view or resize your","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147365,"byte_end":147432,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/ render window, this assertion is not true anymore, ie. a point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147437,"byte_end":147503,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/ located at (10, 50) in your render-window may map to the point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147508,"byte_end":147574,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/ (150, 75) in your 2D world -- if the view is translated by (140, 25).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147579,"byte_end":147652,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147657,"byte_end":147660,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This function is typically used to find which point (or object) is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147665,"byte_end":147735,"line_start":136,"line_end":136,"column_start":5,"column_end":75}},{"value":"/ located below the mouse cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147740,"byte_end":147775,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147780,"byte_end":147783,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This version uses the current view for calculations, see the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147788,"byte_end":147852,"line_start":139,"line_end":139,"column_start":5,"column_end":69}},{"value":"/ [`map_pixel_to_coords`](RenderTarget::map_pixel_to_coords) function if","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147857,"byte_end":147931,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ you want to use a custom view.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147936,"byte_end":147970,"line_start":141,"line_end":141,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147975,"byte_end":147978,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":147983,"byte_end":147998,"line_start":143,"line_end":143,"column_start":5,"column_end":20}},{"value":"/ * point - Pixel to convert","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148003,"byte_end":148033,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148038,"byte_end":148041,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Return the converted point, in \"world\" units","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148046,"byte_end":148094,"line_start":146,"line_end":146,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148294,"byte_end":148298,"line_start":153,"line_end":153,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::render_target::RenderTarget::draw","value":"pub fn draw(&mut Self, &dyn Drawable)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw a drawable object to the render target","sig":null,"attributes":[{"value":"/ Draw a drawable object to the render target","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148177,"byte_end":148224,"line_start":149,"line_end":149,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148229,"byte_end":148232,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148237,"byte_end":148252,"line_start":151,"line_end":151,"column_start":5,"column_end":20}},{"value":"/ * object - Object to draw","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148257,"byte_end":148286,"line_start":152,"line_end":152,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148549,"byte_end":148571,"line_start":160,"line_end":160,"column_start":8,"column_end":30},"name":"draw_with_renderstates","qualname":"::graphics::render_target::RenderTarget::draw_with_renderstates","value":"pub fn draw_with_renderstates(&mut Self, &dyn Drawable, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw a drawable object to the render-target with a [`RenderStates`]","sig":null,"attributes":[{"value":"/ Draw a drawable object to the render-target with a [`RenderStates`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148339,"byte_end":148410,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148415,"byte_end":148418,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148423,"byte_end":148438,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ * object - Object to draw","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148443,"byte_end":148472,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ * renderStates - The renderStates to associate to the object","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148477,"byte_end":148541,"line_start":159,"line_end":159,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148825,"byte_end":148829,"line_start":167,"line_end":167,"column_start":8,"column_end":12},"name":"size","qualname":"::graphics::render_target::RenderTarget::size","value":"pub fn size(&Self) -> Vector2u","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Get the size of the rendering region of a window","sig":null,"attributes":[{"value":"/ Get the size of the rendering region of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148642,"byte_end":148694,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148699,"byte_end":148702,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The size doesn't include the titlebar and borders of the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148707,"byte_end":148775,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148780,"byte_end":148783,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Return the size in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148788,"byte_end":148817,"line_start":166,"line_end":166,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149795,"byte_end":149809,"line_start":187,"line_end":187,"column_start":8,"column_end":22},"name":"push_gl_states","qualname":"::graphics::render_target::RenderTarget::push_gl_states","value":"pub fn push_gl_states(&mut Self)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Save the current OpenGL render states and matrices","sig":null,"attributes":[{"value":"/ Save the current OpenGL render states and matrices","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148855,"byte_end":148909,"line_start":169,"line_end":169,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148914,"byte_end":148917,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ This function can be used when you mix SFML drawing","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148922,"byte_end":148977,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/ and direct OpenGL rendering. Combined with `pop_gl_states`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":148982,"byte_end":149045,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ it ensures that:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149050,"byte_end":149070,"line_start":173,"line_end":173,"column_start":5,"column_end":25}},{"value":"/ SFML's internal states are not messed up by your OpenGL code","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149075,"byte_end":149139,"line_start":174,"line_end":174,"column_start":5,"column_end":69}},{"value":"/ and that your OpenGL states are not modified by a call to a SFML function","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149144,"byte_end":149221,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149226,"byte_end":149229,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function is quite expensive: it saves all the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149234,"byte_end":149298,"line_start":177,"line_end":177,"column_start":5,"column_end":69}},{"value":"/ possible OpenGL states and matrices, even the ones you","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149303,"byte_end":149361,"line_start":178,"line_end":178,"column_start":5,"column_end":63}},{"value":"/ don't care about. Therefore it should be used wisely.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149366,"byte_end":149423,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ It is provided for convenience, but the best results will","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149428,"byte_end":149489,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/ be achieved if you handle OpenGL states yourself (because","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149494,"byte_end":149555,"line_start":181,"line_end":181,"column_start":5,"column_end":66}},{"value":"/ you know which states have really changed, and need to be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149560,"byte_end":149621,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/ saved and restored). Take a look at the [`reset_gl_states`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149626,"byte_end":149689,"line_start":183,"line_end":183,"column_start":5,"column_end":68}},{"value":"/ function if you do so.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149694,"byte_end":149720,"line_start":184,"line_end":184,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149725,"byte_end":149728,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`reset_gl_states`]: RenderTarget::reset_gl_states","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149733,"byte_end":149787,"line_start":186,"line_end":186,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149901,"byte_end":149914,"line_start":190,"line_end":190,"column_start":8,"column_end":21},"name":"pop_gl_states","qualname":"::graphics::render_target::RenderTarget::pop_gl_states","value":"pub fn pop_gl_states(&mut Self)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Restore the previously saved OpenGL render states and matrices\n","sig":null,"attributes":[{"value":"/ Restore the previously saved OpenGL render states and matrices","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149827,"byte_end":149893,"line_start":189,"line_end":189,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150444,"byte_end":150459,"line_start":202,"line_end":202,"column_start":8,"column_end":23},"name":"reset_gl_states","qualname":"::graphics::render_target::RenderTarget::reset_gl_states","value":"pub fn reset_gl_states(&mut Self)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Reset the internal OpenGL states so that the target is ready for drawing","sig":null,"attributes":[{"value":"/ Reset the internal OpenGL states so that the target is ready for drawing","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":149932,"byte_end":150008,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150013,"byte_end":150016,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function can be used when you mix SFML drawing","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150021,"byte_end":150076,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/ and direct OpenGL rendering, if you choose not to use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150081,"byte_end":150138,"line_start":195,"line_end":195,"column_start":5,"column_end":62}},{"value":"/ [`push_gl_states`]/[`pop_gl_states`]. It makes sure that all OpenGL","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150143,"byte_end":150214,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ states needed by SFML are set, so that subsequent draw()","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150219,"byte_end":150279,"line_start":197,"line_end":197,"column_start":5,"column_end":65}},{"value":"/ calls will work as expected.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150284,"byte_end":150316,"line_start":198,"line_end":198,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150321,"byte_end":150324,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ [`push_gl_states`]: RenderTarget::push_gl_states","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150329,"byte_end":150381,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/ [`pop_gl_states`]: RenderTarget::pop_gl_states","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150386,"byte_end":150436,"line_start":201,"line_end":201,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150498,"byte_end":150507,"line_start":205,"line_end":205,"column_start":8,"column_end":17},"name":"draw_text","qualname":"::graphics::render_target::RenderTarget::draw_text","value":"pub fn draw_text(&Self, &Text, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw Text\n","sig":null,"attributes":[{"value":"/ Draw Text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150477,"byte_end":150490,"line_start":204,"line_end":204,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150575,"byte_end":150585,"line_start":208,"line_end":208,"column_start":8,"column_end":18},"name":"draw_shape","qualname":"::graphics::render_target::RenderTarget::draw_shape","value":"pub fn draw_shape(&Self, &CustomShape, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw Shape\n","sig":null,"attributes":[{"value":"/ Draw Shape","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150553,"byte_end":150567,"line_start":207,"line_end":207,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150662,"byte_end":150673,"line_start":211,"line_end":211,"column_start":8,"column_end":19},"name":"draw_sprite","qualname":"::graphics::render_target::RenderTarget::draw_sprite","value":"pub fn draw_sprite(&Self, &Sprite, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw Sprite\n","sig":null,"attributes":[{"value":"/ Draw Sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150639,"byte_end":150654,"line_start":210,"line_end":210,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150753,"byte_end":150770,"line_start":214,"line_end":214,"column_start":8,"column_end":25},"name":"draw_circle_shape","qualname":"::graphics::render_target::RenderTarget::draw_circle_shape","value":"pub fn draw_circle_shape(&Self, &CircleShape, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw `CircleShape`\n","sig":null,"attributes":[{"value":"/ Draw `CircleShape`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150723,"byte_end":150745,"line_start":213,"line_end":213,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150864,"byte_end":150884,"line_start":217,"line_end":217,"column_start":8,"column_end":28},"name":"draw_rectangle_shape","qualname":"::graphics::render_target::RenderTarget::draw_rectangle_shape","value":"pub fn draw_rectangle_shape(&Self, &RectangleShape, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw `RectangleShape`\n","sig":null,"attributes":[{"value":"/ Draw `RectangleShape`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150831,"byte_end":150856,"line_start":216,"line_end":216,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150981,"byte_end":150998,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"draw_convex_shape","qualname":"::graphics::render_target::RenderTarget::draw_convex_shape","value":"pub fn draw_convex_shape(&Self, &ConvexShape, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw `ConvexShape`\n","sig":null,"attributes":[{"value":"/ Draw `ConvexShape`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":150951,"byte_end":150973,"line_start":219,"line_end":219,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":151089,"byte_end":151106,"line_start":223,"line_end":223,"column_start":8,"column_end":25},"name":"draw_vertex_array","qualname":"::graphics::render_target::RenderTarget::draw_vertex_array","value":"pub fn draw_vertex_array(&Self, &VertexArray, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw `VertexArray`\n","sig":null,"attributes":[{"value":"/ Draw `VertexArray`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":151059,"byte_end":151081,"line_start":222,"line_end":222,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":151198,"byte_end":151216,"line_start":226,"line_end":226,"column_start":8,"column_end":26},"name":"draw_vertex_buffer","qualname":"::graphics::render_target::RenderTarget::draw_vertex_buffer","value":"pub fn draw_vertex_buffer(&Self, &VertexBuffer, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Draw `VertexBuffer`\n","sig":null,"attributes":[{"value":"/ Draw `VertexBuffer`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":151167,"byte_end":151190,"line_start":225,"line_end":225,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":151306,"byte_end":151321,"line_start":229,"line_end":229,"column_start":8,"column_end":23},"name":"draw_primitives","qualname":"::graphics::render_target::RenderTarget::draw_primitives","value":"pub fn draw_primitives(&Self, &[Vertex], PrimitiveType, &RenderStates)","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" draw primitives\n","sig":null,"attributes":[{"value":"/ draw primitives","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_target.rs","byte_start":151279,"byte_end":151298,"line_start":228,"line_end":228,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3699},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":151888,"byte_end":151901,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"RenderTexture","qualname":"::graphics::render_texture::RenderTexture","value":"RenderTexture {  }","parent":null,"children":[{"krate":0,"index":3700}],"decl_id":null,"docs":" Target for off-screen 2D rendering into a texture\n","sig":null,"attributes":[{"value":"/ Target for off-screen 2D rendering into a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":151806,"byte_end":151859,"line_start":14,"line_end":14,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152359,"byte_end":152362,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<RenderTexture>::new","value":"pub fn new(u32, u32, bool) -> Option<RenderTexture>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new render texture","sig":null,"attributes":[{"value":"/ Construct a new render texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":151979,"byte_end":152013,"line_start":21,"line_end":21,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152018,"byte_end":152021,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152026,"byte_end":152041,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"/ * width - Width of the render texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152046,"byte_end":152087,"line_start":24,"line_end":24,"column_start":5,"column_end":46}},{"value":"/ * height - Height of the render texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152092,"byte_end":152135,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"/ * depthBuffer - Do you want a depth-buffer attached?","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152140,"byte_end":152196,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/                 (useful only if you're doing 3D OpenGL on the rendertexture)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152201,"byte_end":152281,"line_start":27,"line_end":27,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152286,"byte_end":152289,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if creation fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152294,"byte_end":152331,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152336,"byte_end":152347,"line_start":30,"line_end":30,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153307,"byte_end":153320,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_settings","qualname":"<RenderTexture>::with_settings","value":"pub fn with_settings(u32, u32, &ContextSettings) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `RenderTexture` with the given `ContextSettings`.","sig":null,"attributes":[{"value":"/ Create a `RenderTexture` with the given `ContextSettings`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152720,"byte_end":152782,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152787,"byte_end":152790,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Useful if you want to enable multi-sampling or use the render-texture for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152795,"byte_end":152872,"line_start":45,"line_end":45,"column_start":5,"column_end":82}},{"value":"/ OpenGL rendering that requires a depth or stencil buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152877,"byte_end":152938,"line_start":46,"line_end":46,"column_start":5,"column_end":66}},{"value":"/ Otherwise it is unnecessary, and you should call [`RenderTexture::new`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":152943,"byte_end":153019,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153024,"byte_end":153027,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153032,"byte_end":153048,"line_start":49,"line_end":49,"column_start":5,"column_end":21}},{"value":"/ * width - Width of the render-texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153053,"byte_end":153094,"line_start":50,"line_end":50,"column_start":5,"column_end":46}},{"value":"/ * height - Height of the render-texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153099,"byte_end":153142,"line_start":51,"line_end":51,"column_start":5,"column_end":48}},{"value":"/ * settings - Additional settings for the underlying OpenGL texture and context","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153147,"byte_end":153229,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153234,"byte_end":153237,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if creation fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153242,"byte_end":153279,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153284,"byte_end":153295,"line_start":55,"line_end":55,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153704,"byte_end":153711,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"display","qualname":"<RenderTexture>::display","value":"pub fn display(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of the target texture\n","sig":null,"attributes":[{"value":"/ Update the contents of the target texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153647,"byte_end":153692,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153977,"byte_end":153987,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"set_active","qualname":"<RenderTexture>::set_active","value":"pub fn set_active(&mut Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Activate or deactivate a render texture as the current target for rendering","sig":null,"attributes":[{"value":"/ Activate or deactivate a render texture as the current target for rendering","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153801,"byte_end":153880,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153885,"byte_end":153888,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153893,"byte_end":153908,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"/ * active - true to activate, false to deactivate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":153913,"byte_end":153965,"line_start":75,"line_end":75,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154273,"byte_end":154280,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"texture","qualname":"<RenderTexture>::texture","value":"pub fn texture(&Self) -> &Texture","parent":null,"children":[],"decl_id":null,"docs":" Get the target texture of a render texture","sig":null,"attributes":[{"value":"/ Get the target texture of a render texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154157,"byte_end":154203,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154208,"byte_end":154211,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Return the target texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154216,"byte_end":154245,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154250,"byte_end":154261,"line_start":84,"line_end":84,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154675,"byte_end":154685,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"set_smooth","qualname":"<RenderTexture>::set_smooth","value":"pub fn set_smooth(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the smooth filter on a render texture","sig":null,"attributes":[{"value":"/ Enable or disable the smooth filter on a render texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154511,"byte_end":154570,"line_start":91,"line_end":91,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154575,"byte_end":154578,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154583,"byte_end":154598,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"/ * smooth - true to enable smoothing, false to disable it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154603,"byte_end":154663,"line_start":94,"line_end":94,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155000,"byte_end":155009,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"is_smooth","qualname":"<RenderTexture>::is_smooth","value":"pub fn is_smooth(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether the smooth filter is enabled or not for a render texture","sig":null,"attributes":[{"value":"/ Tell whether the smooth filter is enabled or not for a render texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154822,"byte_end":154895,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154900,"byte_end":154903,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Return true if smoothing is enabled, false if it is disabled","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154908,"byte_end":154972,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":154977,"byte_end":154988,"line_start":102,"line_end":102,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155278,"byte_end":155290,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"set_repeated","qualname":"<RenderTexture>::set_repeated","value":"pub fn set_repeated(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable texture repeating.","sig":null,"attributes":[{"value":"/ Enable or disable texture repeating.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155119,"byte_end":155159,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155164,"byte_end":155167,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This function is similar to `Texture::setRepeated`. This parameter is disabled by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155172,"byte_end":155266,"line_start":108,"line_end":108,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155531,"byte_end":155542,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"is_repeated","qualname":"<RenderTexture>::is_repeated","value":"pub fn is_repeated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether the texture is repeated or not.\n","sig":null,"attributes":[{"value":"/ Tell whether the texture is repeated or not.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155455,"byte_end":155503,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155508,"byte_end":155519,"line_start":115,"line_end":115,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":156243,"byte_end":156258,"line_start":130,"line_end":130,"column_start":19,"column_end":34},"name":"generate_mipmap","qualname":"<RenderTexture>::generate_mipmap","value":"pub unsafe fn generate_mipmap(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Generate a mipmap using the current texture data.","sig":null,"attributes":[{"value":"/ Generate a mipmap using the current texture data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155654,"byte_end":155707,"line_start":119,"line_end":119,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155712,"byte_end":155715,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`Texture::generate_mipmap`] and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155720,"byte_end":155784,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ operates on the texture used as the target for drawing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155789,"byte_end":155848,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155853,"byte_end":155856,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155861,"byte_end":155873,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155878,"byte_end":155881,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Be aware that any draw operation may modify the base level image data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155886,"byte_end":155960,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ For this reason, calling this function only makes sense after all drawing is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":155965,"byte_end":156045,"line_start":127,"line_end":127,"column_start":5,"column_end":85}},{"value":"/ completed and display has been called. Not calling display after subsequent drawing","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":156050,"byte_end":156137,"line_start":128,"line_end":128,"column_start":5,"column_end":92}},{"value":"/ will lead to __undefined behavior__ if a mipmap had been previously generated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":156142,"byte_end":156224,"line_start":129,"line_end":129,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":3703},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162378,"byte_end":162390,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"RenderWindow","qualname":"::graphics::render_window::RenderWindow","value":"RenderWindow {  }","parent":null,"children":[{"krate":0,"index":3704}],"decl_id":null,"docs":" [`Window`] that can serve as a target for 2D drawing.","sig":null,"attributes":[{"value":"/ [`Window`] that can serve as a target for 2D drawing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162086,"byte_end":162143,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162144,"byte_end":162147,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `RenderWindow` is the main type of the graphics module.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162148,"byte_end":162207,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ It defines an OS window that can be painted using the other classes","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162208,"byte_end":162279,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ of the graphics module.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162280,"byte_end":162307,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162308,"byte_end":162311,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Window`]: crate::window::Window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162312,"byte_end":162349,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":163356,"byte_end":163359,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<RenderWindow>::new","value":"pub fn new<V: Into<VideoMode>, S: SfStrConv>(V, S, Style, &ContextSettings)\n-> RenderWindow","parent":null,"children":[],"decl_id":null,"docs":" Construct a new render window","sig":null,"attributes":[{"value":"/ Construct a new render window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162465,"byte_end":162498,"line_start":27,"line_end":27,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162503,"byte_end":162506,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function creates the render window with the size and pixel","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162511,"byte_end":162578,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/ depth defined in mode. An optional style can be passed to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162583,"byte_end":162644,"line_start":30,"line_end":30,"column_start":5,"column_end":66}},{"value":"/ customize the look and behaviour of the window (borders,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162649,"byte_end":162709,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/ title bar, resizable, closable, ...). If style contains","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162714,"byte_end":162773,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/ [`Style::FULLSCREEN`], then mode must be a valid video mode.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162778,"byte_end":162842,"line_start":33,"line_end":33,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162847,"byte_end":162850,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The fourth parameter is a pointer to a structure specifying","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162855,"byte_end":162918,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/ advanced OpenGL context settings such as antialiasing,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162923,"byte_end":162981,"line_start":36,"line_end":36,"column_start":5,"column_end":63}},{"value":"/ depth-buffer bits, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162986,"byte_end":163013,"line_start":37,"line_end":37,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":163018,"byte_end":163021,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":163026,"byte_end":163041,"line_start":39,"line_end":39,"column_start":5,"column_end":20}},{"value":"/ * mode - Video mode to use (defines the width, height and depth of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":163046,"byte_end":163120,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/                             rendering area of the render window)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":163125,"byte_end":163193,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ * title - Title of the render window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":163198,"byte_end":163238,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/ * style - Window style","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":163243,"byte_end":163269,"line_start":43,"line_end":43,"column_start":5,"column_end":31}},{"value":"/ * settings - Additional settings for the underlying OpenGL context","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":163274,"byte_end":163344,"line_start":44,"line_end":44,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164815,"byte_end":164826,"line_start":85,"line_end":85,"column_start":19,"column_end":30},"name":"from_handle","qualname":"<RenderWindow>::from_handle","value":"pub unsafe fn from_handle(Handle, &ContextSettings) -> RenderWindow","parent":null,"children":[],"decl_id":null,"docs":" Create a render window from an existing platform-specific window handle","sig":null,"attributes":[{"value":"/ Create a render window from an existing platform-specific window handle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164077,"byte_end":164152,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164157,"byte_end":164160,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function creates a render window based on an existing platform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164165,"byte_end":164236,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ specific window handle which has been allocated outside of SFML. This is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164241,"byte_end":164317,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ only intended to be used in cases where you need to integrate SFML with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164322,"byte_end":164397,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ some other windowing library.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164402,"byte_end":164435,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164440,"byte_end":164443,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164448,"byte_end":164460,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164465,"byte_end":164468,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to ensure that it is called with a valid window handle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164473,"byte_end":164566,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164571,"byte_end":164574,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164579,"byte_end":164594,"line_start":80,"line_end":80,"column_start":5,"column_end":20}},{"value":"/ * handle - The handle to the platform-specific window handle to use for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164599,"byte_end":164674,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/            the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164679,"byte_end":164705,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ * settings - Additional settings for the underlying OpenGL context","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164710,"byte_end":164780,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":164785,"byte_end":164796,"line_start":84,"line_end":84,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165595,"byte_end":165608,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"system_handle","qualname":"<RenderWindow>::system_handle","value":"pub fn system_handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get the OS-specific handle of the window.","sig":null,"attributes":[{"value":"/ Get the OS-specific handle of the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165215,"byte_end":165260,"line_start":96,"line_end":96,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165265,"byte_end":165268,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The type of the returned handle is Handle, which is a typedef to the handle type defined by the OS.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165273,"byte_end":165376,"line_start":98,"line_end":98,"column_start":5,"column_end":108}},{"value":"/ You shouldn't need to use this function, unless you have very specific stuff to implement that SFML","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165381,"byte_end":165484,"line_start":99,"line_end":99,"column_start":5,"column_end":108}},{"value":"/ doesn't support, or implement a temporary workaround until a bug is fixed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165489,"byte_end":165567,"line_start":100,"line_end":100,"column_start":5,"column_end":83}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165572,"byte_end":165583,"line_start":101,"line_end":101,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165990,"byte_end":165998,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"set_icon","qualname":"<RenderWindow>::set_icon","value":"pub fn set_icon(&mut Self, u32, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Change a render window's icon\n pixels must be an array of width x height pixels in 32-bits RGBA format.","sig":null,"attributes":[{"value":"/ Change a render window's icon","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165714,"byte_end":165747,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ pixels must be an array of width x height pixels in 32-bits RGBA format.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165752,"byte_end":165828,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165833,"byte_end":165836,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165841,"byte_end":165856,"line_start":109,"line_end":109,"column_start":5,"column_end":20}},{"value":"/ * width - Icon's width, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165861,"byte_end":165898,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ * height - Icon's height, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165903,"byte_end":165942,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/ * pixels - Vector of pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":165947,"byte_end":165978,"line_start":112,"line_end":112,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166642,"byte_end":166652,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"poll_event","qualname":"<RenderWindow>::poll_event","value":"pub fn poll_event(&mut Self) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Pop the event on top of event queue, if any, and return it","sig":null,"attributes":[{"value":"/ Pop the event on top of event queue, if any, and return it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166162,"byte_end":166224,"line_start":117,"line_end":117,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166229,"byte_end":166232,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function is not blocking: if there's no pending event then","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166237,"byte_end":166304,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ it will return `None`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166309,"byte_end":166335,"line_start":120,"line_end":120,"column_start":5,"column_end":31}},{"value":"/ Note that more than one event may be present in the event queue,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166340,"byte_end":166408,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/ thus you should always call this function in a loop","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166413,"byte_end":166468,"line_start":122,"line_end":122,"column_start":5,"column_end":60}},{"value":"/ to make sure that you process every pending event.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166473,"byte_end":166527,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166532,"byte_end":166535,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(event)` if an event was returned, or `None` if the event queue was empty","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":166540,"byte_end":166630,"line_start":125,"line_end":125,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167469,"byte_end":167479,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"wait_event","qualname":"<RenderWindow>::wait_event","value":"pub fn wait_event(&mut Self) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Wait for an event and return it","sig":null,"attributes":[{"value":"/ Wait for an event and return it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167028,"byte_end":167063,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167068,"byte_end":167071,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function is blocking: if there's no pending event then","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167076,"byte_end":167139,"line_start":140,"line_end":140,"column_start":5,"column_end":68}},{"value":"/ it will wait until an event is received.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167144,"byte_end":167188,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167193,"byte_end":167196,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This function is typically used when you have a thread that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167201,"byte_end":167264,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/ is dedicated to events handling: you want to make this thread","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167269,"byte_end":167334,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ sleep as long as no new event is received.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167339,"byte_end":167385,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167390,"byte_end":167393,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(event)` or `None` if an error has occured","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167398,"byte_end":167457,"line_start":147,"line_end":147,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168202,"byte_end":168207,"line_start":167,"line_end":167,"column_start":12,"column_end":17},"name":"close","qualname":"<RenderWindow>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close a render window and destroy all the attached resources","sig":null,"attributes":[{"value":"/ Close a render window and destroy all the attached resources","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167855,"byte_end":167919,"line_start":160,"line_end":160,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167924,"byte_end":167927,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ After calling this method, the Window object remains","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167932,"byte_end":167988,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ valid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":167993,"byte_end":168003,"line_start":163,"line_end":163,"column_start":5,"column_end":15}},{"value":"/ All other functions such as `poll_event` or display","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168008,"byte_end":168063,"line_start":164,"line_end":164,"column_start":5,"column_end":60}},{"value":"/ will still work (i.e. you don't have to test `is_open`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168068,"byte_end":168126,"line_start":165,"line_end":165,"column_start":5,"column_end":63}},{"value":"/ every time), and will have no effect on closed windows.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168131,"byte_end":168190,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168551,"byte_end":168558,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"is_open","qualname":"<RenderWindow>::is_open","value":"pub fn is_open(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not a window is opened","sig":null,"attributes":[{"value":"/ Tell whether or not a window is opened","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168318,"byte_end":168360,"line_start":173,"line_end":173,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168365,"byte_end":168368,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This function returns whether or not the window exists.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168373,"byte_end":168432,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/ Note that a hidden window `(set_visible(false))` will return","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168437,"byte_end":168501,"line_start":176,"line_end":176,"column_start":5,"column_end":69}},{"value":"/ true.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168506,"byte_end":168515,"line_start":177,"line_end":177,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168520,"byte_end":168523,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168528,"byte_end":168539,"line_start":179,"line_end":179,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168911,"byte_end":168918,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"display","qualname":"<RenderWindow>::display","value":"pub fn display(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Display on screen what has been rendered to the window so far","sig":null,"attributes":[{"value":"/ Display on screen what has been rendered to the window so far","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168665,"byte_end":168730,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168735,"byte_end":168738,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function is typically called after all OpenGL rendering","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168743,"byte_end":168807,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ has been done for the current frame, in order to show","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168812,"byte_end":168869,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/ it on screen.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168874,"byte_end":168891,"line_start":188,"line_end":188,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":168896,"byte_end":168899,"line_start":189,"line_end":189,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169404,"byte_end":169423,"line_start":203,"line_end":203,"column_start":12,"column_end":31},"name":"set_framerate_limit","qualname":"<RenderWindow>::set_framerate_limit","value":"pub fn set_framerate_limit(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Limit the framerate to a maximum fixed frequency","sig":null,"attributes":[{"value":"/ Limit the framerate to a maximum fixed frequency","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169010,"byte_end":169062,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169067,"byte_end":169070,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If a limit is set, the window will use a small delay after","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169075,"byte_end":169137,"line_start":196,"line_end":196,"column_start":5,"column_end":67}},{"value":"/ each call to [`RenderWindow::display`] to ensure that the current frame","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169142,"byte_end":169217,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ lasted long enough to match the framerate limit.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169222,"byte_end":169274,"line_start":198,"line_end":198,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169279,"byte_end":169282,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169287,"byte_end":169302,"line_start":200,"line_end":200,"column_start":5,"column_end":20}},{"value":"/ * limit - Framerate limit, in frames per seconds (use 0 to disable limit)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169307,"byte_end":169384,"line_start":201,"line_end":201,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169389,"byte_end":169392,"line_start":202,"line_end":202,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169938,"byte_end":169946,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"settings","qualname":"<RenderWindow>::settings","value":"pub fn settings(&Self) -> ContextSettings","parent":null,"children":[],"decl_id":null,"docs":" Get the settings of the OpenGL context of a window","sig":null,"attributes":[{"value":"/ Get the settings of the OpenGL context of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169544,"byte_end":169598,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169603,"byte_end":169606,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that these settings may be different from what was","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169611,"byte_end":169670,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/ passed to the [`RenderWindow::new`] function,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169675,"byte_end":169724,"line_start":210,"line_end":210,"column_start":5,"column_end":54}},{"value":"/ if one or more settings were not supported. In this case,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169729,"byte_end":169790,"line_start":211,"line_end":211,"column_start":5,"column_end":66}},{"value":"/ SFML chose the closest match.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169795,"byte_end":169828,"line_start":212,"line_end":212,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169833,"byte_end":169836,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Return a structure containing the OpenGL context settings","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169841,"byte_end":169902,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169907,"byte_end":169910,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":169915,"byte_end":169926,"line_start":216,"line_end":216,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170182,"byte_end":170191,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"set_title","qualname":"<RenderWindow>::set_title","value":"pub fn set_title<S: SfStrConv>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Change the title of a window","sig":null,"attributes":[{"value":"/ Change the title of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170074,"byte_end":170106,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170111,"byte_end":170114,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170119,"byte_end":170134,"line_start":223,"line_end":223,"column_start":5,"column_end":20}},{"value":"/ * title - New title","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170139,"byte_end":170162,"line_start":224,"line_end":224,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170167,"byte_end":170170,"line_start":225,"line_end":225,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170516,"byte_end":170527,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"set_visible","qualname":"<RenderWindow>::set_visible","value":"pub fn set_visible(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Show or hide a window","sig":null,"attributes":[{"value":"/ Show or hide a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170381,"byte_end":170406,"line_start":232,"line_end":232,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170411,"byte_end":170414,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170419,"byte_end":170434,"line_start":234,"line_end":234,"column_start":5,"column_end":20}},{"value":"/ * visible - true to show the window, false to hide it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170439,"byte_end":170496,"line_start":235,"line_end":235,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170501,"byte_end":170504,"line_start":236,"line_end":236,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170810,"byte_end":170834,"line_start":248,"line_end":248,"column_start":12,"column_end":36},"name":"set_mouse_cursor_visible","qualname":"<RenderWindow>::set_mouse_cursor_visible","value":"pub fn set_mouse_cursor_visible(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Show or hide the mouse cursor","sig":null,"attributes":[{"value":"/ Show or hide the mouse cursor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170686,"byte_end":170719,"line_start":243,"line_end":243,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170724,"byte_end":170727,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170732,"byte_end":170747,"line_start":245,"line_end":245,"column_start":5,"column_end":20}},{"value":"/ * visible - true to  false to hide","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170752,"byte_end":170790,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":170795,"byte_end":170798,"line_start":247,"line_end":247,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171299,"byte_end":171323,"line_start":261,"line_end":261,"column_start":12,"column_end":36},"name":"set_mouse_cursor_grabbed","qualname":"<RenderWindow>::set_mouse_cursor_grabbed","value":"pub fn set_mouse_cursor_grabbed(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Grab or release the mouse cursor.","sig":null,"attributes":[{"value":"/ Grab or release the mouse cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171051,"byte_end":171088,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171093,"byte_end":171096,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ If set, grabs the mouse cursor inside this window's client area so it may no longer be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171101,"byte_end":171191,"line_start":259,"line_end":259,"column_start":5,"column_end":95}},{"value":"/ moved outside its bounds. Note that grabbing is only active while the window has focus.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171196,"byte_end":171287,"line_start":260,"line_end":260,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171975,"byte_end":172000,"line_start":280,"line_end":280,"column_start":12,"column_end":37},"name":"set_vertical_sync_enabled","qualname":"<RenderWindow>::set_vertical_sync_enabled","value":"pub fn set_vertical_sync_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable vertical synchronization","sig":null,"attributes":[{"value":"/ Enable or disable vertical synchronization","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171539,"byte_end":171585,"line_start":270,"line_end":270,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171590,"byte_end":171593,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Activating vertical synchronization will limit the number","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171598,"byte_end":171659,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/ of frames displayed to the refresh rate of the monitor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171664,"byte_end":171723,"line_start":273,"line_end":273,"column_start":5,"column_end":64}},{"value":"/ This can avoid some visual artifacts, and limit the framerate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171728,"byte_end":171793,"line_start":274,"line_end":274,"column_start":5,"column_end":70}},{"value":"/ to a good value (but not constant across different computers).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171798,"byte_end":171864,"line_start":275,"line_end":275,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171869,"byte_end":171872,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171877,"byte_end":171892,"line_start":277,"line_end":277,"column_start":5,"column_end":20}},{"value":"/ * enabled - true to enable v-sync, false to deactivate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171897,"byte_end":171955,"line_start":278,"line_end":278,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":171960,"byte_end":171963,"line_start":279,"line_end":279,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172645,"byte_end":172667,"line_start":300,"line_end":300,"column_start":12,"column_end":34},"name":"set_key_repeat_enabled","qualname":"<RenderWindow>::set_key_repeat_enabled","value":"pub fn set_key_repeat_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable automatic key-repeat","sig":null,"attributes":[{"value":"/ Enable or disable automatic key-repeat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172218,"byte_end":172260,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172265,"byte_end":172268,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ If key repeat is enabled, you will receive repeated","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172273,"byte_end":172328,"line_start":291,"line_end":291,"column_start":5,"column_end":60}},{"value":"/ [`crate::window::Event::KeyPressed`] events while keeping a key pressed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172333,"byte_end":172409,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ If it is disabled, you will only get a single event when the key is pressed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172414,"byte_end":172494,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172499,"byte_end":172502,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Key repeat is enabled by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172507,"byte_end":172544,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172549,"byte_end":172552,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172557,"byte_end":172572,"line_start":297,"line_end":297,"column_start":5,"column_end":20}},{"value":"/ * enabled - true to enable, false to disable","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172577,"byte_end":172625,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172630,"byte_end":172633,"line_start":299,"line_end":299,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173442,"byte_end":173452,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"set_active","qualname":"<RenderWindow>::set_active","value":"pub fn set_active(&mut Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Activate or deactivate a render window as the current target for OpenGL rendering","sig":null,"attributes":[{"value":"/ Activate or deactivate a render window as the current target for OpenGL rendering","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172835,"byte_end":172920,"line_start":306,"line_end":306,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172925,"byte_end":172928,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ A window is active only on the current thread, if you want to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":172933,"byte_end":172998,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/ make it active on another thread you have to deactivate it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173003,"byte_end":173065,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/ on the previous thread first if it was active.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173070,"byte_end":173120,"line_start":310,"line_end":310,"column_start":5,"column_end":55}},{"value":"/ Only one window can be active on a thread at a time, thus","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173125,"byte_end":173186,"line_start":311,"line_end":311,"column_start":5,"column_end":66}},{"value":"/ the window previously active (if any) automatically gets deactivated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173191,"byte_end":173264,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173269,"byte_end":173272,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173277,"byte_end":173292,"line_start":314,"line_end":314,"column_start":5,"column_end":20}},{"value":"/ * active - true to activate, false to deactivate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173297,"byte_end":173349,"line_start":315,"line_end":315,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173354,"byte_end":173357,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Return true if operation was successful, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173362,"byte_end":173422,"line_start":317,"line_end":317,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173427,"byte_end":173430,"line_start":318,"line_end":318,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173902,"byte_end":173924,"line_start":332,"line_end":332,"column_start":12,"column_end":34},"name":"set_joystick_threshold","qualname":"<RenderWindow>::set_joystick_threshold","value":"pub fn set_joystick_threshold(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Change the joystick threshold","sig":null,"attributes":[{"value":"/ Change the joystick threshold","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173622,"byte_end":173655,"line_start":324,"line_end":324,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173660,"byte_end":173663,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The joystick threshold is the value below which","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173668,"byte_end":173719,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/ no [`crate::window::Event::JoystickMoved`] event will be generated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173724,"byte_end":173795,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173800,"byte_end":173803,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173808,"byte_end":173823,"line_start":329,"line_end":329,"column_start":5,"column_end":20}},{"value":"/ * threshold - New threshold, in the range [0, 100]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173828,"byte_end":173882,"line_start":330,"line_end":330,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":173887,"byte_end":173890,"line_start":331,"line_end":331,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174170,"byte_end":174178,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"position","qualname":"<RenderWindow>::position","value":"pub fn position(&Self) -> Vector2i","parent":null,"children":[],"decl_id":null,"docs":" Get the position of a window","sig":null,"attributes":[{"value":"/ Get the position of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174056,"byte_end":174088,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174093,"byte_end":174096,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Return the position in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174101,"byte_end":174134,"line_start":338,"line_end":338,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174139,"byte_end":174142,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174147,"byte_end":174158,"line_start":340,"line_end":340,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174622,"byte_end":174634,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"set_position","qualname":"<RenderWindow>::set_position","value":"pub fn set_position(&mut Self, Vector2i)","parent":null,"children":[],"decl_id":null,"docs":" Change the position of a window on screen","sig":null,"attributes":[{"value":"/ Change the position of a window on screen","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174302,"byte_end":174347,"line_start":345,"line_end":345,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174352,"byte_end":174355,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This function only works for top-level windows","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174360,"byte_end":174410,"line_start":347,"line_end":347,"column_start":5,"column_end":55}},{"value":"/ (i.e. it will be ignored for windows created from","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174415,"byte_end":174468,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/ the handle of a child window/control).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174473,"byte_end":174515,"line_start":349,"line_end":349,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174520,"byte_end":174523,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174528,"byte_end":174543,"line_start":351,"line_end":351,"column_start":5,"column_end":20}},{"value":"/ * position - New position of the window, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174548,"byte_end":174602,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174607,"byte_end":174610,"line_start":353,"line_end":353,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174906,"byte_end":174914,"line_start":363,"line_end":363,"column_start":12,"column_end":20},"name":"set_size","qualname":"<RenderWindow>::set_size","value":"pub fn set_size<S: Into<Vector2u>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Change the size of the rendering region of a window","sig":null,"attributes":[{"value":"/ Change the size of the rendering region of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174766,"byte_end":174821,"line_start":358,"line_end":358,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174826,"byte_end":174829,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174834,"byte_end":174849,"line_start":360,"line_end":360,"column_start":5,"column_end":20}},{"value":"/ * size - New size, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174854,"byte_end":174886,"line_start":361,"line_end":361,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":174891,"byte_end":174894,"line_start":362,"line_end":362,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175150,"byte_end":175164,"line_start":369,"line_end":369,"column_start":12,"column_end":26},"name":"mouse_position","qualname":"<RenderWindow>::mouse_position","value":"pub fn mouse_position(&Self) -> Vector2i","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of the mouse relative to the window.\n","sig":null,"attributes":[{"value":"/ Returns the current position of the mouse relative to the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175053,"byte_end":175122,"line_start":367,"line_end":367,"column_start":5,"column_end":74}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175127,"byte_end":175138,"line_start":368,"line_end":368,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175574,"byte_end":175592,"line_start":381,"line_end":381,"column_start":12,"column_end":30},"name":"set_mouse_position","qualname":"<RenderWindow>::set_mouse_position","value":"pub fn set_mouse_position(&mut Self, Vector2i)","parent":null,"children":[],"decl_id":null,"docs":" Set the current position of the mouse relatively to a render window","sig":null,"attributes":[{"value":"/ Set the current position of the mouse relatively to a render window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175293,"byte_end":175364,"line_start":373,"line_end":373,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175369,"byte_end":175372,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This function sets the current position of the mouse cursor relative","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175377,"byte_end":175449,"line_start":375,"line_end":375,"column_start":5,"column_end":77}},{"value":"/ to the given render window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175454,"byte_end":175484,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175489,"byte_end":175492,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175497,"byte_end":175512,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/ * `position` - the positon to set","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175517,"byte_end":175554,"line_start":379,"line_end":379,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175559,"byte_end":175562,"line_start":380,"line_end":380,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175939,"byte_end":175955,"line_start":389,"line_end":389,"column_start":12,"column_end":28},"name":"set_mouse_cursor","qualname":"<RenderWindow>::set_mouse_cursor","value":"pub fn set_mouse_cursor(&mut Self, &Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Set the displayed cursor to a native system cursor.","sig":null,"attributes":[{"value":"/ Set the displayed cursor to a native system cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175729,"byte_end":175784,"line_start":385,"line_end":385,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175789,"byte_end":175792,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Upon window creation, the arrow cursor is used by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175797,"byte_end":175859,"line_start":387,"line_end":387,"column_start":5,"column_end":67}},{"value":"/ The cursor can not be destroyed while in use by the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":175864,"byte_end":175927,"line_start":388,"line_end":388,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176179,"byte_end":176193,"line_start":395,"line_end":395,"column_start":12,"column_end":26},"name":"touch_position","qualname":"<RenderWindow>::touch_position","value":"pub fn touch_position(&Self, u32) -> Vector2i","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of a touch in window coordinates.\n","sig":null,"attributes":[{"value":"/ Returns the current position of a touch in window coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176085,"byte_end":176151,"line_start":393,"line_end":393,"column_start":5,"column_end":71}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176156,"byte_end":176167,"line_start":394,"line_end":394,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176636,"byte_end":176645,"line_start":409,"line_end":409,"column_start":12,"column_end":21},"name":"has_focus","qualname":"<RenderWindow>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the window has the input focus.","sig":null,"attributes":[{"value":"/ Check whether the window has the input focus.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176410,"byte_end":176459,"line_start":404,"line_end":404,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176464,"byte_end":176467,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ At any given time, only one window may have the input focus to receive input events","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176472,"byte_end":176559,"line_start":406,"line_end":406,"column_start":5,"column_end":92}},{"value":"/ such as keystrokes or most mouse events.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176564,"byte_end":176608,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176613,"byte_end":176624,"line_start":408,"line_end":408,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":177210,"byte_end":177223,"line_start":419,"line_end":419,"column_start":12,"column_end":25},"name":"request_focus","qualname":"<RenderWindow>::request_focus","value":"pub fn request_focus(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Request the current window to be made the active foreground window.","sig":null,"attributes":[{"value":"/ Request the current window to be made the active foreground window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176754,"byte_end":176825,"line_start":413,"line_end":413,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176830,"byte_end":176833,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ At any given time, only one window may have the input focus to receive input events","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176838,"byte_end":176925,"line_start":415,"line_end":415,"column_start":5,"column_end":92}},{"value":"/ such as keystrokes or mouse events. If a window requests focus, it only hints to the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":176930,"byte_end":177018,"line_start":416,"line_end":416,"column_start":5,"column_end":93}},{"value":"/ operating system, that it would like to be focused. The operating system is free to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":177023,"byte_end":177110,"line_start":417,"line_end":417,"column_start":5,"column_end":92}},{"value":"/ deny the request. This is not to be confused with [`RenderWindow::set_active`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":177115,"byte_end":177198,"line_start":418,"line_end":418,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":3707},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188079,"byte_end":188085,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"Shader","qualname":"::graphics::shader::Shader","value":"Shader {  }","parent":null,"children":[{"krate":0,"index":3709},{"krate":0,"index":3710}],"decl_id":null,"docs":" Shader type (vertex, geometry and fragment).","sig":null,"attributes":[{"value":"/ Shader type (vertex, geometry and fragment).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183162,"byte_end":183210,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183211,"byte_end":183214,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Shaders are programs written using a specific language, executed directly","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183215,"byte_end":183292,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ by the graphics card and allowing to apply real-time operations to the rendered entities.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183293,"byte_end":183386,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183387,"byte_end":183390,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ There are three kinds of shaders:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183391,"byte_end":183428,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183429,"byte_end":183432,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - Vertex shaders, that process vertices","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183433,"byte_end":183476,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/ - Geometry shaders, that process primitives","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183477,"byte_end":183524,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/ - Fragment (pixel) shaders, that process pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183525,"byte_end":183576,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183577,"byte_end":183580,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A `Shader` can be composed of either a vertex shader alone, a geometry shader alone,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183581,"byte_end":183669,"line_start":25,"line_end":25,"column_start":1,"column_end":89}},{"value":"/ a fragment shader alone, or any combination of them. (see the variants of the load functions).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183670,"byte_end":183768,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183769,"byte_end":183772,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Shaders are written in GLSL, which is a C-like language dedicated to OpenGL shaders.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183773,"byte_end":183861,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/ You'll probably need to learn its basics before writing your own shaders for SFML.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183862,"byte_end":183948,"line_start":29,"line_end":29,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183949,"byte_end":183952,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Like any Rust program, a GLSL shader has its own variables called uniforms that you can set","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":183953,"byte_end":184048,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ from your Rust application. `Shader` handles different types of uniforms:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184049,"byte_end":184126,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184127,"byte_end":184130,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - scalars: `float`, `int`, `bool`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184131,"byte_end":184168,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ - vectors (2, 3 or 4 components)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184169,"byte_end":184205,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/ - matrices (3x3 or 4x4)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184206,"byte_end":184233,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ - samplers (textures)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184234,"byte_end":184259,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184260,"byte_end":184263,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Some SFML-specific types can be converted:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184264,"byte_end":184310,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184311,"byte_end":184314,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ - [`Color`] as a 4D vector (`vec4`)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184315,"byte_end":184354,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ - [`Transform`] as matrices (`mat3` or `mat4`)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184355,"byte_end":184405,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/ Every uniform variable in a shader can be set through one of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184406,"byte_end":184474,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ `set_uniform_*()` or `set_uniform_array_*()` methods.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184475,"byte_end":184532,"line_start":44,"line_end":44,"column_start":1,"column_end":58}},{"value":"/ For example, if you have a shader with the following uniforms:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184533,"byte_end":184599,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184600,"byte_end":184603,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```glsl","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184604,"byte_end":184615,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ uniform float offset;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184616,"byte_end":184641,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ uniform vec3 point;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184642,"byte_end":184665,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/ uniform vec4 color;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184666,"byte_end":184689,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ uniform mat4 matrix;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184690,"byte_end":184714,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ uniform sampler2D overlay;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184715,"byte_end":184745,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/ uniform sampler2D current;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184746,"byte_end":184776,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184777,"byte_end":184784,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184785,"byte_end":184788,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ You can set their values from Rust code as follows,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184789,"byte_end":184844,"line_start":56,"line_end":56,"column_start":1,"column_end":56}},{"value":"/ using the types defined in the `glsl` module:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184845,"byte_end":184894,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184895,"byte_end":184898,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184899,"byte_end":184912,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ # use sfml::graphics::*;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184913,"byte_end":184941,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/ # use sfml::system::*;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184942,"byte_end":184968,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/ # use sfml::SfBox;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184969,"byte_end":184991,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/ let texture: SfBox<Texture> = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":184992,"byte_end":185043,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/ let mut shader: Shader = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185044,"byte_end":185090,"line_start":64,"line_end":64,"column_start":1,"column_end":47}},{"value":"/ let color: Color = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185091,"byte_end":185131,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/ let transform: Transform = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185132,"byte_end":185180,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ shader.set_uniform_float(\"offset\", 2.);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185181,"byte_end":185224,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/ shader.set_uniform_vec3(\"point\", Vector3f::new(0.5, 0.8, 0.3));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185225,"byte_end":185292,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ shader.set_uniform_vec4(\"color\", color);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185293,"byte_end":185337,"line_start":69,"line_end":69,"column_start":1,"column_end":45}},{"value":"/ shader.set_uniform_mat4(\"matrix\", transform);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185338,"byte_end":185387,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ shader.set_uniform_texture(\"overlay\", &texture);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185388,"byte_end":185440,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ shader.set_uniform_current_texture(\"current\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185441,"byte_end":185491,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185492,"byte_end":185499,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185500,"byte_end":185503,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ To apply a shader to a drawable,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185504,"byte_end":185540,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/ you must set the `shader` field of a [`RenderStates`] instance, and use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185541,"byte_end":185616,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ [`RenderTarget::draw_with_renderstates`]. Example:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185617,"byte_end":185671,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185672,"byte_end":185675,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185676,"byte_end":185689,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/ # use sfml::graphics::*;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185690,"byte_end":185718,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/ # let shader: Shader = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185719,"byte_end":185763,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ # let mut window: RenderWindow = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185764,"byte_end":185818,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/ # let sprite: Sprite = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185819,"byte_end":185863,"line_start":83,"line_end":83,"column_start":1,"column_end":45}},{"value":"/ let mut states = RenderStates::default();;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185864,"byte_end":185910,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/ states.set_shader(Some(&shader));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185911,"byte_end":185948,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/ window.draw_with_renderstates(&sprite, &states);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":185949,"byte_end":186001,"line_start":86,"line_end":86,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186002,"byte_end":186009,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186010,"byte_end":186013,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Shaders can be used on any drawable, but some combinations are not interesting.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186014,"byte_end":186097,"line_start":89,"line_end":89,"column_start":1,"column_end":84}},{"value":"/ For example, using a vertex shader on a [`Sprite`] is limited","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186098,"byte_end":186163,"line_start":90,"line_end":90,"column_start":1,"column_end":66}},{"value":"/ because there are only 4 vertices,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186164,"byte_end":186202,"line_start":91,"line_end":91,"column_start":1,"column_end":39}},{"value":"/ the sprite would have to be subdivided in order to apply wave effects.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186203,"byte_end":186277,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ Another bad example is a fragment shader with [`Text`]: the texture of the text is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186278,"byte_end":186364,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/ not the actual text that you see on screen,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186365,"byte_end":186412,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"/ it is a big texture containing all the characters of the font in an arbitrary order;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186413,"byte_end":186501,"line_start":95,"line_end":95,"column_start":1,"column_end":89}},{"value":"/ thus, texture lookups on pixels other than the current one may not give you","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186502,"byte_end":186581,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ the expected result.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186582,"byte_end":186606,"line_start":97,"line_end":97,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186607,"byte_end":186610,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Shaders can also be used to apply global post-effects to the current contents of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186611,"byte_end":186699,"line_start":99,"line_end":99,"column_start":1,"column_end":89}},{"value":"/ target (like the old `sf::PostFx` class in SFML 1). This can be done in two different ways:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186700,"byte_end":186795,"line_start":100,"line_end":100,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186796,"byte_end":186799,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ - draw everything to a [`RenderTexture`], then draw it to the main target using the shader","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186800,"byte_end":186894,"line_start":102,"line_end":102,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186895,"byte_end":186898,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - draw everything directly to the main target, then use [`Texture::update_from_window`] to copy","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186899,"byte_end":186998,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"/   its contents to a texture and draw it to the main target using the shader.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":186999,"byte_end":187079,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187080,"byte_end":187083,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ The first technique is more optimized because it doesn't involve retrieving the target's","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187084,"byte_end":187176,"line_start":107,"line_end":107,"column_start":1,"column_end":93}},{"value":"/ pixels to system memory, but the second one doesn't impact the rendering process and can","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187177,"byte_end":187269,"line_start":108,"line_end":108,"column_start":1,"column_end":93}},{"value":"/ be easily inserted anywhere without impacting all the code.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187270,"byte_end":187333,"line_start":109,"line_end":109,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187334,"byte_end":187337,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Like [`Texture`] that can be used as a raw OpenGL texture, `Shader` can also be used","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187338,"byte_end":187426,"line_start":111,"line_end":111,"column_start":1,"column_end":89}},{"value":"/ directly as a raw shader for custom OpenGL geometry.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187427,"byte_end":187483,"line_start":112,"line_end":112,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187484,"byte_end":187487,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187488,"byte_end":187501,"line_start":114,"line_end":114,"column_start":1,"column_end":14}},{"value":"/ use sfml::graphics::*;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187502,"byte_end":187528,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/ # let shader: Shader = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187529,"byte_end":187573,"line_start":116,"line_end":116,"column_start":1,"column_end":45}},{"value":"/ Shader::bind(Some(&shader));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187574,"byte_end":187606,"line_start":117,"line_end":117,"column_start":1,"column_end":33}},{"value":"/ // ... render OpenGL geometry ...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187607,"byte_end":187644,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ Shader::bind(None);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187645,"byte_end":187668,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187669,"byte_end":187676,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187677,"byte_end":187680,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`Color`]: crate::graphics::Color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187681,"byte_end":187718,"line_start":122,"line_end":122,"column_start":1,"column_end":38}},{"value":"/ [`Transform`]: crate::graphics::Transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187719,"byte_end":187764,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`RenderStates`]: crate::graphics::RenderStates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187765,"byte_end":187816,"line_start":124,"line_end":124,"column_start":1,"column_end":52}},{"value":"/ [`RenderTarget::draw_with_renderstates`]: crate::graphics::RenderTarget::draw_with_renderstates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187817,"byte_end":187916,"line_start":125,"line_end":125,"column_start":1,"column_end":100}},{"value":"/ [`Sprite`]: crate::graphics::Sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187917,"byte_end":187956,"line_start":126,"line_end":126,"column_start":1,"column_end":40}},{"value":"/ [`Text`]: crate::graphics::Text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187957,"byte_end":187992,"line_start":127,"line_end":127,"column_start":1,"column_end":36}},{"value":"/ [`RenderTexture`]: crate::graphics::RenderTexture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":187993,"byte_end":188046,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188047,"byte_end":188050,"line_start":129,"line_end":129,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189271,"byte_end":189280,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Shader>::from_file","value":"pub fn from_file(Option<&str>, Option<&str>, Option<&str>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Load both the vertex and fragment shaders from files","sig":null,"attributes":[{"value":"/ Load both the vertex and fragment shaders from files","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188491,"byte_end":188547,"line_start":149,"line_end":149,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188552,"byte_end":188555,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This function can load both the vertex and the fragment","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188560,"byte_end":188619,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/ shaders, or only one of them: pass None if you don't want to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188624,"byte_end":188693,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/ either the vertex shader or the fragment shader.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188698,"byte_end":188750,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ The sources must be text files containing valid shaders","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188755,"byte_end":188814,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/ in GLSL language. GLSL is a C-like language dedicated to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188819,"byte_end":188879,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/ OpenGL shaders; you'll probably need to read a good documentation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188884,"byte_end":188953,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/ for it before writing your own shaders.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188958,"byte_end":189001,"line_start":157,"line_end":157,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189006,"byte_end":189009,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189014,"byte_end":189029,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/ * `vertex` - Optional path to vertex shader","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189034,"byte_end":189081,"line_start":160,"line_end":160,"column_start":5,"column_end":52}},{"value":"/ * `geometry` - Optional path to geometry shader","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189086,"byte_end":189137,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/ * `fragment` - Optional path to fragment shader","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189142,"byte_end":189193,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189198,"byte_end":189201,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading failed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189206,"byte_end":189243,"line_start":164,"line_end":164,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189248,"byte_end":189259,"line_start":165,"line_end":165,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190634,"byte_end":190645,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<Shader>::from_stream","value":"pub fn from_stream<T: Read +\n                   Seek>(Option<&mut T>, Option<&mut T>, Option<&mut T>)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Load both the vertex and fragment shaders from streams","sig":null,"attributes":[{"value":"/ Load both the vertex and fragment shaders from streams","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189898,"byte_end":189956,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189961,"byte_end":189964,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This function can load both the vertex and the fragment","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":189969,"byte_end":190028,"line_start":190,"line_end":190,"column_start":5,"column_end":64}},{"value":"/ shaders, or only one of them: pass None if you don't want to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190033,"byte_end":190102,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"/ either the vertex shader or the fragment shader.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190107,"byte_end":190159,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/ The sources must be text files containing valid shaders","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190164,"byte_end":190223,"line_start":193,"line_end":193,"column_start":5,"column_end":64}},{"value":"/ in GLSL language. GLSL is a C-like language dedicated to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190228,"byte_end":190288,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/ OpenGL shaders; you'll probably need to read a good documentation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190293,"byte_end":190362,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/ for it before writing your own shaders.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190367,"byte_end":190410,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190415,"byte_end":190418,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190423,"byte_end":190438,"line_start":198,"line_end":198,"column_start":5,"column_end":20}},{"value":"/ * `vertex_shader_stream` - Optional vertex shader stream","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190443,"byte_end":190503,"line_start":199,"line_end":199,"column_start":5,"column_end":65}},{"value":"/ * `fragment_shader_stream` - Optional fragment shader stream","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190508,"byte_end":190572,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190577,"byte_end":190580,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading failed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":190585,"byte_end":190622,"line_start":202,"line_end":202,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192585,"byte_end":192596,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"name":"from_memory","qualname":"<Shader>::from_memory","value":"pub fn from_memory(Option<&str>, Option<&str>, Option<&str>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Load both the vertex and fragment shaders from source codes in memory","sig":null,"attributes":[{"value":"/ Load both the vertex and fragment shaders from source codes in memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":191688,"byte_end":191761,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":191766,"byte_end":191769,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This function can load both the vertex and the fragment","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":191774,"byte_end":191833,"line_start":232,"line_end":232,"column_start":5,"column_end":64}},{"value":"/ shaders, or only one of them: pass None if you don't want to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":191838,"byte_end":191907,"line_start":233,"line_end":233,"column_start":5,"column_end":74}},{"value":"/ either the vertex shader or the fragment shader.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":191912,"byte_end":191964,"line_start":234,"line_end":234,"column_start":5,"column_end":57}},{"value":"/ The sources must be valid shaders in GLSL language. GLSL is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":191969,"byte_end":192032,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/ a C-like language dedicated to OpenGL shaders; you'll","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192037,"byte_end":192094,"line_start":236,"line_end":236,"column_start":5,"column_end":62}},{"value":"/ probably need to read a good documentation for it before","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192099,"byte_end":192159,"line_start":237,"line_end":237,"column_start":5,"column_end":65}},{"value":"/ writing your own shaders.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192164,"byte_end":192193,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192198,"byte_end":192201,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192206,"byte_end":192221,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/ * vertexShader - Some(String) containing the source code of the vertex shader,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192226,"byte_end":192308,"line_start":241,"line_end":241,"column_start":5,"column_end":87}},{"value":"/                  or None to skip this shader","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192313,"byte_end":192361,"line_start":242,"line_end":242,"column_start":5,"column_end":53}},{"value":"/ * fragmentShader - Some(String) containing the source code of the fragment shader,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192366,"byte_end":192452,"line_start":243,"line_end":243,"column_start":5,"column_end":91}},{"value":"/                    or None to skip this shader","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192457,"byte_end":192507,"line_start":244,"line_end":244,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192512,"byte_end":192515,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if loading failed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192520,"byte_end":192557,"line_start":246,"line_end":246,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":192562,"byte_end":192573,"line_start":247,"line_end":247,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193445,"byte_end":193449,"line_start":275,"line_end":275,"column_start":12,"column_end":16},"name":"bind","qualname":"<Shader>::bind","value":"pub fn bind(Option<&Self>)","parent":null,"children":[],"decl_id":null,"docs":" Bind a shader for rendering.","sig":null,"attributes":[{"value":"/ Bind a shader for rendering.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193216,"byte_end":193248,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193253,"byte_end":193256,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function is not part of the graphics API,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193261,"byte_end":193311,"line_start":272,"line_end":272,"column_start":5,"column_end":55}},{"value":"/ it mustn't be used when drawing SFML entities.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193316,"byte_end":193366,"line_start":273,"line_end":273,"column_start":5,"column_end":55}},{"value":"/ It must be used only if you mix `Shader` with OpenGL code.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193371,"byte_end":193433,"line_start":274,"line_end":274,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193818,"byte_end":193830,"line_start":285,"line_end":285,"column_start":12,"column_end":24},"name":"is_available","qualname":"<Shader>::is_available","value":"pub fn is_available() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not the system supports shaders","sig":null,"attributes":[{"value":"/ Tell whether or not the system supports shaders","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193570,"byte_end":193621,"line_start":279,"line_end":279,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193626,"byte_end":193629,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This function should always be called before using","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193634,"byte_end":193688,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/ the shader features. If it returns false, then","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193693,"byte_end":193743,"line_start":282,"line_end":282,"column_start":5,"column_end":55}},{"value":"/ any attempt to use `Shader` will fail.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193748,"byte_end":193790,"line_start":283,"line_end":283,"column_start":5,"column_end":47}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193795,"byte_end":193806,"line_start":284,"line_end":284,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194554,"byte_end":194575,"line_start":302,"line_end":302,"column_start":12,"column_end":33},"name":"is_geometry_available","qualname":"<Shader>::is_geometry_available","value":"pub fn is_geometry_available() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not the system supports geometry shaders.","sig":null,"attributes":[{"value":"/ Tell whether or not the system supports geometry shaders.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193913,"byte_end":193974,"line_start":289,"line_end":289,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193979,"byte_end":193982,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This function should always be called before using the geometry shader features.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":193987,"byte_end":194071,"line_start":291,"line_end":291,"column_start":5,"column_end":89}},{"value":"/ If it returns `false`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194076,"byte_end":194102,"line_start":292,"line_end":292,"column_start":5,"column_end":31}},{"value":"/ then any attempt to use `Shader` geometry shader features will fail.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194107,"byte_end":194179,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194184,"byte_end":194187,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function can only return true if [`Shader::is_available`] would also return `true`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194192,"byte_end":194284,"line_start":295,"line_end":295,"column_start":5,"column_end":97}},{"value":"/ since shaders in general have to be supported in order for geometry shaders","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194289,"byte_end":194368,"line_start":296,"line_end":296,"column_start":5,"column_end":84}},{"value":"/ to be supported as well.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194373,"byte_end":194401,"line_start":297,"line_end":297,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194406,"byte_end":194409,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Note: The first call to this function, whether by your code or SFML will result","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194414,"byte_end":194497,"line_start":299,"line_end":299,"column_start":5,"column_end":88}},{"value":"/ in a context switch.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194502,"byte_end":194526,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194531,"byte_end":194542,"line_start":301,"line_end":301,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194716,"byte_end":194733,"line_start":307,"line_end":307,"column_start":12,"column_end":29},"name":"set_uniform_float","qualname":"<Shader>::set_uniform_float","value":"pub fn set_uniform_float(&mut Self, &str, f32)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `float` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `float` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194666,"byte_end":194704,"line_start":306,"line_end":306,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195023,"byte_end":195039,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"set_uniform_vec2","qualname":"<Shader>::set_uniform_vec2","value":"pub fn set_uniform_vec2(&mut Self, &str, glsl::Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `vec2` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `vec2` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":194974,"byte_end":195011,"line_start":315,"line_end":315,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195341,"byte_end":195357,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"set_uniform_vec3","qualname":"<Shader>::set_uniform_vec3","value":"pub fn set_uniform_vec3(&mut Self, &str, glsl::Vec3)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `vec3` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `vec3` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195292,"byte_end":195329,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":196179,"byte_end":196195,"line_start":344,"line_end":344,"column_start":12,"column_end":28},"name":"set_uniform_vec4","qualname":"<Shader>::set_uniform_vec4","value":"pub fn set_uniform_vec4<V>(&mut Self, &str, V) where V: Into<glsl::Vec4>","parent":null,"children":[],"decl_id":null,"docs":" Specify value for vec4 uniform.","sig":null,"attributes":[{"value":"/ Specify value for vec4 uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195610,"byte_end":195645,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195650,"byte_end":195653,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This function can also be called with [`Color`] objects that are converted to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195658,"byte_end":195739,"line_start":335,"line_end":335,"column_start":5,"column_end":86}},{"value":"/ [`glsl::Vec4`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195744,"byte_end":195763,"line_start":336,"line_end":336,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195768,"byte_end":195771,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`Color`]: crate::graphics::Color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195776,"byte_end":195813,"line_start":338,"line_end":338,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195818,"byte_end":195821,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ It is important to note that the components of the color are normalized before being","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195826,"byte_end":195914,"line_start":340,"line_end":340,"column_start":5,"column_end":93}},{"value":"/ passed to the shader. Therefore, they are converted from range `[0 .. 255]` to range","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":195919,"byte_end":196007,"line_start":341,"line_end":341,"column_start":5,"column_end":93}},{"value":"/ `[0 .. 1]`. For example, a `Color{r: 255, g: 127, b: 0, a: 255}`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":196012,"byte_end":196080,"line_start":342,"line_end":342,"column_start":5,"column_end":73}},{"value":"/ will be transformed to a `Vec4{x: 1.0, y: 0.5, z: 0.0, w: 1.0}` in the shader.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":196085,"byte_end":196167,"line_start":343,"line_end":343,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":196540,"byte_end":196555,"line_start":356,"line_end":356,"column_start":12,"column_end":27},"name":"set_uniform_int","qualname":"<Shader>::set_uniform_int","value":"pub fn set_uniform_int(&mut Self, &str, i32)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `int` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `int` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":196492,"byte_end":196528,"line_start":355,"line_end":355,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":196844,"byte_end":196861,"line_start":365,"line_end":365,"column_start":12,"column_end":29},"name":"set_uniform_ivec2","qualname":"<Shader>::set_uniform_ivec2","value":"pub fn set_uniform_ivec2(&mut Self, &str, glsl::IVec2)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `ivec2` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `ivec2` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":196794,"byte_end":196832,"line_start":364,"line_end":364,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197166,"byte_end":197183,"line_start":374,"line_end":374,"column_start":12,"column_end":29},"name":"set_uniform_ivec3","qualname":"<Shader>::set_uniform_ivec3","value":"pub fn set_uniform_ivec3(&mut Self, &str, glsl::IVec3)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `ivec3` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `ivec3` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197116,"byte_end":197154,"line_start":373,"line_end":373,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197914,"byte_end":197931,"line_start":392,"line_end":392,"column_start":12,"column_end":29},"name":"set_uniform_ivec4","qualname":"<Shader>::set_uniform_ivec4","value":"pub fn set_uniform_ivec4<V>(&mut Self, &str, V) where V: Into<glsl::IVec4>","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `ivec4` uniform.","sig":null,"attributes":[{"value":"/ Specify value for `ivec4` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197439,"byte_end":197477,"line_start":382,"line_end":382,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197482,"byte_end":197485,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This overload can also be called with [`Color`] objects that are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197490,"byte_end":197558,"line_start":384,"line_end":384,"column_start":5,"column_end":73}},{"value":"/ converted to [`glsl::IVec4`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197563,"byte_end":197596,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197601,"byte_end":197604,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Color`]: crate::graphics::Color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197609,"byte_end":197646,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197651,"byte_end":197654,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ If color conversions are used, the `ivec4` uniform in GLSL will hold the same values","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197659,"byte_end":197747,"line_start":389,"line_end":389,"column_start":5,"column_end":93}},{"value":"/ as the original [`Color`] instance. For example, `Color{r: 255, g: 127, b: 0, a: 255}`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197752,"byte_end":197842,"line_start":390,"line_end":390,"column_start":5,"column_end":95}},{"value":"/ is mapped to `IVec4{x: 255, y: 127, z: 0, w: 255}`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":197847,"byte_end":197902,"line_start":391,"line_end":391,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":198279,"byte_end":198295,"line_start":404,"line_end":404,"column_start":12,"column_end":28},"name":"set_uniform_bool","qualname":"<Shader>::set_uniform_bool","value":"pub fn set_uniform_bool(&mut Self, &str, bool)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `bool` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `bool` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":198230,"byte_end":198267,"line_start":403,"line_end":403,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":198608,"byte_end":198625,"line_start":413,"line_end":413,"column_start":12,"column_end":29},"name":"set_uniform_bvec2","qualname":"<Shader>::set_uniform_bvec2","value":"pub fn set_uniform_bvec2(&mut Self, &str, glsl::BVec2)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `bvec2` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `bvec2` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":198558,"byte_end":198596,"line_start":412,"line_end":412,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":198931,"byte_end":198948,"line_start":422,"line_end":422,"column_start":12,"column_end":29},"name":"set_uniform_bvec3","qualname":"<Shader>::set_uniform_bvec3","value":"pub fn set_uniform_bvec3(&mut Self, &str, glsl::BVec3)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `bvec3` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `bvec3` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":198881,"byte_end":198919,"line_start":421,"line_end":421,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":199254,"byte_end":199271,"line_start":431,"line_end":431,"column_start":12,"column_end":29},"name":"set_uniform_bvec4","qualname":"<Shader>::set_uniform_bvec4","value":"pub fn set_uniform_bvec4(&mut Self, &str, glsl::BVec4)","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `bvec4` uniform.\n","sig":null,"attributes":[{"value":"/ Specify value for `bvec4` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":199204,"byte_end":199242,"line_start":430,"line_end":430,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":199575,"byte_end":199591,"line_start":440,"line_end":440,"column_start":12,"column_end":28},"name":"set_uniform_mat3","qualname":"<Shader>::set_uniform_mat3","value":"pub fn set_uniform_mat3<V>(&mut Self, &str, V) where V: Into<glsl::Mat3>","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `mat3` matrix.\n","sig":null,"attributes":[{"value":"/ Specify value for `mat3` matrix.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":199527,"byte_end":199563,"line_start":439,"line_end":439,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200013,"byte_end":200029,"line_start":454,"line_end":454,"column_start":12,"column_end":28},"name":"set_uniform_mat4","qualname":"<Shader>::set_uniform_mat4","value":"pub fn set_uniform_mat4<V>(&mut Self, &str, V) where V: Into<glsl::Mat4>","parent":null,"children":[],"decl_id":null,"docs":" Specify value for `mat4` matrix.\n","sig":null,"attributes":[{"value":"/ Specify value for `mat4` matrix.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":199965,"byte_end":200001,"line_start":453,"line_end":453,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200781,"byte_end":200800,"line_start":474,"line_end":474,"column_start":12,"column_end":31},"name":"set_uniform_texture","qualname":"<Shader>::set_uniform_texture","value":"pub fn set_uniform_texture(&mut Self, &str, &'texture Texture)","parent":null,"children":[],"decl_id":null,"docs":" Specify a texture as `sampler2D` uniform.","sig":null,"attributes":[{"value":"/ Specify a texture as `sampler2D` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200403,"byte_end":200448,"line_start":467,"line_end":467,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200453,"byte_end":200456,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ `name` is the name of the variable to change in the shader.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200461,"byte_end":200524,"line_start":469,"line_end":469,"column_start":5,"column_end":68}},{"value":"/ The corresponding parameter in the shader must be a 2D texture (`sampler2D` GLSL type).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200529,"byte_end":200620,"line_start":470,"line_end":470,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200625,"byte_end":200628,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ To use the texture of the object being drawn, which cannot be known in advance,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200633,"byte_end":200716,"line_start":472,"line_end":472,"column_start":5,"column_end":88}},{"value":"/ use [`Shader::set_uniform_current_texture`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":200721,"byte_end":200769,"line_start":473,"line_end":473,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":201367,"byte_end":201394,"line_start":487,"line_end":487,"column_start":12,"column_end":39},"name":"set_uniform_current_texture","qualname":"<Shader>::set_uniform_current_texture","value":"pub fn set_uniform_current_texture(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Specify current texture as `sampler2D` uniform.","sig":null,"attributes":[{"value":"/ Specify current texture as `sampler2D` uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":201063,"byte_end":201114,"line_start":482,"line_end":482,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":201119,"byte_end":201122,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This function maps a shader texture variable to the texture of the object being drawn,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":201127,"byte_end":201217,"line_start":484,"line_end":484,"column_start":5,"column_end":95}},{"value":"/ which cannot be known in advance.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":201222,"byte_end":201259,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/ The corresponding parameter in the shader must be a 2D texture (`sampler2D` GLSL type).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":201264,"byte_end":201355,"line_start":486,"line_end":486,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":201684,"byte_end":201707,"line_start":496,"line_end":496,"column_start":12,"column_end":35},"name":"set_uniform_array_float","qualname":"<Shader>::set_uniform_array_float","value":"pub fn set_uniform_array_float(&mut Self, &str, &[f32])","parent":null,"children":[],"decl_id":null,"docs":" Specify values for `float[]` array uniform.\n","sig":null,"attributes":[{"value":"/ Specify values for `float[]` array uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":201625,"byte_end":201672,"line_start":495,"line_end":495,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":202063,"byte_end":202085,"line_start":506,"line_end":506,"column_start":12,"column_end":34},"name":"set_uniform_array_vec2","qualname":"<Shader>::set_uniform_array_vec2","value":"pub fn set_uniform_array_vec2(&mut Self, &str, &[glsl::Vec2])","parent":null,"children":[],"decl_id":null,"docs":" Specify values for `vec2[]` array uniform.\n","sig":null,"attributes":[{"value":"/ Specify values for `vec2[]` array uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":202005,"byte_end":202051,"line_start":505,"line_end":505,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":202500,"byte_end":202522,"line_start":517,"line_end":517,"column_start":12,"column_end":34},"name":"set_uniform_array_vec3","qualname":"<Shader>::set_uniform_array_vec3","value":"pub fn set_uniform_array_vec3(&mut Self, &str, &[glsl::Vec3])","parent":null,"children":[],"decl_id":null,"docs":" Specify values for `vec3[]` array uniform.\n","sig":null,"attributes":[{"value":"/ Specify values for `vec3[]` array uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":202442,"byte_end":202488,"line_start":516,"line_end":516,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":202937,"byte_end":202959,"line_start":528,"line_end":528,"column_start":12,"column_end":34},"name":"set_uniform_array_vec4","qualname":"<Shader>::set_uniform_array_vec4","value":"pub fn set_uniform_array_vec4(&mut Self, &str, &[glsl::Vec4])","parent":null,"children":[],"decl_id":null,"docs":" Specify values for `vec4[]` array uniform.\n","sig":null,"attributes":[{"value":"/ Specify values for `vec4[]` array uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":202879,"byte_end":202925,"line_start":527,"line_end":527,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":203374,"byte_end":203396,"line_start":539,"line_end":539,"column_start":12,"column_end":34},"name":"set_uniform_array_mat3","qualname":"<Shader>::set_uniform_array_mat3","value":"pub fn set_uniform_array_mat3(&mut Self, &str, &[glsl::Mat3])","parent":null,"children":[],"decl_id":null,"docs":" Specify values for `mat3[]` array uniform.\n","sig":null,"attributes":[{"value":"/ Specify values for `mat3[]` array uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":203316,"byte_end":203362,"line_start":538,"line_end":538,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":203811,"byte_end":203833,"line_start":550,"line_end":550,"column_start":12,"column_end":34},"name":"set_uniform_array_mat4","qualname":"<Shader>::set_uniform_array_mat4","value":"pub fn set_uniform_array_mat4(&mut Self, &str, &[glsl::Mat4])","parent":null,"children":[],"decl_id":null,"docs":" Specify values for `mat4[]` array uniform.\n","sig":null,"attributes":[{"value":"/ Specify values for `mat4[]` array uniform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":203753,"byte_end":203799,"line_start":549,"line_end":549,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1933},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204570,"byte_end":204575,"line_start":7,"line_end":7,"column_start":11,"column_end":16},"name":"Shape","qualname":"::graphics::shape::Shape","value":"Shape<'s>: Drawable + Transformable","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949}],"decl_id":null,"docs":" Trait for textured shapes with outline.\n","sig":null,"attributes":[{"value":"/ Trait for textured shapes with outline.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204516,"byte_end":204559,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204932,"byte_end":204943,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"set_texture","qualname":"::graphics::shape::Shape::set_texture","value":"pub fn set_texture(&mut Self, &'s Texture, bool)","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Changes the source texture of the shape.","sig":null,"attributes":[{"value":"/ Changes the source texture of the shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204612,"byte_end":204656,"line_start":8,"line_end":8,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204661,"byte_end":204664,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ If `reset_rect` is `true`, the [`texture_rect`] property of the shape is automatically","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204669,"byte_end":204759,"line_start":10,"line_end":10,"column_start":5,"column_end":95}},{"value":"/ adjusted to the size of the new texture.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204764,"byte_end":204808,"line_start":11,"line_end":11,"column_start":5,"column_end":49}},{"value":"/ If it is `false`, the texture rect is left unchanged.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204813,"byte_end":204870,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204875,"byte_end":204878,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`texture_rect`]: Shape::texture_rect","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204883,"byte_end":204924,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205046,"byte_end":205061,"line_start":17,"line_end":17,"column_start":8,"column_end":23},"name":"disable_texture","qualname":"::graphics::shape::Shape::disable_texture","value":"pub fn disable_texture(&mut Self)","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Disables texturing for this shape.\n","sig":null,"attributes":[{"value":"/ Disables texturing for this shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205000,"byte_end":205038,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205338,"byte_end":205354,"line_start":22,"line_end":22,"column_start":8,"column_end":24},"name":"set_texture_rect","qualname":"::graphics::shape::Shape::set_texture_rect","value":"pub fn set_texture_rect(&mut Self, &IntRect)","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Sets the sub-rectangle of the texture that the shape will display.","sig":null,"attributes":[{"value":"/ Sets the sub-rectangle of the texture that the shape will display.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205078,"byte_end":205148,"line_start":18,"line_end":18,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205153,"byte_end":205156,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The texture rect is useful when you don't want to display the whole texture,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205161,"byte_end":205241,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ but rather a part of it. By default, the texture rect covers the entire texture.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205246,"byte_end":205330,"line_start":21,"line_end":21,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205770,"byte_end":205784,"line_start":29,"line_end":29,"column_start":8,"column_end":22},"name":"set_fill_color","qualname":"::graphics::shape::Shape::set_fill_color","value":"pub fn set_fill_color(&mut Self, Color)","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Sets the fill color of the shape.","sig":null,"attributes":[{"value":"/ Sets the fill color of the shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205387,"byte_end":205424,"line_start":23,"line_end":23,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205429,"byte_end":205432,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This color is modulated (multiplied) with the shape's texture if any.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205437,"byte_end":205510,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ It can be used to colorize the shape, or change its global opacity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205515,"byte_end":205586,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ You can use [`Color::TRANSPARENT`] to make the inside of the shape transparent,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205591,"byte_end":205674,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ and have the outline alone. By default, the shape's fill color is opaque white.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205679,"byte_end":205762,"line_start":28,"line_end":28,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205934,"byte_end":205951,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"set_outline_color","qualname":"::graphics::shape::Shape::set_outline_color","value":"pub fn set_outline_color(&mut Self, Color)","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Sets the outline color of the shape.","sig":null,"attributes":[{"value":"/ Sets the outline color of the shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205815,"byte_end":205855,"line_start":30,"line_end":30,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205860,"byte_end":205863,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ By default, the shape's outline color is opaque white.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205868,"byte_end":205926,"line_start":32,"line_end":32,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206246,"byte_end":206267,"line_start":39,"line_end":39,"column_start":8,"column_end":29},"name":"set_outline_thickness","qualname":"::graphics::shape::Shape::set_outline_thickness","value":"pub fn set_outline_thickness(&mut Self, f32)","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Sets the thickness of the shape's outline.","sig":null,"attributes":[{"value":"/ Sets the thickness of the shape's outline.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":205982,"byte_end":206028,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206033,"byte_end":206036,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that negative values are allowed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206041,"byte_end":206082,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ (so that the outline expands towards the center of the shape),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206087,"byte_end":206153,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/ and using zero disables the outline. By default, the outline thickness is 0.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206158,"byte_end":206238,"line_start":38,"line_end":38,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206419,"byte_end":206426,"line_start":43,"line_end":43,"column_start":8,"column_end":15},"name":"texture","qualname":"::graphics::shape::Shape::texture","value":"pub fn texture(&Self) -> Option<&'s Texture>","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets the source texture of the shape.","sig":null,"attributes":[{"value":"/ Gets the source texture of the shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206300,"byte_end":206341,"line_start":40,"line_end":40,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206346,"byte_end":206349,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If the shape has no source texture, None is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206354,"byte_end":206411,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206535,"byte_end":206547,"line_start":45,"line_end":45,"column_start":8,"column_end":20},"name":"texture_rect","qualname":"::graphics::shape::Shape::texture_rect","value":"pub fn texture_rect(&Self) -> IntRect","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets the sub-rectangle of the texture displayed by the shape.\n","sig":null,"attributes":[{"value":"/ Gets the sub-rectangle of the texture displayed by the shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206462,"byte_end":206527,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206617,"byte_end":206627,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"fill_color","qualname":"::graphics::shape::Shape::fill_color","value":"pub fn fill_color(&Self) -> Color","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets the fill color of this shape.\n","sig":null,"attributes":[{"value":"/ Gets the fill color of this shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206571,"byte_end":206609,"line_start":46,"line_end":46,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206698,"byte_end":206711,"line_start":49,"line_end":49,"column_start":8,"column_end":21},"name":"outline_color","qualname":"::graphics::shape::Shape::outline_color","value":"pub fn outline_color(&Self) -> Color","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets the outline color of this shape.\n","sig":null,"attributes":[{"value":"/ Gets the outline color of this shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206649,"byte_end":206690,"line_start":48,"line_end":48,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206786,"byte_end":206803,"line_start":51,"line_end":51,"column_start":8,"column_end":25},"name":"outline_thickness","qualname":"::graphics::shape::Shape::outline_thickness","value":"pub fn outline_thickness(&Self) -> f32","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets the outline thickness of this shape.\n","sig":null,"attributes":[{"value":"/ Gets the outline thickness of this shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206733,"byte_end":206778,"line_start":50,"line_end":50,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206880,"byte_end":206891,"line_start":53,"line_end":53,"column_start":8,"column_end":19},"name":"point_count","qualname":"::graphics::shape::Shape::point_count","value":"pub fn point_count(&Self) -> u32","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets the total number of points of the shape.\n","sig":null,"attributes":[{"value":"/ Gets the total number of points of the shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206823,"byte_end":206872,"line_start":52,"line_end":52,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207196,"byte_end":207201,"line_start":59,"line_end":59,"column_start":8,"column_end":13},"name":"point","qualname":"::graphics::shape::Shape::point","value":"pub fn point(&Self, u32) -> Vector2f","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets a point of the shape.","sig":null,"attributes":[{"value":"/ Gets a point of the shape.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206911,"byte_end":206941,"line_start":54,"line_end":54,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206946,"byte_end":206949,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The returned point is in local coordinates, that is, the shape's transforms","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":206954,"byte_end":207033,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/ (position, rotation, scale) are not taken into account.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207038,"byte_end":207097,"line_start":57,"line_end":57,"column_start":5,"column_end":64}},{"value":"/ The result is unspecified if index is out of the valid range (`0..point_count()`).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207102,"byte_end":207188,"line_start":58,"line_end":58,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207600,"byte_end":207612,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"local_bounds","qualname":"::graphics::shape::Shape::local_bounds","value":"pub fn local_bounds(&Self) -> FloatRect","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets the local bounding rectangle of the entity.","sig":null,"attributes":[{"value":"/ Gets the local bounding rectangle of the entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207238,"byte_end":207290,"line_start":60,"line_end":60,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207295,"byte_end":207298,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The returned rectangle is in local coordinates, which means that it ignores the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207303,"byte_end":207386,"line_start":62,"line_end":62,"column_start":5,"column_end":88}},{"value":"/ transformations (translation, rotation, scale, ...) that are applied to the entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207391,"byte_end":207478,"line_start":63,"line_end":63,"column_start":5,"column_end":92}},{"value":"/ In other words, this function returns the bounds of the entity in the entity's","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207483,"byte_end":207565,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ coordinate system.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207570,"byte_end":207592,"line_start":65,"line_end":65,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":208373,"byte_end":208386,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"global_bounds","qualname":"::graphics::shape::Shape::global_bounds","value":"pub fn global_bounds(&Self) -> FloatRect","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Gets the global (non-minimal) bounding rectangle of the entity.","sig":null,"attributes":[{"value":"/ Gets the global (non-minimal) bounding rectangle of the entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207638,"byte_end":207705,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207710,"byte_end":207713,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The returned rectangle is in global coordinates,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207718,"byte_end":207770,"line_start":69,"line_end":69,"column_start":5,"column_end":57}},{"value":"/ which means that it takes into account the transformations","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207775,"byte_end":207837,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/ (translation, rotation, scale, ...) that are applied to the entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207842,"byte_end":207913,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ In other words, this function returns the bounds of the shape in the global 2D world's","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":207918,"byte_end":208008,"line_start":72,"line_end":72,"column_start":5,"column_end":95}},{"value":"/ coordinate system.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":208013,"byte_end":208035,"line_start":73,"line_end":73,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":208040,"byte_end":208043,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This function does not necessarily return the minimal bounding rectangle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":208048,"byte_end":208125,"line_start":75,"line_end":75,"column_start":5,"column_end":82}},{"value":"/ It merely ensures that the returned rectangle covers all the vertices (but possibly more).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":208130,"byte_end":208224,"line_start":76,"line_end":76,"column_start":5,"column_end":99}},{"value":"/ This allows for a fast approximation of the bounds as a first check;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":208229,"byte_end":208301,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ you may want to use more precise checks on top of that.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":208306,"byte_end":208365,"line_start":78,"line_end":78,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3714},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":208914,"byte_end":208920,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Sprite","qualname":"::graphics::sprite::Sprite","value":"Sprite {  }","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":3717}],"decl_id":null,"docs":" Drawable representation of a texture","sig":null,"attributes":[{"value":"/ Drawable representation of a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":208725,"byte_end":208765,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":208766,"byte_end":208769,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Sprite is a drawable type that allows to easily","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":208770,"byte_end":208821,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ display a [`Texture`] (or a part of it) on a render target.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":208822,"byte_end":208885,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209078,"byte_end":209081,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Sprite>::new","value":"pub fn new() -> Sprite","parent":null,"children":[],"decl_id":null,"docs":" Create a new sprite\n","sig":null,"attributes":[{"value":"/ Create a new sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209027,"byte_end":209050,"line_start":24,"line_end":24,"column_start":5,"column_end":28}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209055,"byte_end":209066,"line_start":25,"line_end":25,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209373,"byte_end":209385,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"with_texture","qualname":"<Sprite>::with_texture","value":"pub fn with_texture(&'s Texture) -> Sprite","parent":null,"children":[],"decl_id":null,"docs":" Create a new sprite with a texture\n","sig":null,"attributes":[{"value":"/ Create a new sprite with a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209307,"byte_end":209345,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209350,"byte_end":209361,"line_start":36,"line_end":36,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209622,"byte_end":209643,"line_start":45,"line_end":45,"column_start":12,"column_end":33},"name":"with_texture_and_rect","qualname":"<Sprite>::with_texture_and_rect","value":"pub fn with_texture_and_rect(&'s Texture, &IntRect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new sprite with a texture and a source rectangle\n","sig":null,"attributes":[{"value":"/ Create a new sprite with a texture and a source rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209533,"byte_end":209594,"line_start":43,"line_end":43,"column_start":5,"column_end":66}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209599,"byte_end":209610,"line_start":44,"line_end":44,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210657,"byte_end":210668,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"set_texture","qualname":"<Sprite>::set_texture","value":"pub fn set_texture(&mut Self, &'s Texture, bool)","parent":null,"children":[],"decl_id":null,"docs":" Change the source texture of a sprite","sig":null,"attributes":[{"value":"/ Change the source texture of a sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209813,"byte_end":209854,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209859,"byte_end":209862,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The texture argument refers to a texture that must","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209867,"byte_end":209921,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/ exist as long as the sprite uses it. Indeed, the sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209926,"byte_end":209985,"line_start":54,"line_end":54,"column_start":5,"column_end":64}},{"value":"/ doesn't store its own copy of the texture, but rather keeps","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209990,"byte_end":210053,"line_start":55,"line_end":55,"column_start":5,"column_end":68}},{"value":"/ a pointer to the one that you passed to this function.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210058,"byte_end":210116,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/ If the source texture is destroyed and the sprite tries to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210121,"byte_end":210183,"line_start":57,"line_end":57,"column_start":5,"column_end":67}},{"value":"/ use it, the behaviour is undefined.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210188,"byte_end":210227,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ If `reset_rect` is true, the [`texture_rect`] property of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210232,"byte_end":210293,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/ the sprite is automatically adjusted to the size of the new","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210298,"byte_end":210361,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ texture. If it is false, the texture rect is left unchanged.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210366,"byte_end":210430,"line_start":61,"line_end":61,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210435,"byte_end":210438,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ [`texture_rect`]: Sprite::texture_rect","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210443,"byte_end":210485,"line_start":63,"line_end":63,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210490,"byte_end":210493,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210498,"byte_end":210513,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"/ * `texture` - New texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210518,"byte_end":210547,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"/ * `reset_rect` - Should the texture rect be reset to the size","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210552,"byte_end":210617,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ of the new texture?","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210622,"byte_end":210645,"line_start":68,"line_end":68,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210960,"byte_end":210975,"line_start":78,"line_end":78,"column_start":12,"column_end":27},"name":"disable_texture","qualname":"<Sprite>::disable_texture","value":"pub fn disable_texture(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disable Texturing","sig":null,"attributes":[{"value":"/ Disable Texturing","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210856,"byte_end":210877,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210882,"byte_end":210885,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Disable the current texture and reset the texture rect","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":210890,"byte_end":210948,"line_start":77,"line_end":77,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211421,"byte_end":211430,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Sprite>::set_color","value":"pub fn set_color(&mut Self, Color)","parent":null,"children":[],"decl_id":null,"docs":" Set the global color of a sprite","sig":null,"attributes":[{"value":"/ Set the global color of a sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211082,"byte_end":211118,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211123,"byte_end":211126,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This color is modulated (multiplied) with the sprite's","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211131,"byte_end":211189,"line_start":84,"line_end":84,"column_start":5,"column_end":63}},{"value":"/ texture. It can be used to colorize the sprite, or change","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211194,"byte_end":211255,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/ its global opacity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211260,"byte_end":211283,"line_start":86,"line_end":86,"column_start":5,"column_end":28}},{"value":"/ By default, the sprite's color is opaque white.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211288,"byte_end":211339,"line_start":87,"line_end":87,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211344,"byte_end":211347,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211352,"byte_end":211367,"line_start":89,"line_end":89,"column_start":5,"column_end":20}},{"value":"/ * color - New color of the sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211372,"byte_end":211409,"line_start":90,"line_end":90,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211813,"byte_end":211820,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"texture","qualname":"<Sprite>::texture","value":"pub fn texture(&Self) -> Option<&'s Texture>","parent":null,"children":[],"decl_id":null,"docs":" Get the source texture of a sprite","sig":null,"attributes":[{"value":"/ Get the source texture of a sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211533,"byte_end":211571,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211576,"byte_end":211579,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If the sprite has no source texture, None is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211584,"byte_end":211642,"line_start":97,"line_end":97,"column_start":5,"column_end":63}},{"value":"/ You can't","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211647,"byte_end":211660,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ modify the texture when you retrieve it with this function.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211665,"byte_end":211728,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211733,"byte_end":211736,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Return an Option to the sprite's texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211741,"byte_end":211785,"line_start":101,"line_end":101,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":211790,"byte_end":211801,"line_start":102,"line_end":102,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212205,"byte_end":212210,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"color","qualname":"<Sprite>::color","value":"pub fn color(&Self) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Get the global color of a sprite","sig":null,"attributes":[{"value":"/ Get the global color of a sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212087,"byte_end":212123,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212128,"byte_end":212131,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Return the global color of the sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212136,"byte_end":212177,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212182,"byte_end":212193,"line_start":117,"line_end":117,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212754,"byte_end":212766,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"local_bounds","qualname":"<Sprite>::local_bounds","value":"pub fn local_bounds(&Self) -> FloatRect","parent":null,"children":[],"decl_id":null,"docs":" Get the local bounding rectangle of a sprite","sig":null,"attributes":[{"value":"/ Get the local bounding rectangle of a sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212302,"byte_end":212350,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212355,"byte_end":212358,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The returned rectangle is in local coordinates, which means","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212363,"byte_end":212426,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ that it ignores the transformations (translation, rotation,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212431,"byte_end":212494,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/ scale, ...) that are applied to the entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212499,"byte_end":212546,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/ In other words, this function returns the bounds of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212551,"byte_end":212610,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ entity in the entity's coordinate system.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212615,"byte_end":212660,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212665,"byte_end":212668,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Return the local bounding rectangle of the entity","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212673,"byte_end":212726,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212731,"byte_end":212742,"line_start":131,"line_end":131,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213355,"byte_end":213368,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"global_bounds","qualname":"<Sprite>::global_bounds","value":"pub fn global_bounds(&Self) -> FloatRect","parent":null,"children":[],"decl_id":null,"docs":" Get the global bounding rectangle of a sprite","sig":null,"attributes":[{"value":"/ Get the global bounding rectangle of a sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212882,"byte_end":212931,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212936,"byte_end":212939,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The returned rectangle is in global coordinates, which means","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":212944,"byte_end":213008,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ that it takes in account the transformations (translation,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213013,"byte_end":213075,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/ rotation, scale, ...) that are applied to the entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213080,"byte_end":213137,"line_start":140,"line_end":140,"column_start":5,"column_end":62}},{"value":"/ In other words, this function returns the bounds of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213142,"byte_end":213201,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/ sprite in the global 2D world's coordinate system.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213206,"byte_end":213260,"line_start":142,"line_end":142,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213265,"byte_end":213268,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Return the global bounding rectangle of the entity","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213273,"byte_end":213327,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213332,"byte_end":213343,"line_start":145,"line_end":145,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213634,"byte_end":213646,"line_start":154,"line_end":154,"column_start":12,"column_end":24},"name":"texture_rect","qualname":"<Sprite>::texture_rect","value":"pub fn texture_rect(&Self) -> IntRect","parent":null,"children":[],"decl_id":null,"docs":" Get the sub-rectangle of the texture displayed by a sprite","sig":null,"attributes":[{"value":"/ Get the sub-rectangle of the texture displayed by a sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213485,"byte_end":213547,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213552,"byte_end":213555,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Return the texture rectangle of the sprite","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213560,"byte_end":213606,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213611,"byte_end":213622,"line_start":153,"line_end":153,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214133,"byte_end":214149,"line_start":166,"line_end":166,"column_start":12,"column_end":28},"name":"set_texture_rect","qualname":"<Sprite>::set_texture_rect","value":"pub fn set_texture_rect(&mut Self, &IntRect)","parent":null,"children":[],"decl_id":null,"docs":" Set the sub-rectangle of the texture that a sprite will display","sig":null,"attributes":[{"value":"/ Set the sub-rectangle of the texture that a sprite will display","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213758,"byte_end":213825,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213830,"byte_end":213833,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The texture rect is useful when you don't want to display","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213838,"byte_end":213899,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/ the whole texture, but rather a part of it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213904,"byte_end":213951,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ By default, the texture rect covers the entire texture.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":213956,"byte_end":214015,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214020,"byte_end":214023,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214028,"byte_end":214043,"line_start":164,"line_end":164,"column_start":5,"column_end":20}},{"value":"/ * rectangle - Rectangle defining the region of the texture to display","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214048,"byte_end":214121,"line_start":165,"line_end":165,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3721},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217276,"byte_end":217280,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Text","qualname":"::graphics::text::Text","value":"Text {  }","parent":null,"children":[{"krate":0,"index":3723},{"krate":0,"index":3724}],"decl_id":null,"docs":" Graphical text","sig":null,"attributes":[{"value":"/ Graphical text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217105,"byte_end":217123,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217124,"byte_end":217127,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Text is a drawable type that allows to easily","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217128,"byte_end":217177,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ display some text with custom style and color on a render target.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217178,"byte_end":217247,"line_start":14,"line_end":14,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217657,"byte_end":217660,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Text>::new","value":"pub fn new<S: SfStrConv>(S, &'s Font, u32) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Create a new text with initialized value","sig":null,"attributes":[{"value":"/ Create a new text with initialized value","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217375,"byte_end":217419,"line_start":22,"line_end":22,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217424,"byte_end":217427,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Default value for characterSize on SFML is 30.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217432,"byte_end":217482,"line_start":24,"line_end":24,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217487,"byte_end":217490,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217495,"byte_end":217510,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/ * string - The string of the text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217515,"byte_end":217552,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/ * font - The font to display the Text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217557,"byte_end":217598,"line_start":28,"line_end":28,"column_start":5,"column_end":46}},{"value":"/ * characterSize - The size of the Text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217603,"byte_end":217645,"line_start":29,"line_end":29,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218063,"byte_end":218073,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"set_string","qualname":"<Text>::set_string","value":"pub fn set_string<S: SfStrConv>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Set the string of a text","sig":null,"attributes":[{"value":"/ Set the string of a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217912,"byte_end":217940,"line_start":38,"line_end":38,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217945,"byte_end":217948,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ A text's string is empty by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217953,"byte_end":217993,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217998,"byte_end":218001,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218006,"byte_end":218021,"line_start":42,"line_end":42,"column_start":5,"column_end":20}},{"value":"/ * string - New string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218026,"byte_end":218051,"line_start":43,"line_end":43,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218305,"byte_end":218311,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"string","qualname":"<Text>::string","value":"pub fn string(&Self) -> &SfStr","parent":null,"children":[],"decl_id":null,"docs":" Get the string of a text\n","sig":null,"attributes":[{"value":"/ Get the string of a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218249,"byte_end":218277,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218282,"byte_end":218293,"line_start":51,"line_end":51,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218597,"byte_end":218611,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"character_size","qualname":"<Text>::character_size","value":"pub fn character_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the characters","sig":null,"attributes":[{"value":"/ Get the size of the characters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218485,"byte_end":218519,"line_start":59,"line_end":59,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218524,"byte_end":218527,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Return the size of the characters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218532,"byte_end":218569,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218574,"byte_end":218585,"line_start":62,"line_end":62,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219121,"byte_end":219129,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"set_font","qualname":"<Text>::set_font","value":"pub fn set_font(&mut Self, &'s Font)","parent":null,"children":[],"decl_id":null,"docs":" Set the font of the text","sig":null,"attributes":[{"value":"/ Set the font of the text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218698,"byte_end":218726,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218731,"byte_end":218734,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The font argument refers to a texture that must","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218739,"byte_end":218790,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/ exist as long as the text uses it. Indeed, the text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218795,"byte_end":218850,"line_start":70,"line_end":70,"column_start":5,"column_end":60}},{"value":"/ doesn't store its own copy of the font, but rather keeps","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218855,"byte_end":218915,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/ a pointer to the one that you passed to this function.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218920,"byte_end":218978,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/ If the font is destroyed and the text tries to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":218983,"byte_end":219033,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/ use it, the behaviour is undefined.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219038,"byte_end":219077,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219082,"byte_end":219085,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ font - New font","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219090,"byte_end":219109,"line_start":76,"line_end":76,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219466,"byte_end":219475,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"set_style","qualname":"<Text>::set_style","value":"pub fn set_style(&mut Self, TextStyle)","parent":null,"children":[],"decl_id":null,"docs":" Set the style of a text","sig":null,"attributes":[{"value":"/ Set the style of a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219232,"byte_end":219259,"line_start":81,"line_end":81,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219264,"byte_end":219267,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ You can pass a combination of one or more styles, for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219272,"byte_end":219329,"line_start":83,"line_end":83,"column_start":5,"column_end":62}},{"value":"/ example Bold | Italic.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219334,"byte_end":219360,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ The default style is Regular.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219365,"byte_end":219398,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219403,"byte_end":219406,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219411,"byte_end":219426,"line_start":87,"line_end":87,"column_start":5,"column_end":20}},{"value":"/ * style - New style","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219431,"byte_end":219454,"line_start":88,"line_end":88,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219758,"byte_end":219776,"line_start":99,"line_end":99,"column_start":12,"column_end":30},"name":"set_character_size","qualname":"<Text>::set_character_size","value":"pub fn set_character_size(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of the characters of a text","sig":null,"attributes":[{"value":"/ Set the size of the characters of a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219583,"byte_end":219627,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219632,"byte_end":219635,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The default size is 30.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219640,"byte_end":219667,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219672,"byte_end":219675,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219680,"byte_end":219695,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/ * size - The new character size, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219700,"byte_end":219746,"line_start":98,"line_end":98,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219997,"byte_end":220002,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"style","qualname":"<Text>::style","value":"pub fn style(&Self) -> TextStyle","parent":null,"children":[],"decl_id":null,"docs":" Get the style of a text","sig":null,"attributes":[{"value":"/ Get the style of a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219877,"byte_end":219904,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219909,"byte_end":219912,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Return the current string style (see Style enum)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219917,"byte_end":219969,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":219974,"byte_end":219985,"line_start":106,"line_end":106,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220365,"byte_end":220369,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"font","qualname":"<Text>::font","value":"pub fn font(&Self) -> Option<&'s Font>","parent":null,"children":[],"decl_id":null,"docs":" Get the font of a text\n If the text has no font attached, a None is returned.\n The returned pointer is const, which means that you can't\n modify the font when you retrieve it with this function.\n","sig":null,"attributes":[{"value":"/ Get the font of a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220118,"byte_end":220144,"line_start":111,"line_end":111,"column_start":5,"column_end":31}},{"value":"/ If the text has no font attached, a None is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220149,"byte_end":220206,"line_start":112,"line_end":112,"column_start":5,"column_end":62}},{"value":"/ The returned pointer is const, which means that you can't","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220211,"byte_end":220272,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/ modify the font when you retrieve it with this function.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220277,"byte_end":220337,"line_start":114,"line_end":114,"column_start":5,"column_end":65}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220342,"byte_end":220353,"line_start":115,"line_end":115,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220877,"byte_end":220891,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"set_fill_color","qualname":"<Text>::set_fill_color","value":"pub fn set_fill_color(&mut Self, Color)","parent":null,"children":[],"decl_id":null,"docs":" Set the fill color of the text.","sig":null,"attributes":[{"value":"/ Set the fill color of the text.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220624,"byte_end":220659,"line_start":128,"line_end":128,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220664,"byte_end":220667,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ By default, the text's fill color is opaque white. Setting the fill color to a transparent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220672,"byte_end":220766,"line_start":130,"line_end":130,"column_start":5,"column_end":99}},{"value":"/ color with an outline will cause the outline to be displayed in the fill area of the text.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220771,"byte_end":220865,"line_start":131,"line_end":131,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221114,"byte_end":221131,"line_start":139,"line_end":139,"column_start":12,"column_end":29},"name":"set_outline_color","qualname":"<Text>::set_outline_color","value":"pub fn set_outline_color(&mut Self, Color)","parent":null,"children":[],"decl_id":null,"docs":" Set the outline color of the text.","sig":null,"attributes":[{"value":"/ Set the outline color of the text.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":220994,"byte_end":221032,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221037,"byte_end":221040,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ By default, the text's outline color is opaque black.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221045,"byte_end":221102,"line_start":138,"line_end":138,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221468,"byte_end":221489,"line_start":149,"line_end":149,"column_start":12,"column_end":33},"name":"set_outline_thickness","qualname":"<Text>::set_outline_thickness","value":"pub fn set_outline_thickness(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set the thickness of the text's outline.","sig":null,"attributes":[{"value":"/ Set the thickness of the text's outline.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221237,"byte_end":221281,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221286,"byte_end":221289,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ By default, the outline thickness is 0.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221294,"byte_end":221337,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221342,"byte_end":221345,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Be aware that using a negative value for the outline thickness will cause distorted","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221350,"byte_end":221437,"line_start":147,"line_end":147,"column_start":5,"column_end":92}},{"value":"/ rendering.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221442,"byte_end":221456,"line_start":148,"line_end":148,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221670,"byte_end":221680,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"fill_color","qualname":"<Text>::fill_color","value":"pub fn fill_color(&Self) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Returns the fill color of the text.\n","sig":null,"attributes":[{"value":"/ Returns the fill color of the text.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221603,"byte_end":221642,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221647,"byte_end":221658,"line_start":154,"line_end":154,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221842,"byte_end":221855,"line_start":161,"line_end":161,"column_start":12,"column_end":25},"name":"outline_color","qualname":"<Text>::outline_color","value":"pub fn outline_color(&Self) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Returns the outline color of the text.\n","sig":null,"attributes":[{"value":"/ Returns the outline color of the text.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221772,"byte_end":221814,"line_start":159,"line_end":159,"column_start":5,"column_end":47}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221819,"byte_end":221830,"line_start":160,"line_end":160,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222035,"byte_end":222052,"line_start":167,"line_end":167,"column_start":12,"column_end":29},"name":"outline_thickness","qualname":"<Text>::outline_thickness","value":"pub fn outline_thickness(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the outline thickness of the text, in pixels.\n","sig":null,"attributes":[{"value":"/ Returns the outline thickness of the text, in pixels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":221950,"byte_end":222007,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222012,"byte_end":222023,"line_start":166,"line_end":166,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222678,"byte_end":222696,"line_start":185,"line_end":185,"column_start":12,"column_end":30},"name":"find_character_pos","qualname":"<Text>::find_character_pos","value":"pub fn find_character_pos(&Self, usize) -> Vector2f","parent":null,"children":[],"decl_id":null,"docs":" Return the position of the index-th character in a text","sig":null,"attributes":[{"value":"/ Return the position of the index-th character in a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222142,"byte_end":222201,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222206,"byte_end":222209,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function computes the visual position of a character","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222214,"byte_end":222275,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/ from its index in the string. The returned position is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222280,"byte_end":222338,"line_start":174,"line_end":174,"column_start":5,"column_end":63}},{"value":"/ in global coordinates (translation, rotation, scale and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222343,"byte_end":222402,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/ origin are applied).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222407,"byte_end":222431,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/ If index is out of range, the position of the end of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222436,"byte_end":222492,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/ the string is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222497,"byte_end":222524,"line_start":178,"line_end":178,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222529,"byte_end":222532,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222537,"byte_end":222552,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/ * index - The index of the character","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222557,"byte_end":222597,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222602,"byte_end":222605,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Return the position of the character","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222610,"byte_end":222650,"line_start":183,"line_end":183,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222655,"byte_end":222666,"line_start":184,"line_end":184,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223279,"byte_end":223291,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"local_bounds","qualname":"<Text>::local_bounds","value":"pub fn local_bounds(&Self) -> FloatRect","parent":null,"children":[],"decl_id":null,"docs":" Get the local bounding rectangle of a text","sig":null,"attributes":[{"value":"/ Get the local bounding rectangle of a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222829,"byte_end":222875,"line_start":189,"line_end":189,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222880,"byte_end":222883,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The returned rectangle is in local coordinates, which means","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222888,"byte_end":222951,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/ that it ignores the transformations (translation, rotation,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":222956,"byte_end":223019,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/ scale, ...) that are applied to the entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223024,"byte_end":223071,"line_start":193,"line_end":193,"column_start":5,"column_end":52}},{"value":"/ In other words, this function returns the bounds of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223076,"byte_end":223135,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ entity in the entity's coordinate system.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223140,"byte_end":223185,"line_start":195,"line_end":195,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223190,"byte_end":223193,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Return the local bounding rectangle of the entity","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223198,"byte_end":223251,"line_start":197,"line_end":197,"column_start":5,"column_end":58}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223256,"byte_end":223267,"line_start":198,"line_end":198,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223872,"byte_end":223885,"line_start":213,"line_end":213,"column_start":12,"column_end":25},"name":"global_bounds","qualname":"<Text>::global_bounds","value":"pub fn global_bounds(&Self) -> FloatRect","parent":null,"children":[],"decl_id":null,"docs":" Get the global bounding rectangle of a text","sig":null,"attributes":[{"value":"/ Get the global bounding rectangle of a text","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223403,"byte_end":223450,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223455,"byte_end":223458,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The returned rectangle is in global coordinates, which means","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223463,"byte_end":223527,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ that it takes in account the transformations (translation,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223532,"byte_end":223594,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ rotation, scale, ...) that are applied to the entity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223599,"byte_end":223656,"line_start":207,"line_end":207,"column_start":5,"column_end":62}},{"value":"/ In other words, this function returns the bounds of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223661,"byte_end":223720,"line_start":208,"line_end":208,"column_start":5,"column_end":64}},{"value":"/ text in the global 2D world's coordinate system.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223725,"byte_end":223777,"line_start":209,"line_end":209,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223782,"byte_end":223785,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Return the global bounding rectangle of the entity","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223790,"byte_end":223844,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":223849,"byte_end":223860,"line_start":212,"line_end":212,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3728},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text_style.rs","byte_start":226858,"byte_end":226867,"line_start":6,"line_end":6,"column_start":16,"column_end":25},"name":"TextStyle","qualname":"::graphics::text_style::TextStyle","value":"TextStyle {  }","parent":null,"children":[{"krate":0,"index":3729}],"decl_id":null,"docs":" Available text styles.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":13533743,"byte_end":13533752,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3764},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text_style.rs","byte_start":226931,"byte_end":226938,"line_start":8,"line_end":8,"column_start":15,"column_end":22},"name":"REGULAR","qualname":"::graphics::text_style::TextStyle::REGULAR","value":"Self","parent":{"krate":0,"index":3763},"children":[],"decl_id":null,"docs":" Regular characters, no style.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3765},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text_style.rs","byte_start":226987,"byte_end":226991,"line_start":10,"line_end":10,"column_start":15,"column_end":19},"name":"BOLD","qualname":"::graphics::text_style::TextStyle::BOLD","value":"Self","parent":{"krate":0,"index":3763},"children":[],"decl_id":null,"docs":" Bold characters.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3766},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text_style.rs","byte_start":227042,"byte_end":227048,"line_start":12,"line_end":12,"column_start":15,"column_end":21},"name":"ITALIC","qualname":"::graphics::text_style::TextStyle::ITALIC","value":"Self","parent":{"krate":0,"index":3763},"children":[],"decl_id":null,"docs":" Italic characters.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3767},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text_style.rs","byte_start":227103,"byte_end":227113,"line_start":14,"line_end":14,"column_start":15,"column_end":25},"name":"UNDERLINED","qualname":"::graphics::text_style::TextStyle::UNDERLINED","value":"Self","parent":{"krate":0,"index":3763},"children":[],"decl_id":null,"docs":" Underlined characters.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3830},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229556,"byte_end":229563,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"Texture","qualname":"::graphics::texture::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":3831}],"decl_id":null,"docs":" [`Image`] living on the graphics card that can be used for drawing.","sig":null,"attributes":[{"value":"/ [`Image`] living on the graphics card that can be used for drawing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227553,"byte_end":227624,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227625,"byte_end":227628,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `Texture` stores pixels that can be drawn, with a sprite for example.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227629,"byte_end":227702,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227703,"byte_end":227706,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A texture lives in the graphics card memory, therefore it is very fast to draw a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227707,"byte_end":227791,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ texture to a render target,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227792,"byte_end":227823,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ or copy a render target to a texture (the graphics card can access both directly).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227824,"byte_end":227910,"line_start":24,"line_end":24,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227911,"byte_end":227914,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Being stored in the graphics card memory has some drawbacks.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227915,"byte_end":227979,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ A texture cannot be manipulated as freely as a [`Image`],","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":227980,"byte_end":228041,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/ you need to prepare the pixels first and then upload them to the texture in a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228042,"byte_end":228123,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ single operation (see the various update methods below).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228124,"byte_end":228184,"line_start":29,"line_end":29,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228185,"byte_end":228188,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ `Texture` makes it easy to convert from/to [`Image`],","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228189,"byte_end":228246,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/ but keep in mind that these calls require transfers between the graphics card and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228247,"byte_end":228332,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ the central memory, therefore they are slow operations.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228333,"byte_end":228392,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228393,"byte_end":228396,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A texture can be loaded from an image, but also directly from a file/memory/stream.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228397,"byte_end":228484,"line_start":35,"line_end":35,"column_start":1,"column_end":88}},{"value":"/ The necessary shortcuts are defined so that you don't need an image first for the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228485,"byte_end":228570,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ most common cases.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228571,"byte_end":228593,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/ However, if you want to perform some modifications on the pixels before creating the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228594,"byte_end":228682,"line_start":38,"line_end":38,"column_start":1,"column_end":89}},{"value":"/ final texture, you can load your file to a [`Image`], do whatever you need with the pixels,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228683,"byte_end":228778,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ and then call [`Texture::from_image`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228779,"byte_end":228821,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228822,"byte_end":228825,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Since they live in the graphics card memory,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228826,"byte_end":228874,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/ the pixels of a texture cannot be accessed without a slow copy first.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228875,"byte_end":228948,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ And they cannot be accessed individually.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228949,"byte_end":228994,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/ Therefore, if you need to read the texture's pixels (like for pixel-perfect collisions),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":228995,"byte_end":229087,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/ it is recommended to store the collision information separately,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229088,"byte_end":229156,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ for example in an array of booleans.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229157,"byte_end":229197,"line_start":47,"line_end":47,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229198,"byte_end":229201,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Like [`Image`], `Texture` can handle a unique internal representation of pixels,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229202,"byte_end":229286,"line_start":49,"line_end":49,"column_start":1,"column_end":85}},{"value":"/ which is RGBA 32 bits.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229287,"byte_end":229313,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/ This means that a pixel must be composed of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229314,"byte_end":229361,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/ 8 bits red, green, blue and alpha channels – just like a [`Color`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229362,"byte_end":229435,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229436,"byte_end":229439,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Color`]: crate::graphics::Color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229440,"byte_end":229477,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229495,"byte_end":229533,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229534,"byte_end":229544,"line_start":57,"line_end":57,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229714,"byte_end":229718,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"size","qualname":"<Texture>::size","value":"pub fn size(&Self) -> Vector2u","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the texture","sig":null,"attributes":[{"value":"/ Return the size of the texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229610,"byte_end":229644,"line_start":63,"line_end":63,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229649,"byte_end":229652,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Return the Size in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229657,"byte_end":229686,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229691,"byte_end":229702,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229995,"byte_end":230004,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"is_smooth","qualname":"<Texture>::is_smooth","value":"pub fn is_smooth(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether the smooth filter is enabled or not for a texture","sig":null,"attributes":[{"value":"/ Tell whether the smooth filter is enabled or not for a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229824,"byte_end":229890,"line_start":70,"line_end":70,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229895,"byte_end":229898,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Return true if smoothing is enabled, false if it is disabled","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229903,"byte_end":229967,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229972,"byte_end":229983,"line_start":73,"line_end":73,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230251,"byte_end":230262,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"is_repeated","qualname":"<Texture>::is_repeated","value":"pub fn is_repeated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether a texture is repeated or not","sig":null,"attributes":[{"value":"/ Tell whether a texture is repeated or not","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230099,"byte_end":230144,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230149,"byte_end":230152,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Return frue if repeat mode is enabled, false if it is disabled","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230157,"byte_end":230223,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230228,"byte_end":230239,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230490,"byte_end":230503,"line_start":88,"line_end":88,"column_start":12,"column_end":25},"name":"copy_to_image","qualname":"<Texture>::copy_to_image","value":"pub fn copy_to_image(&Self) -> Option<Image>","parent":null,"children":[],"decl_id":null,"docs":" Copy a texture's pixels to an image","sig":null,"attributes":[{"value":"/ Copy a texture's pixels to an image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230359,"byte_end":230398,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230403,"byte_end":230406,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Return an image containing the texture's pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230411,"byte_end":230462,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230467,"byte_end":230478,"line_start":87,"line_end":87,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230824,"byte_end":230831,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"is_srgb","qualname":"<Texture>::is_srgb","value":"pub fn is_srgb(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether the texture source is converted from sRGB or not.\n","sig":null,"attributes":[{"value":"/ Tell whether the texture source is converted from sRGB or not.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230730,"byte_end":230796,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230801,"byte_end":230812,"line_start":97,"line_end":97,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231203,"byte_end":231216,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"native_handle","qualname":"<Texture>::native_handle","value":"pub fn native_handle(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying OpenGL handle of the texture.","sig":null,"attributes":[{"value":"/ Get the underlying OpenGL handle of the texture.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230924,"byte_end":230976,"line_start":101,"line_end":101,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230981,"byte_end":230984,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ You shouldn't need to use this function, unless you have very specific stuff to implement","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":230989,"byte_end":231082,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ that SFML doesn't support, or implement a temporary workaround until a bug is fixed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231087,"byte_end":231175,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231180,"byte_end":231191,"line_start":105,"line_end":105,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231536,"byte_end":231540,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"bind","qualname":"<Texture>::bind","value":"pub fn bind(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Bind a texture for rendering","sig":null,"attributes":[{"value":"/ Bind a texture for rendering","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231306,"byte_end":231338,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231343,"byte_end":231346,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This function is not part of the graphics API, it mustn't be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231351,"byte_end":231415,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/ used when drawing SFML entities. It must be used only if you","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231420,"byte_end":231484,"line_start":113,"line_end":113,"column_start":5,"column_end":69}},{"value":"/ mix `Texture` with OpenGL code.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231489,"byte_end":231524,"line_start":114,"line_end":114,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231931,"byte_end":231934,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<Texture>::new","value":"pub fn new(u32, u32) -> Option<SfBox<Texture>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new texture","sig":null,"attributes":[{"value":"/ Create a new texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231836,"byte_end":231860,"line_start":126,"line_end":126,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231865,"byte_end":231868,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231873,"byte_end":231903,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":231908,"byte_end":231919,"line_start":129,"line_end":129,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232607,"byte_end":232618,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"from_memory","qualname":"<Texture>::from_memory","value":"pub fn from_memory(&[u8], &IntRect) -> Option<SfBox<Texture>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new texture from memory","sig":null,"attributes":[{"value":"/ Create a new texture from memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232103,"byte_end":232139,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232144,"byte_end":232147,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The `area` argument can be used to load only a sub-rectangle of the whole image.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232152,"byte_end":232236,"line_start":137,"line_end":137,"column_start":5,"column_end":89}},{"value":"/ If you want the entire image then use a default [`IntRect`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232241,"byte_end":232305,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ If the area rectangle crosses the bounds of the image,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232310,"byte_end":232368,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/ it is adjusted to fit the image size.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232373,"byte_end":232414,"line_start":140,"line_end":140,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232419,"byte_end":232422,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232427,"byte_end":232442,"line_start":142,"line_end":142,"column_start":5,"column_end":20}},{"value":"/ * mem - Pointer to the file data in memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232447,"byte_end":232493,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/ * area - Area of the image to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232498,"byte_end":232536,"line_start":144,"line_end":144,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232541,"byte_end":232544,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232549,"byte_end":232579,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232584,"byte_end":232595,"line_start":147,"line_end":147,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233389,"byte_end":233400,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<Texture>::from_stream","value":"pub fn from_stream<T: Read + Seek>(&mut T, &mut IntRect)\n-> Option<SfBox<Texture>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new texture from a stream (a struct implementing Read + Seek)","sig":null,"attributes":[{"value":"/ Create a new texture from a stream (a struct implementing Read + Seek)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232855,"byte_end":232929,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232934,"byte_end":232937,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The `area` argument can be used to load only a sub-rectangle of the whole image.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":232942,"byte_end":233026,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ If you want the entire image then use a default [`IntRect`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233031,"byte_end":233095,"line_start":158,"line_end":158,"column_start":5,"column_end":69}},{"value":"/ If the area rectangle crosses the bounds of the image,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233100,"byte_end":233158,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/ it is adjusted to fit the image size.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233163,"byte_end":233204,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233209,"byte_end":233212,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233217,"byte_end":233232,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/ * stream - Your struct, implementing Read and Seek","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233237,"byte_end":233291,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/ * area - Area of the image to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233296,"byte_end":233334,"line_start":164,"line_end":164,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233339,"byte_end":233342,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233347,"byte_end":233377,"line_start":166,"line_end":166,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233892,"byte_end":233901,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Texture>::from_file","value":"pub fn from_file(&str) -> Option<SfBox<Texture>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new texture from a file","sig":null,"attributes":[{"value":"/ Create a new texture from a file","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233705,"byte_end":233741,"line_start":176,"line_end":176,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233746,"byte_end":233749,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233754,"byte_end":233769,"line_start":178,"line_end":178,"column_start":5,"column_end":20}},{"value":"/ * filename - Path of the image file to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233774,"byte_end":233821,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233826,"byte_end":233829,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233834,"byte_end":233864,"line_start":181,"line_end":181,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":233869,"byte_end":233880,"line_start":182,"line_end":182,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234391,"byte_end":234410,"line_start":197,"line_end":197,"column_start":12,"column_end":31},"name":"from_file_with_rect","qualname":"<Texture>::from_file_with_rect","value":"pub fn from_file_with_rect(&str, &IntRect) -> Option<SfBox<Texture>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new texture from a file with a given area","sig":null,"attributes":[{"value":"/ Create a new texture from a file with a given area","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234136,"byte_end":234190,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234195,"byte_end":234198,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234203,"byte_end":234218,"line_start":191,"line_end":191,"column_start":5,"column_end":20}},{"value":"/ * filename - Path of the image file to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234223,"byte_end":234270,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/ * area - Area of the source image to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234275,"byte_end":234320,"line_start":193,"line_end":193,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234325,"byte_end":234328,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234333,"byte_end":234363,"line_start":195,"line_end":195,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234368,"byte_end":234379,"line_start":196,"line_end":196,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234897,"byte_end":234917,"line_start":211,"line_end":211,"column_start":12,"column_end":32},"name":"from_image_with_rect","qualname":"<Texture>::from_image_with_rect","value":"pub fn from_image_with_rect(&Image, &IntRect) -> Option<SfBox<Texture>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new texture from an image","sig":null,"attributes":[{"value":"/ Create a new texture from an image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234661,"byte_end":234699,"line_start":203,"line_end":203,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234704,"byte_end":234707,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234712,"byte_end":234727,"line_start":205,"line_end":205,"column_start":5,"column_end":20}},{"value":"/ * image - Image to upload to the texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234732,"byte_end":234776,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/ * area - Area of the source image to load","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234781,"byte_end":234826,"line_start":207,"line_end":207,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234831,"byte_end":234834,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234839,"byte_end":234869,"line_start":209,"line_end":209,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":234874,"byte_end":234885,"line_start":210,"line_end":210,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235298,"byte_end":235308,"line_start":223,"line_end":223,"column_start":12,"column_end":22},"name":"from_image","qualname":"<Texture>::from_image","value":"pub fn from_image(&Image) -> Option<SfBox<Texture>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new texture from an image","sig":null,"attributes":[{"value":"/ Create a new texture from an image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235112,"byte_end":235150,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235155,"byte_end":235158,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235163,"byte_end":235178,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/ * image - Image to upload to the texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235183,"byte_end":235227,"line_start":219,"line_end":219,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235232,"byte_end":235235,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235240,"byte_end":235270,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235275,"byte_end":235286,"line_start":222,"line_end":222,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235766,"byte_end":235784,"line_start":234,"line_end":234,"column_start":12,"column_end":30},"name":"update_from_window","qualname":"<Texture>::update_from_window","value":"pub fn update_from_window(&mut Self, &Window, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Update a texture from the contents of a window","sig":null,"attributes":[{"value":"/ Update a texture from the contents of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235487,"byte_end":235537,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235542,"byte_end":235545,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235550,"byte_end":235565,"line_start":230,"line_end":230,"column_start":5,"column_end":20}},{"value":"/ * window - Window to copy to the texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235570,"byte_end":235614,"line_start":231,"line_end":231,"column_start":5,"column_end":49}},{"value":"/ * x - X offset in the texture where to copy the source pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235619,"byte_end":235684,"line_start":232,"line_end":232,"column_start":5,"column_end":70}},{"value":"/ * y - Y offset in the texture where to copy the source pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235689,"byte_end":235754,"line_start":233,"line_end":233,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236228,"byte_end":236253,"line_start":244,"line_end":244,"column_start":12,"column_end":37},"name":"update_from_render_window","qualname":"<Texture>::update_from_render_window","value":"pub fn update_from_render_window(&mut Self, &RenderWindow, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Update a texture from the contents of a render window","sig":null,"attributes":[{"value":"/ Update a texture from the contents of a render window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235929,"byte_end":235986,"line_start":238,"line_end":238,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235991,"byte_end":235994,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":235999,"byte_end":236014,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/ * renderWindow - Render-window to copy to the texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236019,"byte_end":236076,"line_start":241,"line_end":241,"column_start":5,"column_end":62}},{"value":"/ * x - X offset in the texture where to copy the source pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236081,"byte_end":236146,"line_start":242,"line_end":242,"column_start":5,"column_end":70}},{"value":"/ * y - Y offset in the texture where to copy the source pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236151,"byte_end":236216,"line_start":243,"line_end":243,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236701,"byte_end":236718,"line_start":254,"line_end":254,"column_start":12,"column_end":29},"name":"update_from_image","qualname":"<Texture>::update_from_image","value":"pub fn update_from_image(&mut Self, &Image, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Update a texture from the contents of an image","sig":null,"attributes":[{"value":"/ Update a texture from the contents of an image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236424,"byte_end":236474,"line_start":248,"line_end":248,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236479,"byte_end":236482,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236487,"byte_end":236502,"line_start":250,"line_end":250,"column_start":5,"column_end":20}},{"value":"/ * image - Image to copy to the texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236507,"byte_end":236549,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/ * x - X offset in the texture where to copy the source pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236554,"byte_end":236619,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ * y - Y offset in the texture where to copy the source pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236624,"byte_end":236689,"line_start":253,"line_end":253,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237392,"byte_end":237410,"line_start":269,"line_end":269,"column_start":19,"column_end":37},"name":"update_from_pixels","qualname":"<Texture>::update_from_pixels","value":"pub unsafe fn update_from_pixels(&mut Self, &[u8], u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Update a part of the texture from an array of pixels.","sig":null,"attributes":[{"value":"/ Update a part of the texture from an array of pixels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236859,"byte_end":236916,"line_start":258,"line_end":258,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236921,"byte_end":236924,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The size of the pixel array must match the width and height arguments,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":236929,"byte_end":237003,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/ and it must contain 32-bits RGBA pixels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237008,"byte_end":237052,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237057,"byte_end":237060,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This function does nothing if pixels is null or if the texture was not previously created.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237065,"byte_end":237159,"line_start":263,"line_end":263,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237164,"byte_end":237167,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237172,"byte_end":237184,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237189,"byte_end":237192,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ No additional check is performed on the size of the pixel array or the bounds of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237197,"byte_end":237285,"line_start":267,"line_end":267,"column_start":5,"column_end":93}},{"value":"/ area to update, passing invalid arguments will lead to an _undefined behavior_.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237290,"byte_end":237373,"line_start":268,"line_end":268,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237797,"byte_end":237807,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"set_smooth","qualname":"<Texture>::set_smooth","value":"pub fn set_smooth(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the smooth filter on a texture","sig":null,"attributes":[{"value":"/ Enable or disable the smooth filter on a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237640,"byte_end":237692,"line_start":280,"line_end":280,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237697,"byte_end":237700,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237705,"byte_end":237720,"line_start":282,"line_end":282,"column_start":5,"column_end":20}},{"value":"/ * smooth - true to enable smoothing, false to disable it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237725,"byte_end":237785,"line_start":283,"line_end":283,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238862,"byte_end":238874,"line_start":306,"line_end":306,"column_start":12,"column_end":24},"name":"set_repeated","qualname":"<Texture>::set_repeated","value":"pub fn set_repeated(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable repeating for a texture","sig":null,"attributes":[{"value":"/ Enable or disable repeating for a texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237933,"byte_end":237978,"line_start":288,"line_end":288,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237983,"byte_end":237986,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ epeating is involved when using texture coordinates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":237991,"byte_end":238046,"line_start":290,"line_end":290,"column_start":5,"column_end":60}},{"value":"/ outside the texture rectangle [0, 0, width, height].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238051,"byte_end":238107,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/ In this case, if repeat mode is enabled, the whole texture","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238112,"byte_end":238174,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/ will be repeated as many times as needed to reach the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238179,"byte_end":238236,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/ coordinate (for example, if the X texture coordinate is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238241,"byte_end":238300,"line_start":294,"line_end":294,"column_start":5,"column_end":64}},{"value":"/ 3 * width, the texture will be repeated 3 times).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238305,"byte_end":238358,"line_start":295,"line_end":295,"column_start":5,"column_end":58}},{"value":"/ If repeat mode is disabled, the \"extra space\" will instead","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238363,"byte_end":238425,"line_start":296,"line_end":296,"column_start":5,"column_end":67}},{"value":"/ be filled with border pixels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238430,"byte_end":238463,"line_start":297,"line_end":297,"column_start":5,"column_end":38}},{"value":"/ Warning: on very old graphics cards, white pixels may appear","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238468,"byte_end":238532,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ when the texture is repeated. With such cards, repeat mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238537,"byte_end":238599,"line_start":299,"line_end":299,"column_start":5,"column_end":67}},{"value":"/ can be used reliably only if the texture has power-of-two","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238604,"byte_end":238665,"line_start":300,"line_end":300,"column_start":5,"column_end":66}},{"value":"/ dimensions (such as 256x128).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238670,"byte_end":238703,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/ Repeating is disabled by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238708,"byte_end":238745,"line_start":302,"line_end":302,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238750,"byte_end":238753,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238758,"byte_end":238773,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/ * repeated  - true to repeat the texture, false to disable repeating","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":238778,"byte_end":238850,"line_start":305,"line_end":305,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239146,"byte_end":239158,"line_start":314,"line_end":314,"column_start":12,"column_end":24},"name":"maximum_size","qualname":"<Texture>::maximum_size","value":"pub fn maximum_size() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum texture size allowed","sig":null,"attributes":[{"value":"/ Get the maximum texture size allowed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239006,"byte_end":239046,"line_start":310,"line_end":310,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239051,"byte_end":239054,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Return the maximum size allowed for textures, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239059,"byte_end":239118,"line_start":312,"line_end":312,"column_start":5,"column_end":64}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239123,"byte_end":239134,"line_start":313,"line_end":313,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240138,"byte_end":240146,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"set_srgb","qualname":"<Texture>::set_srgb","value":"pub fn set_srgb(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable conversion from sRGB.","sig":null,"attributes":[{"value":"/ Enable or disable conversion from sRGB.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239232,"byte_end":239275,"line_start":318,"line_end":318,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239280,"byte_end":239283,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ When providing texture data from an image file or memory, it can either be stored in a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239288,"byte_end":239378,"line_start":320,"line_end":320,"column_start":5,"column_end":95}},{"value":"/ linear color space or an sRGB color space. Most digital images account for gamma correction","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239383,"byte_end":239478,"line_start":321,"line_end":321,"column_start":5,"column_end":100}},{"value":"/ already, so they would need to be \"uncorrected\" back to linear color space before being","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239483,"byte_end":239574,"line_start":322,"line_end":322,"column_start":5,"column_end":96}},{"value":"/ processed by the hardware. The hardware can automatically convert it from the sRGB","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239579,"byte_end":239665,"line_start":323,"line_end":323,"column_start":5,"column_end":91}},{"value":"/ color space to a linear color space when it gets sampled. When the rendered image gets","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239670,"byte_end":239760,"line_start":324,"line_end":324,"column_start":5,"column_end":95}},{"value":"/ output to the final framebuffer, it gets converted back to sRGB.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239765,"byte_end":239833,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239838,"byte_end":239841,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ After enabling or disabling sRGB conversion, make sure to reload the texture data in","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239846,"byte_end":239934,"line_start":327,"line_end":327,"column_start":5,"column_end":93}},{"value":"/ order for the setting to take effect.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239939,"byte_end":239980,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239985,"byte_end":239988,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This option is only useful in conjunction with an sRGB capable framebuffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":239993,"byte_end":240072,"line_start":330,"line_end":330,"column_start":5,"column_end":84}},{"value":"/ This can be requested during window creation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240077,"byte_end":240126,"line_start":331,"line_end":331,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241489,"byte_end":241504,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"name":"generate_mipmap","qualname":"<Texture>::generate_mipmap","value":"pub fn generate_mipmap(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Generate a mipmap using the current texture data.","sig":null,"attributes":[{"value":"/ Generate a mipmap using the current texture data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240269,"byte_end":240322,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240327,"byte_end":240330,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Mipmaps are pre-computed chains of optimized textures. Each level of texture in a mipmap","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240335,"byte_end":240427,"line_start":338,"line_end":338,"column_start":5,"column_end":97}},{"value":"/ is generated by halving each of the previous level's dimensions. This is done until the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240432,"byte_end":240523,"line_start":339,"line_end":339,"column_start":5,"column_end":96}},{"value":"/ final level has the size of 1x1. The textures generated in this process may make use of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240528,"byte_end":240619,"line_start":340,"line_end":340,"column_start":5,"column_end":96}},{"value":"/ more advanced filters which might improve the visual quality of textures when they are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240624,"byte_end":240714,"line_start":341,"line_end":341,"column_start":5,"column_end":95}},{"value":"/ applied to objects much smaller than they are. This is known as minification. Because","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240719,"byte_end":240808,"line_start":342,"line_end":342,"column_start":5,"column_end":94}},{"value":"/ fewer texels (texture elements) have to be sampled from when heavily minified, usage of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240813,"byte_end":240904,"line_start":343,"line_end":343,"column_start":5,"column_end":96}},{"value":"/ mipmaps can also improve rendering performance in certain scenarios.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240909,"byte_end":240981,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240986,"byte_end":240989,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Mipmap generation relies on the necessary OpenGL extension being available.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":240994,"byte_end":241073,"line_start":346,"line_end":346,"column_start":5,"column_end":84}},{"value":"/ If it is unavailable or generation fails due to another reason, this function will return","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241078,"byte_end":241171,"line_start":347,"line_end":347,"column_start":5,"column_end":98}},{"value":"/ false. Mipmap data is only valid from the time it is generated until the next time the base","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241176,"byte_end":241271,"line_start":348,"line_end":348,"column_start":5,"column_end":100}},{"value":"/ level image is modified, at which point this function will have to be called again to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241276,"byte_end":241365,"line_start":349,"line_end":349,"column_start":5,"column_end":94}},{"value":"/ regenerate it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241370,"byte_end":241388,"line_start":350,"line_end":350,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241393,"byte_end":241396,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Returns true if mipmap generation was successful, false if unsuccessful.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241401,"byte_end":241477,"line_start":352,"line_end":352,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3835},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242284,"byte_end":242293,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"Transform","qualname":"::graphics::transform::Transform","value":"","parent":null,"children":[],"decl_id":null,"docs":" Define a 3x3 transform matrix.","sig":null,"attributes":[{"value":"/ Define a 3x3 transform matrix.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242085,"byte_end":242119,"line_start":4,"line_end":4,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242120,"byte_end":242123,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A `Transform` specifies how to translate,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242124,"byte_end":242169,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"/ rotate, scale, shear, project, whatever things.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242170,"byte_end":242221,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242222,"byte_end":242242,"line_start":8,"line_end":8,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3837},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242294,"byte_end":242314,"line_start":10,"line_end":10,"column_start":22,"column_end":42},"name":"0","qualname":"::graphics::transform::Transform::0","value":"csfml_graphics_sys::sfTransform","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242913,"byte_end":242916,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Transform>::new","value":"pub fn new(f32, f32, f32, f32, f32, f32, f32, f32, f32) -> Transform","parent":null,"children":[],"decl_id":null,"docs":" Creates a new transform from a 3x3 matrix.","sig":null,"attributes":[{"value":"/ Creates a new transform from a 3x3 matrix.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242339,"byte_end":242385,"line_start":13,"line_end":13,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242390,"byte_end":242393,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242398,"byte_end":242413,"line_start":15,"line_end":15,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242418,"byte_end":242421,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ - *a00* : Element (0, 0) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242426,"byte_end":242468,"line_start":17,"line_end":17,"column_start":5,"column_end":47}},{"value":"/ - *a01* : Element (0, 1) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242473,"byte_end":242515,"line_start":18,"line_end":18,"column_start":5,"column_end":47}},{"value":"/ - *a02* : Element (0, 2) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242520,"byte_end":242562,"line_start":19,"line_end":19,"column_start":5,"column_end":47}},{"value":"/ - *a10* : Element (1, 0) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242567,"byte_end":242609,"line_start":20,"line_end":20,"column_start":5,"column_end":47}},{"value":"/ - *a11* : Element (1, 1) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242614,"byte_end":242656,"line_start":21,"line_end":21,"column_start":5,"column_end":47}},{"value":"/ - *a12* : Element (1, 2) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242661,"byte_end":242703,"line_start":22,"line_end":22,"column_start":5,"column_end":47}},{"value":"/ - *a20* : Element (2, 0) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242708,"byte_end":242750,"line_start":23,"line_end":23,"column_start":5,"column_end":47}},{"value":"/ - *a21* : Element (2, 1) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242755,"byte_end":242797,"line_start":24,"line_end":24,"column_start":5,"column_end":47}},{"value":"/ - *a22* : Element (2, 2) of the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242802,"byte_end":242844,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242849,"byte_end":242885,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242890,"byte_end":242901,"line_start":27,"line_end":27,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243299,"byte_end":243309,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"get_matrix","qualname":"<Transform>::get_matrix","value":"pub fn get_matrix(&Self, &mut [f32; ])","parent":null,"children":[],"decl_id":null,"docs":" Return the matrix\n","sig":null,"attributes":[{"value":"/ Return the matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243266,"byte_end":243287,"line_start":46,"line_end":46,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":2264},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243507,"byte_end":243515,"line_start":54,"line_end":54,"column_start":15,"column_end":23},"name":"IDENTITY","qualname":"::graphics::transform::Transform::IDENTITY","value":"Self","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" The identity transform (does nothing)\n","sig":null,"attributes":[{"value":"/ The identity transform (does nothing)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243451,"byte_end":243492,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243824,"byte_end":243831,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform>::inverse","value":"pub fn inverse(&Self) -> Transform","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse of a transform","sig":null,"attributes":[{"value":"/ Return the inverse of a transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243620,"byte_end":243657,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243662,"byte_end":243665,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If the inverse cannot be computed, a new identity transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243670,"byte_end":243733,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243738,"byte_end":243754,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243759,"byte_end":243762,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Return the inverse matrix","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243767,"byte_end":243796,"line_start":63,"line_end":63,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243801,"byte_end":243812,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244229,"byte_end":244236,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"combine","qualname":"<Transform>::combine","value":"pub fn combine(&mut Self, &Transform)","parent":null,"children":[],"decl_id":null,"docs":" Combine two transforms","sig":null,"attributes":[{"value":"/ Combine two transforms","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243932,"byte_end":243958,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243963,"byte_end":243966,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The result is a transform that is equivalent to applying","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":243971,"byte_end":244031,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/ transform followed by other. Mathematically, it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244036,"byte_end":244090,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/ equivalent to a matrix multiplication.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244095,"byte_end":244137,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244142,"byte_end":244145,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244150,"byte_end":244165,"line_start":75,"line_end":75,"column_start":5,"column_end":20}},{"value":"/ * other - Transform to combine to transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244170,"byte_end":244217,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244509,"byte_end":244518,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"translate","qualname":"<Transform>::translate","value":"pub fn translate(&mut Self, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Combine a transform with a translation","sig":null,"attributes":[{"value":"/ Combine a transform with a translation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244347,"byte_end":244389,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244394,"byte_end":244397,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244402,"byte_end":244417,"line_start":83,"line_end":83,"column_start":5,"column_end":20}},{"value":"/ * x - Offset to apply on X axis","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244422,"byte_end":244457,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/ * y - Offset to apply on Y axis","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244462,"byte_end":244497,"line_start":85,"line_end":85,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244758,"byte_end":244764,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Transform>::rotate","value":"pub fn rotate(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Combine the current transform with a rotation","sig":null,"attributes":[{"value":"/ Combine the current transform with a rotation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244624,"byte_end":244673,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244678,"byte_end":244681,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244686,"byte_end":244701,"line_start":92,"line_end":92,"column_start":5,"column_end":20}},{"value":"/ * angle - Rotation angle, in degrees","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244706,"byte_end":244746,"line_start":93,"line_end":93,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245392,"byte_end":245410,"line_start":109,"line_end":109,"column_start":12,"column_end":30},"name":"rotate_with_center","qualname":"<Transform>::rotate_with_center","value":"pub fn rotate_with_center(&mut Self, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Combine the current transform with a rotation","sig":null,"attributes":[{"value":"/ Combine the current transform with a rotation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244864,"byte_end":244913,"line_start":98,"line_end":98,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244918,"byte_end":244921,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The center of rotation is provided for convenience as a second","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244926,"byte_end":244992,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ argument, so that you can build rotations around arbitrary points","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":244997,"byte_end":245066,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ more easily (and efficiently) than the usual","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245071,"byte_end":245119,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/ [translate(-center), rotate(angle), translate(center)].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245124,"byte_end":245183,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245188,"byte_end":245191,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245196,"byte_end":245211,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/ * angle - Rotation angle, in degrees","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245216,"byte_end":245256,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/ * `center_x` - X coordinate of the center of rotation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245261,"byte_end":245318,"line_start":107,"line_end":107,"column_start":5,"column_end":62}},{"value":"/ * `center_y` - Y coordinate of the center of rotation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245323,"byte_end":245380,"line_start":108,"line_end":108,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245760,"byte_end":245765,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"scale","qualname":"<Transform>::scale","value":"pub fn scale(&mut Self, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Combine the current transform with a scaling","sig":null,"attributes":[{"value":"/ Combine the current transform with a scaling","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245570,"byte_end":245618,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245623,"byte_end":245626,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245631,"byte_end":245646,"line_start":115,"line_end":115,"column_start":5,"column_end":20}},{"value":"/ * `scale_x` - Scaling factor on the X axis","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245651,"byte_end":245697,"line_start":116,"line_end":116,"column_start":5,"column_end":51}},{"value":"/ * `scale_y` - Scaling factor on the Y axis","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245702,"byte_end":245748,"line_start":117,"line_end":117,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246462,"byte_end":246479,"line_start":134,"line_end":134,"column_start":12,"column_end":29},"name":"scale_with_center","qualname":"<Transform>::scale_with_center","value":"pub fn scale_with_center(&mut Self, f32, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Combine the current transform with a scaling","sig":null,"attributes":[{"value":"/ Combine the current transform with a scaling","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245891,"byte_end":245939,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245944,"byte_end":245947,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The center of scaling is provided for convenience as a second","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":245952,"byte_end":246017,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/ argument, so that you can build scaling around arbitrary points","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246022,"byte_end":246089,"line_start":125,"line_end":125,"column_start":5,"column_end":72}},{"value":"/ more easily (and efficiently) than the usual","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246094,"byte_end":246142,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/ [translate(-center), scale(factors), translate(center)]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246147,"byte_end":246206,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246211,"byte_end":246214,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246219,"byte_end":246234,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/ * `scale_x` - Scaling factor on X axis","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246239,"byte_end":246281,"line_start":130,"line_end":130,"column_start":5,"column_end":47}},{"value":"/ * `scale_y` - Scaling factor on Y axis","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246286,"byte_end":246328,"line_start":131,"line_end":131,"column_start":5,"column_end":47}},{"value":"/ * `center_x` - X coordinate of the center of scaling","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246333,"byte_end":246389,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/ * `center_y` - Y coordinate of the center of scaling","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246394,"byte_end":246450,"line_start":133,"line_end":133,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246856,"byte_end":246871,"line_start":147,"line_end":147,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform>::transform_point","value":"pub fn transform_point(&Self, Vector2f) -> Vector2f","parent":null,"children":[],"decl_id":null,"docs":" Apply a transform to a 2D point","sig":null,"attributes":[{"value":"/ Apply a transform to a 2D point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246685,"byte_end":246720,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246725,"byte_end":246728,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246733,"byte_end":246748,"line_start":142,"line_end":142,"column_start":5,"column_end":20}},{"value":"/ * point - Point to transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246753,"byte_end":246785,"line_start":143,"line_end":143,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246790,"byte_end":246793,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Return a transformed point","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246798,"byte_end":246828,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":246833,"byte_end":246844,"line_start":146,"line_end":146,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247491,"byte_end":247505,"line_start":164,"line_end":164,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Transform>::transform_rect","value":"pub fn transform_rect(&Self, &FloatRect) -> FloatRect","parent":null,"children":[],"decl_id":null,"docs":" Apply a transform to a rectangle","sig":null,"attributes":[{"value":"/ Apply a transform to a rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247014,"byte_end":247050,"line_start":151,"line_end":151,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247055,"byte_end":247058,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Since SFML doesn't provide support for oriented rectangles,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247063,"byte_end":247126,"line_start":153,"line_end":153,"column_start":5,"column_end":68}},{"value":"/ the result of this function is always an axis-aligned","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247131,"byte_end":247188,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/ rectangle. Which means that if the transform contains a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247193,"byte_end":247252,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/ rotation, the bounding rectangle of the transformed rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247257,"byte_end":247322,"line_start":156,"line_end":156,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247327,"byte_end":247343,"line_start":157,"line_end":157,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247348,"byte_end":247351,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247356,"byte_end":247371,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/ rectangle - Rectangle to transform","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247376,"byte_end":247414,"line_start":160,"line_end":160,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247419,"byte_end":247422,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Return the transformed rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247427,"byte_end":247463,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247468,"byte_end":247479,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":2285},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":247957,"byte_end":247970,"line_start":4,"line_end":4,"column_start":11,"column_end":24},"name":"Transformable","qualname":"::graphics::transformable::Transformable","value":"Transformable","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2303}],"decl_id":null,"docs":" Decomposed transform defined by a position, a rotation and a scale.\n","sig":null,"attributes":[{"value":"/ Decomposed transform defined by a position, a rotation and a scale.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":247875,"byte_end":247946,"line_start":3,"line_end":3,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248256,"byte_end":248268,"line_start":10,"line_end":10,"column_start":8,"column_end":20},"name":"set_position","qualname":"::graphics::transformable::Transformable::set_position","value":"pub fn set_position<P: Into<Vector2f>>(&mut Self, P)","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Sets the position of the object.","sig":null,"attributes":[{"value":"/ Sets the position of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":247977,"byte_end":248013,"line_start":5,"line_end":5,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248018,"byte_end":248021,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ This function completely overwrites the previous position.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248026,"byte_end":248088,"line_start":7,"line_end":7,"column_start":5,"column_end":67}},{"value":"/ See [`move_`](Self::move_) to apply an offset based on the previous position instead.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248093,"byte_end":248182,"line_start":8,"line_end":8,"column_start":5,"column_end":94}},{"value":"/ The default position of a transformable object is (0, 0).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248187,"byte_end":248248,"line_start":9,"line_end":9,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248587,"byte_end":248599,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"set_rotation","qualname":"::graphics::transformable::Transformable::set_rotation","value":"pub fn set_rotation(&mut Self, f32)","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Set the orientation of the object.","sig":null,"attributes":[{"value":"/ Set the orientation of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248317,"byte_end":248355,"line_start":11,"line_end":11,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248360,"byte_end":248363,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This function completely overwrites the previous rotation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248368,"byte_end":248430,"line_start":13,"line_end":13,"column_start":5,"column_end":67}},{"value":"/ See the rotate function to add an angle based on the previous rotation instead.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248435,"byte_end":248518,"line_start":14,"line_end":14,"column_start":5,"column_end":88}},{"value":"/ The default rotation of a transformable object is 0.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248523,"byte_end":248579,"line_start":15,"line_end":15,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248896,"byte_end":248905,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"set_scale","qualname":"::graphics::transformable::Transformable::set_scale","value":"pub fn set_scale<S: Into<Vector2f>>(&mut Self, S)","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Sets the scale factors of the object.","sig":null,"attributes":[{"value":"/ Sets the scale factors of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248628,"byte_end":248669,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248674,"byte_end":248677,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This function completely overwrites the previous scale.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248682,"byte_end":248741,"line_start":19,"line_end":19,"column_start":5,"column_end":64}},{"value":"/ See the scale function to add a factor based on the previous scale instead.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248746,"byte_end":248825,"line_start":20,"line_end":20,"column_start":5,"column_end":84}},{"value":"/ The default scale of a transformable object is (1, 1).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248830,"byte_end":248888,"line_start":21,"line_end":21,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249350,"byte_end":249360,"line_start":30,"line_end":30,"column_start":8,"column_end":18},"name":"set_origin","qualname":"::graphics::transformable::Transformable::set_origin","value":"pub fn set_origin<O: Into<Vector2f>>(&mut Self, O)","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Sets the local origin of the object.","sig":null,"attributes":[{"value":"/ Sets the local origin of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248951,"byte_end":248991,"line_start":23,"line_end":23,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":248996,"byte_end":248999,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The origin of an object defines the center point for all transformations","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249004,"byte_end":249080,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ (position, scale, rotation).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249085,"byte_end":249117,"line_start":26,"line_end":26,"column_start":5,"column_end":37}},{"value":"/ The coordinates of this point must be relative to the top-left corner of the object,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249122,"byte_end":249210,"line_start":27,"line_end":27,"column_start":5,"column_end":93}},{"value":"/ and ignore all transformations (position, scale, rotation).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249215,"byte_end":249278,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ The default origin of a transformable object is (0, 0).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249283,"byte_end":249342,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249451,"byte_end":249459,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"position","qualname":"::graphics::transformable::Transformable::position","value":"pub fn position(&Self) -> Vector2f","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Gets the position of the object.\n","sig":null,"attributes":[{"value":"/ Gets the position of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249407,"byte_end":249443,"line_start":31,"line_end":31,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249590,"byte_end":249598,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"rotation","qualname":"::graphics::transformable::Transformable::rotation","value":"pub fn rotation(&Self) -> f32","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Gets the rotation of the object.","sig":null,"attributes":[{"value":"/ Gets the rotation of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249484,"byte_end":249520,"line_start":33,"line_end":33,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249525,"byte_end":249528,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The rotation is always in the range [0, 360].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249533,"byte_end":249582,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249667,"byte_end":249676,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"get_scale","qualname":"::graphics::transformable::Transformable::get_scale","value":"pub fn get_scale(&Self) -> Vector2f","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Gets the current scale of the object.\n","sig":null,"attributes":[{"value":"/ Gets the current scale of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249618,"byte_end":249659,"line_start":37,"line_end":37,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249749,"byte_end":249755,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"origin","qualname":"::graphics::transformable::Transformable::origin","value":"pub fn origin(&Self) -> Vector2f","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Gets the local origin of the object.\n","sig":null,"attributes":[{"value":"/ Gets the local origin of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249701,"byte_end":249741,"line_start":39,"line_end":39,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249974,"byte_end":249979,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"move_","qualname":"::graphics::transformable::Transformable::move_","value":"pub fn move_<O: Into<Vector2f>>(&mut Self, O)","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Moves the object by a given offset.","sig":null,"attributes":[{"value":"/ Moves the object by a given offset.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249780,"byte_end":249819,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249824,"byte_end":249827,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function adds to the current position of the object,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249832,"byte_end":249893,"line_start":43,"line_end":43,"column_start":5,"column_end":66}},{"value":"/ unlike [`set_position`](Self::set_position) which overwrites it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":249898,"byte_end":249966,"line_start":44,"line_end":44,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250205,"byte_end":250211,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"rotate","qualname":"::graphics::transformable::Transformable::rotate","value":"pub fn rotate(&mut Self, f32)","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Rotates the object.","sig":null,"attributes":[{"value":"/ Rotates the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250026,"byte_end":250049,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250054,"byte_end":250057,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function adds to the current rotation of the object, unlike","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250062,"byte_end":250130,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ [`set_rotation`](Self::set_rotation), which overwrites it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250135,"byte_end":250197,"line_start":49,"line_end":49,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250412,"byte_end":250417,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"scale","qualname":"::graphics::transformable::Transformable::scale","value":"pub fn scale<F: Into<Vector2f>>(&mut Self, F)","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Scales the object.","sig":null,"attributes":[{"value":"/ Scales the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250240,"byte_end":250262,"line_start":51,"line_end":51,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250267,"byte_end":250270,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function multiplies the current scale of the object, unlike","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250275,"byte_end":250343,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ [`set_scale`](Self::set_scale), which overwrites it.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250348,"byte_end":250404,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250519,"byte_end":250528,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"transform","qualname":"::graphics::transformable::Transformable::transform","value":"pub fn transform(&Self) -> Transform","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Gets the combined transform of the object.\n","sig":null,"attributes":[{"value":"/ Gets the combined transform of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250465,"byte_end":250511,"line_start":56,"line_end":56,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250616,"byte_end":250633,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"inverse_transform","qualname":"::graphics::transformable::Transformable::inverse_transform","value":"pub fn inverse_transform(&Self) -> Transform","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":" Gets the inverse combined transform of the object.\n","sig":null,"attributes":[{"value":"/ Gets the inverse combined transform of the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transformable.rs","byte_start":250554,"byte_end":250608,"line_start":58,"line_end":58,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3843},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252517,"byte_end":252523,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"Vertex","qualname":"::graphics::vertex::Vertex","value":"Vertex { position, color, tex_coords }","parent":null,"children":[{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846}],"decl_id":null,"docs":" Define a point with color and texture coordinates.","sig":null,"attributes":[{"value":"/ Define a point with color and texture coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":250738,"byte_end":250792,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":250793,"byte_end":250796,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A vertex is an improved point.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":250797,"byte_end":250831,"line_start":6,"line_end":6,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":250832,"byte_end":250835,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ It has a position and other extra attributes that will be used for drawing:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":250836,"byte_end":250915,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ in SFML, vertices also have a color and a pair of texture coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":250916,"byte_end":250990,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":250991,"byte_end":250994,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The vertex is the building block of drawing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":250995,"byte_end":251043,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ Everything which is visible on screen is made of vertices.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251044,"byte_end":251106,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/ They are grouped as 2D primitives (triangles, quads, ...), and these primitives are grouped","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251107,"byte_end":251202,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/ to create even more complex 2D entities such as sprites, texts, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251203,"byte_end":251275,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251276,"byte_end":251279,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If you use the graphical entities of SFML (sprite, text, shape) you won't have to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251280,"byte_end":251365,"line_start":16,"line_end":16,"column_start":1,"column_end":86}},{"value":"/ deal with vertices directly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251366,"byte_end":251398,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ But if you want to define your own 2D entities, such as tiled maps or particle systems,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251399,"byte_end":251490,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ using vertices will allow you to get maximum performances.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251491,"byte_end":251553,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251554,"byte_end":251557,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251558,"byte_end":251570,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251571,"byte_end":251574,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251575,"byte_end":251588,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ # use sfml::system::*;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251589,"byte_end":251615,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/ # use sfml::graphics::*;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251616,"byte_end":251644,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ # let mut window: RenderWindow = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251645,"byte_end":251699,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ // define a 100x100 square, red, with a 10x10 texture mapped on it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251700,"byte_end":251770,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ let vertices = [","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251771,"byte_end":251791,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/     Vertex::new(Vector2f::new(  0.,   0.), Color::RED, Vector2f::new( 0.,  0.)),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251792,"byte_end":251876,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/     Vertex::new(Vector2f::new(  0., 100.), Color::RED, Vector2f::new( 0., 10.)),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251877,"byte_end":251961,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/     Vertex::new(Vector2f::new(100., 100.), Color::RED, Vector2f::new(10., 10.)),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":251962,"byte_end":252046,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/     Vertex::new(Vector2f::new(100.,   0.), Color::RED, Vector2f::new(10.,  0.)),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252047,"byte_end":252131,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ ];","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252132,"byte_end":252138,"line_start":33,"line_end":33,"column_start":1,"column_end":7}},{"value":"/ // draw it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252139,"byte_end":252153,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ window.draw_primitives(&vertices, PrimitiveType::QUADS, &RenderStates::DEFAULT);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252154,"byte_end":252238,"line_start":35,"line_end":35,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252239,"byte_end":252246,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252247,"byte_end":252250,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Note: although texture coordinates are supposed to be an integer amount of pixels,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252251,"byte_end":252337,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ their type is float because of some buggy graphics drivers that are not able to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252338,"byte_end":252421,"line_start":39,"line_end":39,"column_start":1,"column_end":84}},{"value":"/ process integer coordinates correctly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252422,"byte_end":252464,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252465,"byte_end":252475,"line_start":41,"line_end":41,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3844},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252568,"byte_end":252576,"line_start":45,"line_end":45,"column_start":9,"column_end":17},"name":"position","qualname":"::graphics::vertex::Vertex::position","value":"system::vector2::Vector2<f32>","parent":{"krate":0,"index":3843},"children":[],"decl_id":null,"docs":" 2D position of the vertex\n","sig":null,"attributes":[{"value":"/ 2D position of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252530,"byte_end":252559,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3845},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252625,"byte_end":252630,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"color","qualname":"::graphics::vertex::Vertex::color","value":"graphics::color::Color","parent":{"krate":0,"index":3843},"children":[],"decl_id":null,"docs":" Color of the vertex.\n","sig":null,"attributes":[{"value":"/ Color of the vertex.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252592,"byte_end":252616,"line_start":46,"line_end":46,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3846},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252712,"byte_end":252722,"line_start":49,"line_end":49,"column_start":9,"column_end":19},"name":"tex_coords","qualname":"::graphics::vertex::Vertex::tex_coords","value":"system::vector2::Vector2<f32>","parent":{"krate":0,"index":3843},"children":[],"decl_id":null,"docs":" Coordinates of the texture's pixel to map to the vertex.\n","sig":null,"attributes":[{"value":"/ Coordinates of the texture's pixel to map to the vertex.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252643,"byte_end":252703,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253012,"byte_end":253015,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<Vertex>::new","value":"pub const fn new(Vector2f, Color, Vector2f) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Vertex","sig":null,"attributes":[{"value":"/ Create a new Vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252755,"byte_end":252778,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252783,"byte_end":252786,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252791,"byte_end":252806,"line_start":55,"line_end":55,"column_start":5,"column_end":20}},{"value":"/ * position - Position of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252811,"byte_end":252850,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ * color - Color of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252855,"byte_end":252888,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/ * `tex_coords` - Texture coordinate of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252893,"byte_end":252946,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252951,"byte_end":252954,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Return a Vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252959,"byte_end":252978,"line_start":60,"line_end":60,"column_start":5,"column_end":24}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252983,"byte_end":252994,"line_start":61,"line_end":61,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253444,"byte_end":253452,"line_start":81,"line_end":81,"column_start":18,"column_end":26},"name":"with_pos","qualname":"<Vertex>::with_pos","value":"pub const fn with_pos(Vector2f) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Vertex whit a position","sig":null,"attributes":[{"value":"/ Create a new Vertex whit a position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253183,"byte_end":253222,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253227,"byte_end":253230,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253235,"byte_end":253250,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/ * position - Position of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253255,"byte_end":253294,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253299,"byte_end":253302,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253307,"byte_end":253320,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/ * color - white","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253325,"byte_end":253344,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ * `tex_coords` - (0., 0.)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253349,"byte_end":253378,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253383,"byte_end":253386,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Return a Vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253391,"byte_end":253410,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253415,"byte_end":253426,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253849,"byte_end":253863,"line_start":96,"line_end":96,"column_start":18,"column_end":32},"name":"with_pos_color","qualname":"<Vertex>::with_pos_color","value":"pub const fn with_pos_color(Vector2f, Color) -> Vertex","parent":null,"children":[],"decl_id":null,"docs":" Create a new Vertex with the position and the color","sig":null,"attributes":[{"value":"/ Create a new Vertex with the position and the color","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253559,"byte_end":253614,"line_start":85,"line_end":85,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253619,"byte_end":253622,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253627,"byte_end":253642,"line_start":87,"line_end":87,"column_start":5,"column_end":20}},{"value":"/ * position - Position of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253647,"byte_end":253686,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/ * color - Color of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253691,"byte_end":253724,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253729,"byte_end":253732,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253737,"byte_end":253750,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"/ * `tex_coords` - (0., 0)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253755,"byte_end":253783,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253788,"byte_end":253791,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Return a Vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253796,"byte_end":253815,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253820,"byte_end":253831,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254294,"byte_end":254309,"line_start":111,"line_end":111,"column_start":18,"column_end":33},"name":"with_pos_coords","qualname":"<Vertex>::with_pos_coords","value":"pub const fn with_pos_coords(Vector2f, Vector2f) -> Vertex","parent":null,"children":[],"decl_id":null,"docs":" Create a new Vertex whit the position and the texture coordinates","sig":null,"attributes":[{"value":"/ Create a new Vertex whit the position and the texture coordinates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":253979,"byte_end":254048,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254053,"byte_end":254056,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254061,"byte_end":254076,"line_start":102,"line_end":102,"column_start":5,"column_end":20}},{"value":"/ * position - Position of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254081,"byte_end":254120,"line_start":103,"line_end":103,"column_start":5,"column_end":44}},{"value":"/ * `tex_coords` - Texture coordinate of the vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254125,"byte_end":254178,"line_start":104,"line_end":104,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254183,"byte_end":254186,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254191,"byte_end":254204,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ * color - white","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254209,"byte_end":254228,"line_start":107,"line_end":107,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254233,"byte_end":254236,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Return a Vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254241,"byte_end":254260,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254265,"byte_end":254276,"line_start":110,"line_end":110,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3852},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255167,"byte_end":255178,"line_start":7,"line_end":7,"column_start":12,"column_end":23},"name":"VertexArray","qualname":"::graphics::vertex_array::VertexArray","value":"VertexArray {  }","parent":null,"children":[{"krate":0,"index":3853}],"decl_id":null,"docs":" Define a set of one or more 2D primitives\n","sig":null,"attributes":[{"value":"/ Define a set of one or more 2D primitives","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255093,"byte_end":255138,"line_start":5,"line_end":5,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3856},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255305,"byte_end":255313,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Vertices","qualname":"::graphics::vertex_array::Vertices","value":"Vertices {  }","parent":null,"children":[{"krate":0,"index":3858},{"krate":0,"index":3859}],"decl_id":null,"docs":" An iterator over the vertice of a [`VertexArray`].\n","sig":null,"attributes":[{"value":"/ An iterator over the vertice of a [`VertexArray`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255222,"byte_end":255276,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255607,"byte_end":255610,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<VertexArray>::new","value":"pub fn new(PrimitiveType, usize) -> VertexArray","parent":null,"children":[],"decl_id":null,"docs":" Create a new initialized vertex array","sig":null,"attributes":[{"value":"/ Create a new initialized vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255395,"byte_end":255436,"line_start":19,"line_end":19,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255441,"byte_end":255444,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255449,"byte_end":255464,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/ * `primitive_type` - The type of the `VertexArray`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255469,"byte_end":255523,"line_start":22,"line_end":22,"column_start":5,"column_end":59}},{"value":"/ * `vertex_count` - The initial number of vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255528,"byte_end":255579,"line_start":23,"line_end":23,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255584,"byte_end":255595,"line_start":24,"line_end":24,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255956,"byte_end":255968,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"vertex_count","qualname":"<VertexArray>::vertex_count","value":"pub fn vertex_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the vertex count of a vertex array","sig":null,"attributes":[{"value":"/ Return the vertex count of a vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255824,"byte_end":255869,"line_start":32,"line_end":32,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255874,"byte_end":255877,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Return the number of vertices in the array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255882,"byte_end":255928,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255933,"byte_end":255944,"line_start":35,"line_end":35,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256332,"byte_end":256337,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"clear","qualname":"<VertexArray>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a vertex array","sig":null,"attributes":[{"value":"/ Clear a vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256065,"byte_end":256089,"line_start":40,"line_end":40,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256094,"byte_end":256097,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function removes all the vertices from the array.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256102,"byte_end":256160,"line_start":42,"line_end":42,"column_start":5,"column_end":63}},{"value":"/ It doesn't deallocate the corresponding memory, so that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256165,"byte_end":256224,"line_start":43,"line_end":43,"column_start":5,"column_end":64}},{"value":"/ adding new vertices after clearing doesn't involve","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256229,"byte_end":256283,"line_start":44,"line_end":44,"column_start":5,"column_end":59}},{"value":"/ reallocating all the memory.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256288,"byte_end":256320,"line_start":45,"line_end":45,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256827,"byte_end":256833,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"resize","qualname":"<VertexArray>::resize","value":"pub fn resize(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Resize the vertex array","sig":null,"attributes":[{"value":"/ Resize the vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256420,"byte_end":256447,"line_start":50,"line_end":50,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256452,"byte_end":256455,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If vertexCount is greater than the current size, the previous","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256460,"byte_end":256525,"line_start":52,"line_end":52,"column_start":5,"column_end":70}},{"value":"/ vertices are kept and new (default-constructed) vertices are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256530,"byte_end":256594,"line_start":53,"line_end":53,"column_start":5,"column_end":69}},{"value":"/ added.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256599,"byte_end":256609,"line_start":54,"line_end":54,"column_start":5,"column_end":15}},{"value":"/ If vertexCount is less than the current size, existing vertices","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256614,"byte_end":256681,"line_start":55,"line_end":55,"column_start":5,"column_end":72}},{"value":"/ are removed from the array.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256686,"byte_end":256717,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256722,"byte_end":256725,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256730,"byte_end":256745,"line_start":58,"line_end":58,"column_start":5,"column_end":20}},{"value":"/ * `vertex_count` - New size of the array (number of vertices)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256750,"byte_end":256815,"line_start":59,"line_end":59,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257059,"byte_end":257065,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"append","qualname":"<VertexArray>::append","value":"pub fn append(&mut Self, &Vertex)","parent":null,"children":[],"decl_id":null,"docs":" Add a vertex to a vertex array","sig":null,"attributes":[{"value":"/ Add a vertex to a vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256952,"byte_end":256986,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256991,"byte_end":256994,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":256999,"byte_end":257014,"line_start":66,"line_end":66,"column_start":5,"column_end":20}},{"value":"/ * vertex - Vertex to add","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257019,"byte_end":257047,"line_start":67,"line_end":67,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257444,"byte_end":257450,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"bounds","qualname":"<VertexArray>::bounds","value":"pub fn bounds(&Self) -> FloatRect","parent":null,"children":[],"decl_id":null,"docs":" Compute the bounding rectangle of a vertex array","sig":null,"attributes":[{"value":"/ Compute the bounding rectangle of a vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257180,"byte_end":257232,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257237,"byte_end":257240,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function returns the axis-aligned rectangle that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257245,"byte_end":257302,"line_start":74,"line_end":74,"column_start":5,"column_end":62}},{"value":"/ contains all the vertices of the array.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257307,"byte_end":257350,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257355,"byte_end":257358,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Return the bounding rectangle of the vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257363,"byte_end":257416,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257421,"byte_end":257432,"line_start":78,"line_end":78,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257921,"byte_end":257939,"line_start":95,"line_end":95,"column_start":12,"column_end":30},"name":"set_primitive_type","qualname":"<VertexArray>::set_primitive_type","value":"pub fn set_primitive_type(&mut Self, PrimitiveType)","parent":null,"children":[],"decl_id":null,"docs":" Set the type of primitives of a vertex array","sig":null,"attributes":[{"value":"/ Set the type of primitives of a vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257567,"byte_end":257615,"line_start":83,"line_end":83,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257620,"byte_end":257623,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function defines how the vertices must be interpreted","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257628,"byte_end":257690,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/ when it's time to draw them:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257695,"byte_end":257727,"line_start":86,"line_end":86,"column_start":5,"column_end":37}},{"value":"/ As points","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257732,"byte_end":257745,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ As lines","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257750,"byte_end":257762,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/ As triangles","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257767,"byte_end":257783,"line_start":89,"line_end":89,"column_start":5,"column_end":21}},{"value":"/ As quads","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257788,"byte_end":257800,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/ The default primitive type is Points.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257805,"byte_end":257846,"line_start":91,"line_end":91,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257851,"byte_end":257854,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257859,"byte_end":257874,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"/ * type - Type of primitive","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":257879,"byte_end":257909,"line_start":94,"line_end":94,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258227,"byte_end":258241,"line_start":105,"line_end":105,"column_start":12,"column_end":26},"name":"primitive_type","qualname":"<VertexArray>::primitive_type","value":"pub fn primitive_type(&Self) -> PrimitiveType","parent":null,"children":[],"decl_id":null,"docs":" Get the type of primitives drawn by a vertex array","sig":null,"attributes":[{"value":"/ Get the type of primitives drawn by a vertex array","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258103,"byte_end":258157,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258162,"byte_end":258165,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Return the primitive type","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258170,"byte_end":258199,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258204,"byte_end":258215,"line_start":104,"line_end":104,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258475,"byte_end":258483,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"vertices","qualname":"<VertexArray>::vertices","value":"pub fn vertices(&Self) -> Vertices","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable iterator over all the vertice contained by the `VertexArray`\n","sig":null,"attributes":[{"value":"/ Return an immutable iterator over all the vertice contained by the `VertexArray`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258363,"byte_end":258447,"line_start":109,"line_end":109,"column_start":5,"column_end":89}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258452,"byte_end":258463,"line_start":110,"line_end":110,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258808,"byte_end":258828,"line_start":123,"line_end":123,"column_start":19,"column_end":39},"name":"get_vertex_unchecked","qualname":"<VertexArray>::get_vertex_unchecked","value":"pub unsafe fn get_vertex_unchecked(&Self, usize) -> &Vertex","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the `index`-th vertex in the `VertexArray`.","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the `index`-th vertex in the `VertexArray`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258597,"byte_end":258678,"line_start":118,"line_end":118,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258683,"byte_end":258686,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258691,"byte_end":258703,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/ The behaviour is undefined if `index >= self.vertex_count()`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258708,"byte_end":258773,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258778,"byte_end":258789,"line_start":122,"line_end":122,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259156,"byte_end":259180,"line_start":132,"line_end":132,"column_start":19,"column_end":43},"name":"get_vertex_mut_unchecked","qualname":"<VertexArray>::get_vertex_mut_unchecked","value":"pub unsafe fn get_vertex_mut_unchecked(&mut Self, usize) -> &mut Vertex","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the `index`-th vertex in the `VertexArray`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the `index`-th vertex in the `VertexArray`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":258948,"byte_end":259026,"line_start":127,"line_end":127,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259031,"byte_end":259034,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259039,"byte_end":259051,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/ The behaviour is undefined if `index >= self.vertex_count()`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259056,"byte_end":259121,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259126,"byte_end":259137,"line_start":131,"line_end":131,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259467,"byte_end":259487,"line_start":140,"line_end":140,"column_start":19,"column_end":39},"name":"set_vertex_unchecked","qualname":"<VertexArray>::set_vertex_unchecked","value":"pub unsafe fn set_vertex_unchecked(&mut Self, usize, &Vertex)","parent":null,"children":[],"decl_id":null,"docs":" Sets the `index`-th vertex to `vertex`.","sig":null,"attributes":[{"value":"/ Sets the `index`-th vertex to `vertex`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259310,"byte_end":259353,"line_start":136,"line_end":136,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259358,"byte_end":259361,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259366,"byte_end":259378,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/ The behaviour is undefined if `index >= self.vertex_count()`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259383,"byte_end":259448,"line_start":139,"line_end":139,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3863},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262499,"byte_end":262516,"line_start":12,"line_end":12,"column_start":12,"column_end":29},"name":"VertexBufferUsage","qualname":"::graphics::vertex_buffer::VertexBufferUsage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Usage specifiers for a [`VertexBuffer`]","sig":null,"attributes":[{"value":"/ Usage specifiers for a [`VertexBuffer`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262100,"byte_end":262143,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262144,"byte_end":262147,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ If data is going to be updated once or more every frame,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262148,"byte_end":262208,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ set the usage to `Stream`.  If data is going to be set once and used","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262209,"byte_end":262281,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ for a long time without being modified, set the usage to `Static`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262282,"byte_end":262352,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ For everything else `Dynamic` should be a good compromise.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262353,"byte_end":262415,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262467,"byte_end":262487,"line_start":11,"line_end":11,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":2408},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262624,"byte_end":262630,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"name":"STREAM","qualname":"::graphics::vertex_buffer::VertexBufferUsage::STREAM","value":"Self","parent":{"krate":0,"index":2407},"children":[],"decl_id":null,"docs":" Constantly changing data.\n","sig":null,"attributes":[{"value":"/ Constantly changing data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262580,"byte_end":262609,"line_start":15,"line_end":15,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":2409},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262737,"byte_end":262744,"line_start":18,"line_end":18,"column_start":15,"column_end":22},"name":"DYNAMIC","qualname":"::graphics::vertex_buffer::VertexBufferUsage::DYNAMIC","value":"Self","parent":{"krate":0,"index":2407},"children":[],"decl_id":null,"docs":" Occasionally changing data.\n","sig":null,"attributes":[{"value":"/ Occasionally changing data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262691,"byte_end":262722,"line_start":17,"line_end":17,"column_start":5,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":2410},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262846,"byte_end":262852,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"name":"STATIC","qualname":"::graphics::vertex_buffer::VertexBufferUsage::STATIC","value":"Self","parent":{"krate":0,"index":2407},"children":[],"decl_id":null,"docs":" Rarely changing data.\n","sig":null,"attributes":[{"value":"/ Rarely changing data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262806,"byte_end":262831,"line_start":19,"line_end":19,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3881},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263012,"byte_end":263024,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"VertexBuffer","qualname":"::graphics::vertex_buffer::VertexBuffer","value":"VertexBuffer {  }","parent":null,"children":[{"krate":0,"index":3882}],"decl_id":null,"docs":" Define a set of one or more 2D primitives stored in graphics memory\n","sig":null,"attributes":[{"value":"/ Define a set of one or more 2D primitives stored in graphics memory","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262912,"byte_end":262983,"line_start":23,"line_end":23,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263308,"byte_end":263311,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<VertexBuffer>::new","value":"pub fn new(PrimitiveType, u32, VertexBufferUsage) -> VertexBuffer","parent":null,"children":[],"decl_id":null,"docs":" Create a new initialized vertex buffer","sig":null,"attributes":[{"value":"/ Create a new initialized vertex buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263094,"byte_end":263136,"line_start":30,"line_end":30,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263141,"byte_end":263144,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263149,"byte_end":263164,"line_start":32,"line_end":32,"column_start":5,"column_end":20}},{"value":"/ * `primitive_type` - The type of the `VertexBuffer`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263169,"byte_end":263224,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/ * `vertex_count` - The maximal number of vertex","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263229,"byte_end":263280,"line_start":34,"line_end":34,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263285,"byte_end":263296,"line_start":35,"line_end":35,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263736,"byte_end":263748,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"vertex_count","qualname":"<VertexBuffer>::vertex_count","value":"pub fn vertex_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the vertex count of a vertex buffer","sig":null,"attributes":[{"value":"/ Return the vertex count of a vertex buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263602,"byte_end":263648,"line_start":46,"line_end":46,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263653,"byte_end":263656,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Return the number of vertices in the buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263661,"byte_end":263708,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263713,"byte_end":263724,"line_start":49,"line_end":49,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265006,"byte_end":265012,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"update","qualname":"<VertexBuffer>::update","value":"pub fn update(&mut Self, &[Vertex], u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Update a part of the buffer from an array of vertices.","sig":null,"attributes":[{"value":"/ Update a part of the buffer from an array of vertices.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263845,"byte_end":263903,"line_start":54,"line_end":54,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263908,"byte_end":263911,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ `offset` is specified as the number of vertices to skip from the beginning of the buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263916,"byte_end":264009,"line_start":56,"line_end":56,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264014,"byte_end":264017,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If `offset` is `0` and `vertices.len()` is equal to the size of the currently created buffer, its","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264022,"byte_end":264123,"line_start":58,"line_end":58,"column_start":5,"column_end":106}},{"value":"/ whole contents are replaced.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264128,"byte_end":264160,"line_start":59,"line_end":59,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264165,"byte_end":264168,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If `offset` is `0` and `vertices.len()` is greater than the size of the currently created buffer, a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264173,"byte_end":264276,"line_start":61,"line_end":61,"column_start":5,"column_end":108}},{"value":"/ new buffer is created containing the vertex data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264281,"byte_end":264334,"line_start":62,"line_end":62,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264339,"byte_end":264342,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If `offset` is `0` and `vertices.len()` is less than the size of the currently created buffer, only","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264347,"byte_end":264450,"line_start":64,"line_end":64,"column_start":5,"column_end":108}},{"value":"/ the corresponding region is updated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264455,"byte_end":264495,"line_start":65,"line_end":65,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264500,"byte_end":264503,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ If `offset` is not `0` and `offset + vertices.len()` is greater than the size of the currently","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264508,"byte_end":264606,"line_start":67,"line_end":67,"column_start":5,"column_end":103}},{"value":"/ created buffer, the update fails.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264611,"byte_end":264648,"line_start":68,"line_end":68,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264653,"byte_end":264656,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ No additional check is performed on the size of the vertex array, passing invalid arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264661,"byte_end":264756,"line_start":70,"line_end":70,"column_start":5,"column_end":100}},{"value":"/ will lead to undefined behavior.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264761,"byte_end":264797,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264802,"byte_end":264805,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264810,"byte_end":264825,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/ * vertices - Array of vertices to copy in the buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264830,"byte_end":264886,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/ * offset - Offset in the buffer to copy to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264891,"byte_end":264937,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264942,"byte_end":264945,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Return True if the update was successful","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":264950,"byte_end":264994,"line_start":77,"line_end":77,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265587,"byte_end":265612,"line_start":96,"line_end":96,"column_start":12,"column_end":37},"name":"update_from_vertex_buffer","qualname":"<VertexBuffer>::update_from_vertex_buffer","value":"pub fn update_from_vertex_buffer(&mut Self, &VertexBuffer) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of another buffer into this buffer.","sig":null,"attributes":[{"value":"/ Copy the contents of another buffer into this buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265354,"byte_end":265411,"line_start":90,"line_end":90,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265416,"byte_end":265419,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265424,"byte_end":265439,"line_start":92,"line_end":92,"column_start":5,"column_end":20}},{"value":"/ * other - Vertex buffer whose contents to copy into this vertex buffer","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265444,"byte_end":265518,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265523,"byte_end":265526,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Return True if the update was successful","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265531,"byte_end":265575,"line_start":95,"line_end":95,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265936,"byte_end":265940,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"swap","qualname":"<VertexBuffer>::swap","value":"pub fn swap(&mut Self, &mut VertexBuffer)","parent":null,"children":[],"decl_id":null,"docs":" Swap the contents of this vertex buffer with those of another.","sig":null,"attributes":[{"value":"/ Swap the contents of this vertex buffer with those of another.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265790,"byte_end":265856,"line_start":102,"line_end":102,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265861,"byte_end":265864,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265869,"byte_end":265884,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/ * other - Instance to swap with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":265889,"byte_end":265924,"line_start":105,"line_end":105,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266459,"byte_end":266472,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"native_handle","qualname":"<VertexBuffer>::native_handle","value":"pub fn native_handle(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying OpenGL handle of the vertex buffer.","sig":null,"attributes":[{"value":"/ Get the underlying OpenGL handle of the vertex buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266092,"byte_end":266150,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266155,"byte_end":266158,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ You shouldn't need to use this function, unless you have very specific stuff to implement","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266163,"byte_end":266256,"line_start":114,"line_end":114,"column_start":5,"column_end":98}},{"value":"/ that SFML doesn't support, or implement a temporary workaround until a bug is fixed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266261,"byte_end":266349,"line_start":115,"line_end":115,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266354,"byte_end":266357,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Return OpenGL handle of the vertex buffer or 0 if not yet created","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266362,"byte_end":266431,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266436,"byte_end":266447,"line_start":118,"line_end":118,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266694,"byte_end":266708,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"primitive_type","qualname":"<VertexBuffer>::primitive_type","value":"pub fn primitive_type(&Self) -> PrimitiveType","parent":null,"children":[],"decl_id":null,"docs":" Get the type of primitives drawn by the vertex buffer.","sig":null,"attributes":[{"value":"/ Get the type of primitives drawn by the vertex buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266570,"byte_end":266628,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266633,"byte_end":266636,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Return Primitive type","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266641,"byte_end":266666,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266671,"byte_end":266682,"line_start":126,"line_end":126,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267118,"byte_end":267136,"line_start":139,"line_end":139,"column_start":12,"column_end":30},"name":"set_primitive_type","qualname":"<VertexBuffer>::set_primitive_type","value":"pub fn set_primitive_type(&mut Self, PrimitiveType)","parent":null,"children":[],"decl_id":null,"docs":" Set the type of primitives to draw.","sig":null,"attributes":[{"value":"/ Set the type of primitives to draw.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266832,"byte_end":266871,"line_start":131,"line_end":131,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266876,"byte_end":266879,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This function defines how the vertices must be interpreted when it's time to draw them.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266884,"byte_end":266975,"line_start":133,"line_end":133,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266980,"byte_end":266983,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The default primitive type is `Points`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":266988,"byte_end":267031,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267036,"byte_end":267039,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267044,"byte_end":267059,"line_start":137,"line_end":137,"column_start":5,"column_end":20}},{"value":"/ * `primitive_type` - Type of primitive","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267064,"byte_end":267106,"line_start":138,"line_end":138,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267419,"byte_end":267424,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"usage","qualname":"<VertexBuffer>::usage","value":"pub fn usage(&Self) -> VertexBufferUsage","parent":null,"children":[],"decl_id":null,"docs":" Get the usage specifier of this vertex buffer.","sig":null,"attributes":[{"value":"/ Get the usage specifier of this vertex buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267302,"byte_end":267352,"line_start":145,"line_end":145,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267357,"byte_end":267360,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Return Usage specifier","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267365,"byte_end":267391,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267396,"byte_end":267407,"line_start":148,"line_end":148,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268016,"byte_end":268025,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"set_usage","qualname":"<VertexBuffer>::set_usage","value":"pub fn set_usage(&mut Self, VertexBufferUsage)","parent":null,"children":[],"decl_id":null,"docs":" Set the usage specifier of this vertex buffer.","sig":null,"attributes":[{"value":"/ Set the usage specifier of this vertex buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267548,"byte_end":267598,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267603,"byte_end":267606,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This function provides a hint about how this vertex buffer is going to be used in terms of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267611,"byte_end":267705,"line_start":155,"line_end":155,"column_start":5,"column_end":99}},{"value":"/ data update frequency.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267710,"byte_end":267736,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267741,"byte_end":267744,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ After changing the usage specifier, the vertex buffer has to be updated with new data for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267749,"byte_end":267842,"line_start":158,"line_end":158,"column_start":5,"column_end":98}},{"value":"/ the usage specifier to take effect.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267847,"byte_end":267886,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267891,"byte_end":267894,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The default primitive type is `Stream`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267899,"byte_end":267942,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267947,"byte_end":267950,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267955,"byte_end":267970,"line_start":163,"line_end":163,"column_start":5,"column_end":20}},{"value":"/ * usage - Usage specifier","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":267975,"byte_end":268004,"line_start":164,"line_end":164,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269190,"byte_end":269194,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"bind","qualname":"<VertexBuffer>::bind","value":"pub fn bind(Option<&VertexBuffer>)","parent":null,"children":[],"decl_id":null,"docs":" Bind a vertex buffer for rendering.","sig":null,"attributes":[{"value":"/ Bind a vertex buffer for rendering.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268148,"byte_end":268187,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268192,"byte_end":268195,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ This function is not part of the graphics API, it mustn't be used when drawing SFML","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268200,"byte_end":268287,"line_start":171,"line_end":171,"column_start":5,"column_end":92}},{"value":"/ entities. It must be used only if you mix sf::VertexBuffer with OpenGL code.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268292,"byte_end":268372,"line_start":172,"line_end":172,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268377,"byte_end":268380,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ use sfml::graphics::{PrimitiveType, VertexBuffer, VertexBufferUsage};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268504,"byte_end":268577,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268582,"byte_end":268585,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let mut vb1 = VertexBuffer::new(PrimitiveType::TRIANGLES, 32, VertexBufferUsage::STATIC);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268590,"byte_end":268683,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/ let mut vb2 = VertexBuffer::new(PrimitiveType::QUADS, 12, VertexBufferUsage::DYNAMIC);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268688,"byte_end":268778,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268783,"byte_end":268786,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268791,"byte_end":268801,"line_start":181,"line_end":181,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268806,"byte_end":268809,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ VertexBuffer::bind(Some(&vb1));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268814,"byte_end":268849,"line_start":183,"line_end":183,"column_start":5,"column_end":40}},{"value":"/ // draw OpenGL stuff that use vb1...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268854,"byte_end":268894,"line_start":184,"line_end":184,"column_start":5,"column_end":45}},{"value":"/ VertexBuffer::bind(Some(&vb2));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268899,"byte_end":268934,"line_start":185,"line_end":185,"column_start":5,"column_end":40}},{"value":"/ // draw OpenGL stuff that use vb2...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268939,"byte_end":268979,"line_start":186,"line_end":186,"column_start":5,"column_end":45}},{"value":"/ VertexBuffer::bind(None);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":268984,"byte_end":269013,"line_start":187,"line_end":187,"column_start":5,"column_end":34}},{"value":"/ // draw OpenGL stuff that use no vertex buffer...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269018,"byte_end":269071,"line_start":188,"line_end":188,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269076,"byte_end":269083,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269088,"byte_end":269091,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269096,"byte_end":269111,"line_start":191,"line_end":191,"column_start":5,"column_end":20}},{"value":"/ * vb - Vertex buffer to use; None to use no vertex buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269116,"byte_end":269178,"line_start":192,"line_end":192,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269800,"byte_end":269809,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"available","qualname":"<VertexBuffer>::available","value":"pub fn available() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not the system supports vertex buffers.\n This  function should always be called before using the vertex buffer features. If it\n returns false, then any attempt to use `VertexBuffer` will fail.","sig":null,"attributes":[{"value":"/ Tell whether or not the system supports vertex buffers.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269468,"byte_end":269527,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/ This  function should always be called before using the vertex buffer features. If it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269533,"byte_end":269622,"line_start":205,"line_end":205,"column_start":5,"column_end":94}},{"value":"/ returns false, then any attempt to use `VertexBuffer` will fail.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269627,"byte_end":269695,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269700,"byte_end":269703,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Return True if vertex buffers are supported, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269708,"byte_end":269772,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269777,"byte_end":269788,"line_start":209,"line_end":209,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3885},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271245,"byte_end":271249,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"View","qualname":"::graphics::view::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":3886}],"decl_id":null,"docs":" 2D camera that defines what region is shown on screen","sig":null,"attributes":[{"value":"/ 2D camera that defines what region is shown on screen","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":270949,"byte_end":271006,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271007,"byte_end":271010,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is a very powerful concept: you can scroll,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271011,"byte_end":271063,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ rotate or zoom the entire scene without altering","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271064,"byte_end":271116,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ the way that your drawable objects are drawn.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271117,"byte_end":271166,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271184,"byte_end":271222,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271223,"byte_end":271233,"line_start":17,"line_end":17,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271428,"byte_end":271436,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"rotation","qualname":"<View>::rotation","value":"pub fn rotation(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the current orientation of a view","sig":null,"attributes":[{"value":"/ Get the current orientation of a view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271293,"byte_end":271334,"line_start":23,"line_end":23,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271339,"byte_end":271342,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Return the rotation angle of the view, in degrees","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271347,"byte_end":271400,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271405,"byte_end":271416,"line_start":26,"line_end":26,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271620,"byte_end":271626,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"center","qualname":"<View>::center","value":"pub fn center(&Self) -> Vector2f","parent":null,"children":[],"decl_id":null,"docs":" Get the center of a view","sig":null,"attributes":[{"value":"/ Get the center of a view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271518,"byte_end":271546,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271551,"byte_end":271554,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Return the center of the view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271559,"byte_end":271592,"line_start":32,"line_end":32,"column_start":5,"column_end":38}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271597,"byte_end":271608,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271830,"byte_end":271834,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"size","qualname":"<View>::size","value":"pub fn size(&Self) -> Vector2f","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a view","sig":null,"attributes":[{"value":"/ Get the size of a view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271732,"byte_end":271758,"line_start":38,"line_end":38,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271763,"byte_end":271766,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Return the size of the view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271771,"byte_end":271802,"line_start":40,"line_end":40,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271807,"byte_end":271818,"line_start":41,"line_end":41,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272101,"byte_end":272109,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"viewport","qualname":"<View>::viewport","value":"pub fn viewport(&Self) -> FloatRect","parent":null,"children":[],"decl_id":null,"docs":" Get the target viewport rectangle of a view","sig":null,"attributes":[{"value":"/ Get the target viewport rectangle of a view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271938,"byte_end":271985,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271990,"byte_end":271993,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Return the viewport rectangle, expressed as a factor of the target size","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271998,"byte_end":272073,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272078,"byte_end":272089,"line_start":49,"line_end":49,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272395,"byte_end":272398,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<View>::new","value":"pub fn new(Vector2f, Vector2f) -> SfBox<View>","parent":null,"children":[],"decl_id":null,"docs":" Creates a view with position and size","sig":null,"attributes":[{"value":"/ Creates a view with position and size","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272218,"byte_end":272259,"line_start":53,"line_end":53,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272264,"byte_end":272267,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272272,"byte_end":272287,"line_start":55,"line_end":55,"column_start":5,"column_end":20}},{"value":"/ * center - The center of the view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272292,"byte_end":272329,"line_start":56,"line_end":56,"column_start":5,"column_end":42}},{"value":"/ * size - The size of the view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272334,"byte_end":272367,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272372,"byte_end":272383,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272750,"byte_end":272759,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"from_rect","qualname":"<View>::from_rect","value":"pub fn from_rect(&FloatRect) -> SfBox<View>","parent":null,"children":[],"decl_id":null,"docs":" Construct a view from a rectangle","sig":null,"attributes":[{"value":"/ Construct a view from a rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272592,"byte_end":272629,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272634,"byte_end":272637,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272642,"byte_end":272657,"line_start":68,"line_end":68,"column_start":5,"column_end":20}},{"value":"/ * rectangle - The rectangle defining the zone to display","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272662,"byte_end":272722,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272727,"byte_end":272738,"line_start":70,"line_end":70,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273139,"byte_end":273151,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"set_rotation","qualname":"<View>::set_rotation","value":"pub fn set_rotation(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set the orientation of a view","sig":null,"attributes":[{"value":"/ Set the orientation of a view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":272966,"byte_end":272999,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273004,"byte_end":273007,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The default rotation of a view is 0 degree.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273012,"byte_end":273059,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273064,"byte_end":273067,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273072,"byte_end":273087,"line_start":80,"line_end":80,"column_start":5,"column_end":20}},{"value":"/ * angle - New angle, in degrees","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273092,"byte_end":273127,"line_start":81,"line_end":81,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273395,"byte_end":273401,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"rotate","qualname":"<View>::rotate","value":"pub fn rotate(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Rotate a view relatively to its current orientation","sig":null,"attributes":[{"value":"/ Rotate a view relatively to its current orientation","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273254,"byte_end":273309,"line_start":86,"line_end":86,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273314,"byte_end":273317,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273322,"byte_end":273337,"line_start":88,"line_end":88,"column_start":5,"column_end":20}},{"value":"/ * angle - Angle to rotate, in degrees","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273342,"byte_end":273383,"line_start":89,"line_end":89,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273969,"byte_end":273973,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"zoom","qualname":"<View>::zoom","value":"pub fn zoom(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Resize a view rectangle relatively to its current size","sig":null,"attributes":[{"value":"/ Resize a view rectangle relatively to its current size","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273499,"byte_end":273557,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273562,"byte_end":273565,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Resizing the view simulates a zoom, as the zone displayed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273570,"byte_end":273631,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/ on screen grows or shrinks.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273636,"byte_end":273667,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273672,"byte_end":273675,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # factor is a multiplier:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273680,"byte_end":273709,"line_start":99,"line_end":99,"column_start":5,"column_end":34}},{"value":"/ * 1 keeps the size unchanged","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273714,"byte_end":273746,"line_start":100,"line_end":100,"column_start":5,"column_end":37}},{"value":"/ * bigger than 1 makes the view bigger (objects appear smaller)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273751,"byte_end":273817,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"/ * smaller than 1 makes the view smaller (objects appear bigger)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273822,"byte_end":273889,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273894,"byte_end":273897,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273902,"byte_end":273917,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/ * factor - Zoom factor to apply","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":273922,"byte_end":273957,"line_start":105,"line_end":105,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274169,"byte_end":274179,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"set_center","qualname":"<View>::set_center","value":"pub fn set_center<C: Into<Vector2f>>(&mut Self, C)","parent":null,"children":[],"decl_id":null,"docs":" Set the center of a view","sig":null,"attributes":[{"value":"/ Set the center of a view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274071,"byte_end":274099,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274104,"byte_end":274107,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274112,"byte_end":274127,"line_start":112,"line_end":112,"column_start":5,"column_end":20}},{"value":"/ * center - New center","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274132,"byte_end":274157,"line_start":113,"line_end":113,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274416,"byte_end":274424,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"set_size","qualname":"<View>::set_size","value":"pub fn set_size<S: Into<Vector2f>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a view","sig":null,"attributes":[{"value":"/ Set the size of a view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274312,"byte_end":274338,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274343,"byte_end":274346,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274351,"byte_end":274366,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/ * size - New size of the view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274371,"byte_end":274404,"line_start":121,"line_end":121,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274667,"byte_end":274672,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"move_","qualname":"<View>::move_","value":"pub fn move_<O: Into<Vector2f>>(&mut Self, O)","parent":null,"children":[],"decl_id":null,"docs":" Move a view relatively to its current position","sig":null,"attributes":[{"value":"/ Move a view relatively to its current position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274551,"byte_end":274601,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274606,"byte_end":274609,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274614,"byte_end":274629,"line_start":128,"line_end":128,"column_start":5,"column_end":20}},{"value":"/ * offset - Offset","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274634,"byte_end":274655,"line_start":129,"line_end":129,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275333,"byte_end":275345,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_viewport","qualname":"<View>::set_viewport","value":"pub fn set_viewport(&mut Self, &FloatRect)","parent":null,"children":[],"decl_id":null,"docs":" Set the target viewport of a view","sig":null,"attributes":[{"value":"/ Set the target viewport of a view","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274800,"byte_end":274837,"line_start":134,"line_end":134,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274842,"byte_end":274845,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The viewport is the rectangle into which the contents of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274850,"byte_end":274914,"line_start":136,"line_end":136,"column_start":5,"column_end":69}},{"value":"/ view are displayed, expressed as a factor (between 0 and 1)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274919,"byte_end":274982,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/ of the size of the render target to which the view is applied.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":274987,"byte_end":275053,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/ For example, a view which takes the left side of the target would","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275058,"byte_end":275127,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/ be defined by a rect of (0, 0, 0.5, 1).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275132,"byte_end":275175,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/ By default, a view has a viewport which covers the entire target.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275180,"byte_end":275249,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275254,"byte_end":275257,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275262,"byte_end":275277,"line_start":143,"line_end":143,"column_start":5,"column_end":20}},{"value":"/ * viewport - New viewport rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275282,"byte_end":275321,"line_start":144,"line_end":144,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275679,"byte_end":275684,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"reset","qualname":"<View>::reset","value":"pub fn reset(&mut Self, &FloatRect)","parent":null,"children":[],"decl_id":null,"docs":" Reset a view to the given rectangle","sig":null,"attributes":[{"value":"/ Reset a view to the given rectangle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275467,"byte_end":275506,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275511,"byte_end":275514,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that this function resets the rotation angle to 0.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275519,"byte_end":275578,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275583,"byte_end":275586,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275591,"byte_end":275606,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/ * rectangle - Rectangle defining the zone to display","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":275611,"byte_end":275667,"line_start":154,"line_end":154,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3890},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":276782,"byte_end":276787,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"SfBox","qualname":"::sf_box::SfBox","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owning pointer to an SFML-allocated object.","sig":null,"attributes":[{"value":"/ An owning pointer to an SFML-allocated object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":276625,"byte_end":276675,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":276676,"byte_end":276679,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ On [`Drop`], it calls the appropriate SFML destructor for the object.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":276680,"byte_end":276753,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":2527},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277617,"byte_end":277624,"line_start":51,"line_end":51,"column_start":11,"column_end":18},"name":"Dispose","qualname":"::sf_box::Dispose","value":"Dispose","parent":null,"children":[{"krate":0,"index":2528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277641,"byte_end":277648,"line_start":52,"line_end":52,"column_start":15,"column_end":22},"name":"dispose","qualname":"::sf_box::Dispose::dispose","value":"pub unsafe fn dispose(&mut Self)","parent":{"krate":0,"index":2527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2529},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278158,"byte_end":278168,"line_start":64,"line_end":64,"column_start":11,"column_end":21},"name":"SfResource","qualname":"::sf_box::SfResource","value":"SfResource: Dispose","parent":null,"children":[],"decl_id":null,"docs":" A resource handed out to us by SFML","sig":null,"attributes":[{"value":"/ A resource handed out to us by SFML","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277664,"byte_end":277703,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277704,"byte_end":277707,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Each resource type must call a different SFML destructor function before being destroyed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277708,"byte_end":277801,"line_start":57,"line_end":57,"column_start":1,"column_end":94}},{"value":"/ This is implemented using traits to make implementing `SfBox` easier.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277802,"byte_end":277875,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ Behind the scenes, we have a `Dispose` trait that these types implement, but","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277876,"byte_end":277956,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ that trait never needs to be implemented outside of this crate.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277957,"byte_end":278024,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278025,"byte_end":278028,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This trait is a public interface to the internal `Dispose` trait, so `SfBox` can be used","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278029,"byte_end":278121,"line_start":62,"line_end":62,"column_start":1,"column_end":93}},{"value":"/ in a generic context.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278122,"byte_end":278147,"line_start":63,"line_end":63,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":2532},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278230,"byte_end":278240,"line_start":68,"line_end":68,"column_start":11,"column_end":21},"name":"RawDefault","qualname":"::sf_box::RawDefault","value":"RawDefault","parent":null,"children":[{"krate":0,"index":2533}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278250,"byte_end":278261,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"raw_default","qualname":"::sf_box::RawDefault::raw_default","value":"pub fn raw_default() -> *mut Self","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2537},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"system","qualname":"::system","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2562},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2572},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2595},{"krate":0,"index":2600},{"krate":0,"index":2632},{"krate":0,"index":2734},{"krate":0,"index":2814}],"decl_id":null,"docs":" Base module of SFML, defining various utilities.","sig":null,"attributes":[{"value":"/ Base module of SFML, defining various utilities.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278445,"byte_end":278497,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278498,"byte_end":278501,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ It provides vector types, timing types.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278502,"byte_end":278545,"line_start":3,"line_end":3,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/mod.rs","byte_start":278546,"byte_end":278549,"line_start":4,"line_end":4,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3897},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279609,"byte_end":279614,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Clock","qualname":"::system::clock::Clock","value":"","parent":null,"children":[],"decl_id":null,"docs":" Utility type that measures the elapsed time.","sig":null,"attributes":[{"value":"/ Utility type that measures the elapsed time.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":278943,"byte_end":278991,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":278992,"byte_end":278995,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Its provides the most precise time that the underlying OS can","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":278996,"byte_end":279061,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ achieve (generally microseconds or nanoseconds).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279062,"byte_end":279114,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/ It also ensures monotonicity, which means that the returned time can never go backward,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279115,"byte_end":279206,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ even if the system time is changed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279207,"byte_end":279246,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279247,"byte_end":279250,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279251,"byte_end":279270,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279271,"byte_end":279278,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # use sfml::system::Clock;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279279,"byte_end":279309,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ let mut clock = Clock::start();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279310,"byte_end":279345,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/ // ...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279346,"byte_end":279356,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/ let time1 = clock.elapsed_time();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279357,"byte_end":279394,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ // ...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279395,"byte_end":279405,"line_start":17,"line_end":17,"column_start":1,"column_end":11}},{"value":"/ let time2 = clock.restart();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279406,"byte_end":279438,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279439,"byte_end":279446,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279447,"byte_end":279450,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The [`Time`] value returned by the clock can then be converted to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279451,"byte_end":279520,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ a number of seconds, milliseconds or even microseconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279521,"byte_end":279580,"line_start":22,"line_end":22,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279733,"byte_end":279738,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"start","qualname":"<Clock>::start","value":"pub fn start() -> Clock","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Clock and starts it automatically.\n","sig":null,"attributes":[{"value":"/ Creates a new Clock and starts it automatically.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279653,"byte_end":279705,"line_start":27,"line_end":27,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279710,"byte_end":279721,"line_start":28,"line_end":28,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280081,"byte_end":280093,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"elapsed_time","qualname":"<Clock>::elapsed_time","value":"pub fn elapsed_time(&Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Gets the elapsed time.","sig":null,"attributes":[{"value":"/ Gets the elapsed time.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279811,"byte_end":279837,"line_start":33,"line_end":33,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279842,"byte_end":279845,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This function returns the time elapsed since the last call to [`restart`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279850,"byte_end":279927,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ (or the construction of the instance if [`restart`] has not been called).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279932,"byte_end":280009,"line_start":36,"line_end":36,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280014,"byte_end":280017,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ [`restart`]: Clock::restart","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280022,"byte_end":280053,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280058,"byte_end":280069,"line_start":39,"line_end":39,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280364,"byte_end":280371,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"restart","qualname":"<Clock>::restart","value":"pub fn restart(&mut Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Restarts the clock.","sig":null,"attributes":[{"value":"/ Restarts the clock.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280193,"byte_end":280216,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280221,"byte_end":280224,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function puts the time counter back to zero.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280229,"byte_end":280282,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"/ It also returns the time elapsed since the clock was started.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280287,"byte_end":280352,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2599},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/sleep.rs","byte_start":280897,"byte_end":280902,"line_start":4,"line_end":4,"column_start":8,"column_end":13},"name":"sleep","qualname":"::system::sleep::sleep","value":"pub fn sleep(Time)","parent":null,"children":[],"decl_id":null,"docs":" Make the current thread sleep for a given duration.\n","sig":null,"attributes":[{"value":"/ Make the current thread sleep for a given duration.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/sleep.rs","byte_start":280834,"byte_end":280889,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3902},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281224,"byte_end":281229,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"SfStr","qualname":"::system::string::SfStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A borrowed string type that's compatible with `sf::String`.","sig":null,"attributes":[{"value":"/ A borrowed string type that's compatible with `sf::String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281013,"byte_end":281076,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281077,"byte_end":281080,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It uses UTF-32 encoding, which is compatible with `sf::String`'s internal representation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281081,"byte_end":281174,"line_start":5,"line_end":5,"column_start":1,"column_end":94}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281192,"byte_end":281212,"line_start":7,"line_end":7,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281575,"byte_end":281589,"line_start":19,"line_end":19,"column_start":12,"column_end":26},"name":"to_rust_string","qualname":"<SfStr>::to_rust_string","value":"pub fn to_rust_string(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert to a UTF-8 `String` from the Rust standard library.","sig":null,"attributes":[{"value":"/ Convert to a UTF-8 `String` from the Rust standard library.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281426,"byte_end":281489,"line_start":15,"line_end":15,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281494,"byte_end":281497,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Panics if the string is not valid UTF-32.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281502,"byte_end":281547,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281552,"byte_end":281563,"line_start":18,"line_end":18,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":2613},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281797,"byte_end":281806,"line_start":28,"line_end":28,"column_start":11,"column_end":20},"name":"SfStrConv","qualname":"::system::string::SfStrConv","value":"SfStrConv","parent":null,"children":[{"krate":0,"index":2614}],"decl_id":null,"docs":" Trait for types that can be converted into `SfStr`\n","sig":null,"attributes":[{"value":"/ Trait for types that can be converted into `SfStr`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281732,"byte_end":281786,"line_start":27,"line_end":27,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281835,"byte_end":281848,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"with_as_sfstr","qualname":"::system::string::SfStrConv::with_as_sfstr","value":"pub fn with_as_sfstr<F, R>(Self, F) -> R where F: FnOnce(&SfStr) -> R","parent":{"krate":0,"index":2613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3907},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283933,"byte_end":283937,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Time","qualname":"::system::time::Time","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a time value.","sig":null,"attributes":[{"value":"/ Represents a time value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":282739,"byte_end":282767,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":282768,"byte_end":282771,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Time encapsulates a time value in a flexible way.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":282772,"byte_end":282825,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":282826,"byte_end":282829,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It allows to define a time value either as a number of seconds, milliseconds or microseconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":282830,"byte_end":282927,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ It also works the other way round: you can read a time value as either a number of seconds,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":282928,"byte_end":283023,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ milliseconds or microseconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283024,"byte_end":283057,"line_start":12,"line_end":12,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283058,"byte_end":283061,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ By using such a flexible interface, the API doesn't impose any fixed type or resolution for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283062,"byte_end":283157,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ time values, and let the user choose its own favorite representation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283158,"byte_end":283231,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283232,"byte_end":283235,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Time values support the usual mathematical operations: you can add or subtract two times,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283236,"byte_end":283329,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ multiply or divide a time by a number, compare two times, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283330,"byte_end":283396,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283397,"byte_end":283400,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Since they represent a time span and not an absolute time value, times can also be negative.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283401,"byte_end":283497,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283498,"byte_end":283501,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283502,"byte_end":283521,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283522,"byte_end":283529,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # use sfml::system::Time;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283530,"byte_end":283559,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/ let t1 = Time::seconds(0.1);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283560,"byte_end":283592,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(t1.as_milliseconds(), 100);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283593,"byte_end":283635,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283636,"byte_end":283639,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let t2 = Time::milliseconds(30);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283640,"byte_end":283676,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(t2.as_microseconds(), 30_000);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283677,"byte_end":283722,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283723,"byte_end":283726,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let t3 = Time::microseconds(-800_000);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283727,"byte_end":283769,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(t3.as_seconds(), -0.8);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283770,"byte_end":283808,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283809,"byte_end":283816,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283817,"byte_end":283820,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # See also","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283821,"byte_end":283835,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/ - [`Clock`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283836,"byte_end":283851,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283852,"byte_end":283855,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Clock`]: crate::system::Clock","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283856,"byte_end":283891,"line_start":38,"line_end":38,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284505,"byte_end":284512,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"seconds","qualname":"<Time>::seconds","value":"pub fn seconds(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a time value from a number of seconds.\n","sig":null,"attributes":[{"value":"/ Constructs a time value from a number of seconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284424,"byte_end":284477,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284482,"byte_end":284493,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284684,"byte_end":284696,"line_start":71,"line_end":71,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Time>::milliseconds","value":"pub const fn milliseconds(i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a time value from a number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Constructs a time value from a number of milliseconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284592,"byte_end":284650,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284655,"byte_end":284666,"line_start":70,"line_end":70,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284916,"byte_end":284928,"line_start":79,"line_end":79,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Time>::microseconds","value":"pub const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a time value from a number of microseconds.\n","sig":null,"attributes":[{"value":"/ Constructs a time value from a number of microseconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284824,"byte_end":284882,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284887,"byte_end":284898,"line_start":78,"line_end":78,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285085,"byte_end":285095,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"as_seconds","qualname":"<Time>::as_seconds","value":"pub fn as_seconds(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the time value as a number of seconds.\n","sig":null,"attributes":[{"value":"/ Returns the time value as a number of seconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285007,"byte_end":285057,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285062,"byte_end":285073,"line_start":84,"line_end":84,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285249,"byte_end":285264,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"as_milliseconds","qualname":"<Time>::as_milliseconds","value":"pub fn as_milliseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the time value as a number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Returns the time value as a number of milliseconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285166,"byte_end":285221,"line_start":89,"line_end":89,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285226,"byte_end":285237,"line_start":90,"line_end":90,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285423,"byte_end":285438,"line_start":97,"line_end":97,"column_start":12,"column_end":27},"name":"as_microseconds","qualname":"<Time>::as_microseconds","value":"pub fn as_microseconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the time value as a number of microseconds.\n","sig":null,"attributes":[{"value":"/ Returns the time value as a number of microseconds.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285340,"byte_end":285395,"line_start":95,"line_end":95,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285400,"byte_end":285411,"line_start":96,"line_end":96,"column_start":5,"column_end":16}}]},{"kind":"Const","id":{"krate":0,"index":2684},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285697,"byte_end":285701,"line_start":108,"line_end":108,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::system::time::Time::ZERO","value":"Time","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Predefined \"zero\" time value.\n","sig":null,"attributes":[{"value":"/ Predefined \"zero\" time value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285649,"byte_end":285682,"line_start":107,"line_end":107,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3915},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290322,"byte_end":290329,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"Vector2","qualname":"::system::vector2::Vector2","value":"Vector2 { x, y }","parent":null,"children":[{"krate":0,"index":3917},{"krate":0,"index":3918}],"decl_id":null,"docs":" Utility type for manipulating 2-dimensional vectors.","sig":null,"attributes":[{"value":"/ Utility type for manipulating 2-dimensional vectors.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289059,"byte_end":289115,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289116,"byte_end":289119,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `Vector2` is a simple type that defines","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289120,"byte_end":289163,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/ a mathematical vector with two coordinates (x and y).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289164,"byte_end":289221,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289222,"byte_end":289225,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ It can be used to represent anything that has two dimensions: a size, a point, a velocity, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289226,"byte_end":289325,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289326,"byte_end":289329,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The type parameter T is the type of the coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289330,"byte_end":289386,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289387,"byte_end":289390,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ You generally don't have to care about the generic form (`Vector2<T>`), the most common","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289391,"byte_end":289482,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ specializations have special type aliases:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289483,"byte_end":289529,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289530,"byte_end":289533,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - `Vector2<f32>` is [`Vector2f`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289534,"byte_end":289570,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ - `Vector2<i32>` is [`Vector2i`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289571,"byte_end":289607,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ - `Vector2<u32>` is [`Vector2u`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289608,"byte_end":289644,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289645,"byte_end":289648,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `Vector2` type has a small and simple interface, its x and y members can be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289649,"byte_end":289732,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/ accessed directly (there are no accessors like `set_x()`, `get_x()`) and it contains no","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289733,"byte_end":289824,"line_start":20,"line_end":20,"column_start":1,"column_end":92}},{"value":"/ mathematical function like dot product, cross product, length, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289825,"byte_end":289896,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289897,"byte_end":289900,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289901,"byte_end":289920,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289921,"byte_end":289924,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289925,"byte_end":289932,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # use sfml::system::Vector2f;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289933,"byte_end":289966,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ let mut v1 = Vector2f::new(16.5, 24.0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":289967,"byte_end":290010,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/ v1.x = 18.2;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290011,"byte_end":290027,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/ let y = v1.y;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290028,"byte_end":290045,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290046,"byte_end":290049,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let v2 = v1 * 5.0;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290050,"byte_end":290072,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/ let v3 = v1 + v2;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290073,"byte_end":290094,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ assert_ne!(v2, v3);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290095,"byte_end":290118,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290119,"byte_end":290126,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290127,"byte_end":290130,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note: for 3-dimensional vectors, see [`Vector3`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290131,"byte_end":290184,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290185,"byte_end":290188,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Vector3`]: crate::system::Vector3","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290189,"byte_end":290228,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290229,"byte_end":290239,"line_start":39,"line_end":39,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3917},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290379,"byte_end":290380,"line_start":43,"line_end":43,"column_start":9,"column_end":10},"name":"x","qualname":"::system::vector2::Vector2::x","value":"T","parent":{"krate":0,"index":3915},"children":[],"decl_id":null,"docs":" X coordinate of the vector.\n","sig":null,"attributes":[{"value":"/ X coordinate of the vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290339,"byte_end":290370,"line_start":42,"line_end":42,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3918},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290429,"byte_end":290430,"line_start":45,"line_end":45,"column_start":9,"column_end":10},"name":"y","qualname":"::system::vector2::Vector2::y","value":"T","parent":{"krate":0,"index":3915},"children":[],"decl_id":null,"docs":" Y coordinate of the vector.\n","sig":null,"attributes":[{"value":"/ Y coordinate of the vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290389,"byte_end":290420,"line_start":44,"line_end":44,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2763},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290487,"byte_end":290495,"line_start":49,"line_end":49,"column_start":10,"column_end":18},"name":"Vector2i","qualname":"::system::vector2::Vector2i","value":"Vector2<i32>","parent":null,"children":[],"decl_id":null,"docs":" [`Vector2`] with `i32` coordinates.\n","sig":null,"attributes":[{"value":"/ [`Vector2`] with `i32` coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290438,"byte_end":290477,"line_start":48,"line_end":48,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":2764},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290561,"byte_end":290569,"line_start":51,"line_end":51,"column_start":10,"column_end":18},"name":"Vector2u","qualname":"::system::vector2::Vector2u","value":"Vector2<u32>","parent":null,"children":[],"decl_id":null,"docs":" [`Vector2`] with `u32` coordinates.\n","sig":null,"attributes":[{"value":"/ [`Vector2`] with `u32` coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290512,"byte_end":290551,"line_start":50,"line_end":50,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":2765},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290635,"byte_end":290643,"line_start":53,"line_end":53,"column_start":10,"column_end":18},"name":"Vector2f","qualname":"::system::vector2::Vector2f","value":"Vector2<f32>","parent":null,"children":[],"decl_id":null,"docs":" [`Vector2`] with `f32` coordinates.\n","sig":null,"attributes":[{"value":"/ [`Vector2`] with `f32` coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290586,"byte_end":290625,"line_start":52,"line_end":52,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290750,"byte_end":290753,"line_start":57,"line_end":57,"column_start":18,"column_end":21},"name":"new","qualname":"<Vector2<T>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new vector from its coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new vector from its coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290686,"byte_end":290732,"line_start":56,"line_end":56,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3999},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295951,"byte_end":295958,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Vector3","qualname":"::system::vector3::Vector3","value":"Vector3 { x, y, z }","parent":null,"children":[{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003}],"decl_id":null,"docs":" Utility type for manipulating 3-dimensional vectors.","sig":null,"attributes":[{"value":"/ Utility type for manipulating 3-dimensional vectors.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294699,"byte_end":294755,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294756,"byte_end":294759,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `Vector3` is a simple type that defines a mathematical vector with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294760,"byte_end":294830,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ three coordinates (x, y and z).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294831,"byte_end":294866,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294867,"byte_end":294870,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ It can be used to represent anything that has three dimensions:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294871,"byte_end":294938,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ a size, a point, a velocity, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294939,"byte_end":294976,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294977,"byte_end":294980,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The type parameter T is the type of the coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":294981,"byte_end":295037,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295038,"byte_end":295041,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ You generally don't have to care about the generic form (`Vector3<T>`),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295042,"byte_end":295117,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ the most common specializations have special type aliases:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295118,"byte_end":295180,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295181,"byte_end":295184,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ - `Vector3<f32>` is [`Vector3f`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295185,"byte_end":295221,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ - `Vector3<i32>` is [`Vector3i`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295222,"byte_end":295258,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295259,"byte_end":295262,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `Vector3` type has a small and simple interface, its x and y members can be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295263,"byte_end":295346,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/ accessed directly (there are no accessors like `set_x()`, `get_x()`) and it contains no","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295347,"byte_end":295438,"line_start":20,"line_end":20,"column_start":1,"column_end":92}},{"value":"/ mathematical function like dot product, cross product, length, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295439,"byte_end":295510,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295511,"byte_end":295514,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295515,"byte_end":295534,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295535,"byte_end":295542,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # use sfml::system::Vector3f;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295543,"byte_end":295576,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ let mut v1 = Vector3f::new(16.5, 24.0, -8.2);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295577,"byte_end":295626,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ v1.x = 18.2;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295627,"byte_end":295643,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/ let y = v1.y;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295644,"byte_end":295661,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ let z = v1.z;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295662,"byte_end":295679,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295680,"byte_end":295683,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let v2 = v1 * 5.0;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295684,"byte_end":295706,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/ let v3 = v1 + v2;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295707,"byte_end":295728,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295729,"byte_end":295732,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ assert_ne!(v2, v3);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295733,"byte_end":295756,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295757,"byte_end":295764,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295765,"byte_end":295768,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note: for 2-dimensional vectors, see [`Vector2`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295769,"byte_end":295822,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295823,"byte_end":295826,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`Vector2`]: crate::system::Vector2","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295827,"byte_end":295866,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295867,"byte_end":295877,"line_start":40,"line_end":40,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4001},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296008,"byte_end":296009,"line_start":44,"line_end":44,"column_start":9,"column_end":10},"name":"x","qualname":"::system::vector3::Vector3::x","value":"T","parent":{"krate":0,"index":3999},"children":[],"decl_id":null,"docs":" X coordinate of the vector.\n","sig":null,"attributes":[{"value":"/ X coordinate of the vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":295968,"byte_end":295999,"line_start":43,"line_end":43,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4002},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296058,"byte_end":296059,"line_start":46,"line_end":46,"column_start":9,"column_end":10},"name":"y","qualname":"::system::vector3::Vector3::y","value":"T","parent":{"krate":0,"index":3999},"children":[],"decl_id":null,"docs":" Y coordinate of the vector.\n","sig":null,"attributes":[{"value":"/ Y coordinate of the vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296018,"byte_end":296049,"line_start":45,"line_end":45,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4003},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296108,"byte_end":296109,"line_start":48,"line_end":48,"column_start":9,"column_end":10},"name":"z","qualname":"::system::vector3::Vector3::z","value":"T","parent":{"krate":0,"index":3999},"children":[],"decl_id":null,"docs":" Z coordinate of the vector.\n","sig":null,"attributes":[{"value":"/ Z coordinate of the vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296068,"byte_end":296099,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296209,"byte_end":296212,"line_start":53,"line_end":53,"column_start":18,"column_end":21},"name":"new","qualname":"<Vector3<T>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Vector3` with the given values.\n","sig":null,"attributes":[{"value":"/ Create a new `Vector3` with the given values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296142,"byte_end":296191,"line_start":52,"line_end":52,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2846},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296324,"byte_end":296332,"line_start":59,"line_end":59,"column_start":10,"column_end":18},"name":"Vector3f","qualname":"::system::vector3::Vector3f","value":"Vector3<f32>","parent":null,"children":[],"decl_id":null,"docs":" [`Vector3`] with `f32` coordinates.\n","sig":null,"attributes":[{"value":"/ [`Vector3`] with `f32` coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296275,"byte_end":296314,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":2847},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296398,"byte_end":296406,"line_start":61,"line_end":61,"column_start":10,"column_end":18},"name":"Vector3i","qualname":"::system::vector3::Vector3i","value":"Vector3<i32>","parent":null,"children":[],"decl_id":null,"docs":" [`Vector3`] with `i32` coordinates.\n","sig":null,"attributes":[{"value":"/ [`Vector3`] with `i32` coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296349,"byte_end":296388,"line_start":60,"line_end":60,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":2887},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"window","qualname":"::window","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2940},{"krate":0,"index":2959},{"krate":0,"index":2986},{"krate":0,"index":3007},{"krate":0,"index":3032},{"krate":0,"index":3061},{"krate":0,"index":3179},{"krate":0,"index":3206},{"krate":0,"index":3226},{"krate":0,"index":3229},{"krate":0,"index":3242},{"krate":0,"index":3253},{"krate":0,"index":3275}],"decl_id":null,"docs":" Provides OpenGL-based windows, and abstractions for events and input handling.\n","sig":null,"attributes":[{"value":"cfg(feature = \"window\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1671,"byte_end":1697,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/ Provides OpenGL-based windows, and abstractions for events and input handling.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300165,"byte_end":300247,"line_start":1,"line_end":1,"column_start":1,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":2925},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"clipboard","qualname":"::window::clipboard","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2937}],"decl_id":null,"docs":" Give access to the system clipboard.","sig":null,"attributes":[{"value":"/ Give access to the system clipboard.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":300776,"byte_end":300816,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":300817,"byte_end":300820,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Clipboard` provides an interface for getting and setting the contents of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":300821,"byte_end":300902,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ system clipboard.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":300903,"byte_end":300924,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":300925,"byte_end":300928,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It is important to note that due to limitations on some operating systems,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":300929,"byte_end":301007,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ setting the clipboard contents is only guaranteed to work if there is currently an","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301008,"byte_end":301094,"line_start":7,"line_end":7,"column_start":1,"column_end":87}},{"value":"/ open window for which events are being handled.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301095,"byte_end":301146,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301147,"byte_end":301150,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Usage example:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301151,"byte_end":301169,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301170,"byte_end":301173,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301174,"byte_end":301187,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ # use sfml::window::*;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301188,"byte_end":301214,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ // get the clipboard content as a string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301215,"byte_end":301259,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ let mut string = clipboard::get_string();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301260,"byte_end":301305,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ # let mut window: Window = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301306,"byte_end":301354,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ // or use it in the event loop","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301355,"byte_end":301389,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"/ while let Some(event) = window.poll_event()","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301390,"byte_end":301437,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301438,"byte_end":301443,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/     match event {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301444,"byte_end":301465,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/         Event::Closed => window.close(),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301466,"byte_end":301510,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/         Event::KeyPressed{ctrl, code, ..} => {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301511,"byte_end":301561,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/             // Using Ctrl + V to paste a string into SFML","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301562,"byte_end":301623,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/             if ctrl && code == Key::V {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301624,"byte_end":301667,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/                 string = clipboard::get_string();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301668,"byte_end":301721,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301722,"byte_end":301739,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/             // Using Ctrl + C to copy a string out of SFML","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301740,"byte_end":301802,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/             if(ctrl && code == Key::C) {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301803,"byte_end":301847,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/                 clipboard::set_string(\"Hello World!\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301848,"byte_end":301906,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/             }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301907,"byte_end":301924,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301925,"byte_end":301938,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/         _ => {}","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301939,"byte_end":301958,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301959,"byte_end":301968,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301969,"byte_end":301974,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":301975,"byte_end":301982,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2936},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302276,"byte_end":302286,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"get_string","qualname":"::window::clipboard::get_string","value":"pub fn get_string() -> &'static SfStr","parent":null,"children":[],"decl_id":null,"docs":" Get the content of the clipboard as string data.","sig":null,"attributes":[{"value":"/ Get the content of the clipboard as string data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302053,"byte_end":302105,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302106,"byte_end":302109,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This function returns the content of the clipboard as an SFML string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302110,"byte_end":302183,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ If the clipboard does not contain string it returns an empty string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302184,"byte_end":302256,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302257,"byte_end":302268,"line_start":44,"line_end":44,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2937},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302755,"byte_end":302765,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"set_string","qualname":"::window::clipboard::set_string","value":"pub fn set_string<S: SfStrConv>(S)","parent":null,"children":[],"decl_id":null,"docs":" Set the content of the clipboard as string data.","sig":null,"attributes":[{"value":"/ Set the content of the clipboard as string data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302419,"byte_end":302471,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302472,"byte_end":302475,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This function sets the content of the clipboard as a string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302476,"byte_end":302540,"line_start":54,"line_end":54,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302541,"byte_end":302544,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302545,"byte_end":302558,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/ Due to limitations on some operating systems,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302559,"byte_end":302608,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ setting the clipboard contents is only guaranteed to work if there is currently an","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302609,"byte_end":302695,"line_start":58,"line_end":58,"column_start":1,"column_end":87}},{"value":"/ open window for which events are being handled.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/clipboard.rs","byte_start":302696,"byte_end":302747,"line_start":59,"line_end":59,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4076},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304203,"byte_end":304210,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"Context","qualname":"::window::context::Context","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type holding a valid drawing context.","sig":null,"attributes":[{"value":"/ Type holding a valid drawing context.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":302996,"byte_end":303037,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303038,"byte_end":303041,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ If you need to make OpenGL calls without having an active window (like in a thread),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303042,"byte_end":303130,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/ you can use an instance of this type to get a valid context.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303131,"byte_end":303195,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303196,"byte_end":303199,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Having a valid context is necessary for every OpenGL call.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303200,"byte_end":303262,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303263,"byte_end":303266,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Note that a context is only active in its current thread,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303267,"byte_end":303328,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/ if you create a new thread it will have no valid context by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303329,"byte_end":303401,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303402,"byte_end":303405,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To use a `Context` instance, just construct it and let it live as long as you need","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303406,"byte_end":303492,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"/ a valid context. No explicit activation is needed, all it has to do is to exist.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303493,"byte_end":303577,"line_start":15,"line_end":15,"column_start":1,"column_end":85}},{"value":"/ Its destructor will take care of deactivating and freeing all the attached resources.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303578,"byte_end":303667,"line_start":16,"line_end":16,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303668,"byte_end":303671,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303672,"byte_end":303691,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ # use sfml::window::Context;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303803,"byte_end":303835,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/ # use std::thread;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303836,"byte_end":303858,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303859,"byte_end":303881,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/     let context = Context::new();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303882,"byte_end":303919,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/     // from now on, you have a valid context","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303920,"byte_end":303968,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303969,"byte_end":303972,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // you can make OpenGL calls, e.g. glClear(GL_DEPTH_BUFFER_BIT);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":303973,"byte_end":304045,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304046,"byte_end":304069,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ // the context is automatically deactivated and destroyed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304070,"byte_end":304131,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/ // by the `Context` destructor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304132,"byte_end":304166,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304167,"byte_end":304174,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304321,"byte_end":304324,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"pub fn new() -> Context","parent":null,"children":[],"decl_id":null,"docs":" Creates and activates a new context.\n","sig":null,"attributes":[{"value":"/ Creates and activates a new context.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304253,"byte_end":304293,"line_start":36,"line_end":36,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304298,"byte_end":304309,"line_start":37,"line_end":37,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304615,"byte_end":304625,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"set_active","qualname":"<Context>::set_active","value":"pub fn set_active(&mut Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Explicitly activates or deactivates the context.","sig":null,"attributes":[{"value":"/ Explicitly activates or deactivates the context.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304403,"byte_end":304455,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304460,"byte_end":304463,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304468,"byte_end":304483,"line_start":44,"line_end":44,"column_start":5,"column_end":20}},{"value":"/ * active - `true` to activate, `false` to deactivate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304488,"byte_end":304544,"line_start":45,"line_end":45,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304549,"byte_end":304552,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returns true on success, false on failure.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304557,"byte_end":304603,"line_start":47,"line_end":47,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":305057,"byte_end":305065,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"settings","qualname":"<Context>::settings","value":"pub fn settings(&Self) -> ContextSettings","parent":null,"children":[],"decl_id":null,"docs":" Get the settings of the context.","sig":null,"attributes":[{"value":"/ Get the settings of the context.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304794,"byte_end":304830,"line_start":52,"line_end":52,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304835,"byte_end":304838,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that these settings may be different than the ones passed to the constructor;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304843,"byte_end":304929,"line_start":54,"line_end":54,"column_start":5,"column_end":91}},{"value":"/ they are indeed adjusted if the original settings are not directly supported by the system.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304934,"byte_end":305029,"line_start":55,"line_end":55,"column_start":5,"column_end":100}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":305034,"byte_end":305045,"line_start":56,"line_end":56,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4081},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308699,"byte_end":308714,"line_start":48,"line_end":48,"column_start":12,"column_end":27},"name":"ContextSettings","qualname":"::window::context_settings::ContextSettings","value":"","parent":null,"children":[],"decl_id":null,"docs":" Structure defining the settings of the OpenGL context attached to a window.","sig":null,"attributes":[{"value":"/ Structure defining the settings of the OpenGL context attached to a window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":305934,"byte_end":306013,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306014,"byte_end":306017,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ `ContextSettings` allows to define several advanced settings of the OpenGL context attached","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306018,"byte_end":306113,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ to a window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306114,"byte_end":306130,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306131,"byte_end":306134,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All these settings with the exception of the compatibility flag and anti-aliasing level","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306135,"byte_end":306226,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/ have no impact on the regular SFML rendering (graphics module), so you may need to use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306227,"byte_end":306317,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ this structure only if you're using SFML as a windowing system for custom OpenGL rendering.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306318,"byte_end":306413,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306414,"byte_end":306417,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `depth_bits` and `stencil_bits` members define the number of bits per pixel requested for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306418,"byte_end":306515,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ the (respectively) depth and stencil buffers.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306516,"byte_end":306565,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306566,"byte_end":306569,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `antialiasing_level` represents the requested number of multisampling levels for anti-aliasing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306570,"byte_end":306669,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306670,"byte_end":306673,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `major_version` and `minor_version` define the version of the OpenGL context that you want.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306674,"byte_end":306769,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ Only versions greater or equal to 3.0 are relevant; versions lesser than 3.0 are all handled","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306770,"byte_end":306866,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ the same way (i.e. you can use any version < 3.0 if you don't want an OpenGL 3 context).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306867,"byte_end":306959,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306960,"byte_end":306963,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ When requesting a context with a version greater or equal to 3.2, you have the option of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":306964,"byte_end":307056,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ specifying whether the context should follow the core or compatibility profile of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307057,"byte_end":307142,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/ all newer (>= 3.2) OpenGL specifications. For versions 3.0 and 3.1 there is only the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307143,"byte_end":307231,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ core profile. By default a compatibility context is created. You only need to specify the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307232,"byte_end":307325,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ core flag if you want a core profile context to use with your own OpenGL rendering.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307326,"byte_end":307413,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ Warning: The graphics module will not function if you request a core profile context.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307414,"byte_end":307503,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/ Make sure the attributes are set to Default if you want to use the graphics module.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307504,"byte_end":307591,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307592,"byte_end":307595,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Setting the debug attribute flag will request a context with additional debugging features","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307596,"byte_end":307690,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ enabled. Depending on the system, this might be required for advanced OpenGL debugging.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307691,"byte_end":307782,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ OpenGL debugging is disabled by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307783,"byte_end":307827,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307828,"byte_end":307831,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Special Note for OS X: Apple only supports choosing between either a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307832,"byte_end":307904,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ legacy context (OpenGL 2.1) or a core context (OpenGL version depends on the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307905,"byte_end":307985,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ operating system version but is at least 3.2). Compatibility contexts are not supported.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":307986,"byte_end":308078,"line_start":36,"line_end":36,"column_start":1,"column_end":93}},{"value":"/ Further information is available on the OpenGL Capabilities Tables page.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308079,"byte_end":308155,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ OS X also currently does not support debug contexts.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308156,"byte_end":308212,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308213,"byte_end":308216,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Please note that these values are only a hint. No failure will be reported if one or more","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308217,"byte_end":308310,"line_start":40,"line_end":40,"column_start":1,"column_end":94}},{"value":"/ of these values are not supported by the system; instead, SFML will try to find the closest","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308311,"byte_end":308406,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/ valid match. You can then retrieve the settings that the window actually used to create","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308407,"byte_end":308498,"line_start":42,"line_end":42,"column_start":1,"column_end":92}},{"value":"/ its context, with [`Window::settings`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308499,"byte_end":308542,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308543,"byte_end":308546,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Window::settings`]: crate::window::Window::settings","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308547,"byte_end":308604,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308605,"byte_end":308625,"line_start":46,"line_end":46,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":2967},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308884,"byte_end":308898,"line_start":52,"line_end":52,"column_start":15,"column_end":29},"name":"ATTRIB_DEFAULT","qualname":"::window::context_settings::ContextSettings::ATTRIB_DEFAULT","value":"u32","parent":{"krate":0,"index":2966},"children":[],"decl_id":null,"docs":" Non-debug, compatibility context (this and the core attribute are mutually exclusive).\n","sig":null,"attributes":[{"value":"/ Non-debug, compatibility context (this and the core attribute are mutually exclusive).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308779,"byte_end":308869,"line_start":51,"line_end":51,"column_start":5,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":2968},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308947,"byte_end":308958,"line_start":54,"line_end":54,"column_start":15,"column_end":26},"name":"ATTRIB_CORE","qualname":"::window::context_settings::ContextSettings::ATTRIB_CORE","value":"u32","parent":{"krate":0,"index":2966},"children":[],"decl_id":null,"docs":" Core attribute.\n","sig":null,"attributes":[{"value":"/ Core attribute.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308913,"byte_end":308932,"line_start":53,"line_end":53,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":2969},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309008,"byte_end":309020,"line_start":56,"line_end":56,"column_start":15,"column_end":27},"name":"ATTRIB_DEBUG","qualname":"::window::context_settings::ContextSettings::ATTRIB_DEBUG","value":"u32","parent":{"krate":0,"index":2966},"children":[],"decl_id":null,"docs":" Debug attribute.\n","sig":null,"attributes":[{"value":"/ Debug attribute.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308973,"byte_end":308993,"line_start":55,"line_end":55,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309097,"byte_end":309107,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"depth_bits","qualname":"<ContextSettings>::depth_bits","value":"pub fn depth_bits(&Self) -> c_uint","parent":null,"children":[],"decl_id":null,"docs":" Bits of the depth buffer.\n","sig":null,"attributes":[{"value":"/ Bits of the depth buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309040,"byte_end":309069,"line_start":57,"line_end":57,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309074,"byte_end":309085,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309215,"byte_end":309229,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"set_depth_bits","qualname":"<ContextSettings>::set_depth_bits","value":"pub fn set_depth_bits(&mut Self, c_uint)","parent":null,"children":[],"decl_id":null,"docs":" Set [`depth_bits`](Self::depth_bits).\n","sig":null,"attributes":[{"value":"/ Set [`depth_bits`](Self::depth_bits).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309162,"byte_end":309203,"line_start":62,"line_end":62,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309361,"byte_end":309373,"line_start":68,"line_end":68,"column_start":12,"column_end":24},"name":"stencil_bits","qualname":"<ContextSettings>::stencil_bits","value":"pub fn stencil_bits(&Self) -> c_uint","parent":null,"children":[],"decl_id":null,"docs":" Bits of the stencil buffer.\n","sig":null,"attributes":[{"value":"/ Bits of the stencil buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309302,"byte_end":309333,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309338,"byte_end":309349,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309486,"byte_end":309502,"line_start":72,"line_end":72,"column_start":12,"column_end":28},"name":"set_stencil_bits","qualname":"<ContextSettings>::set_stencil_bits","value":"pub fn set_stencil_bits(&mut Self, c_uint)","parent":null,"children":[],"decl_id":null,"docs":" Set [`stencil_bits`](Self::stencil_bits)\n","sig":null,"attributes":[{"value":"/ Set [`stencil_bits`](Self::stencil_bits)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309430,"byte_end":309474,"line_start":71,"line_end":71,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309631,"byte_end":309649,"line_start":77,"line_end":77,"column_start":12,"column_end":30},"name":"antialiasing_level","qualname":"<ContextSettings>::antialiasing_level","value":"pub fn antialiasing_level(&Self) -> c_uint","parent":null,"children":[],"decl_id":null,"docs":" Level of antialiasing.\n","sig":null,"attributes":[{"value":"/ Level of antialiasing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309577,"byte_end":309603,"line_start":75,"line_end":75,"column_start":5,"column_end":31}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309608,"byte_end":309619,"line_start":76,"line_end":76,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309780,"byte_end":309802,"line_start":81,"line_end":81,"column_start":12,"column_end":34},"name":"set_antialiasing_level","qualname":"<ContextSettings>::set_antialiasing_level","value":"pub fn set_antialiasing_level(&mut Self, c_uint)","parent":null,"children":[],"decl_id":null,"docs":" Set [`antialiasing_level`](Self::antialiasing_level)\n","sig":null,"attributes":[{"value":"/ Set [`antialiasing_level`](Self::antialiasing_level)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309712,"byte_end":309768,"line_start":80,"line_end":80,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309961,"byte_end":309974,"line_start":86,"line_end":86,"column_start":12,"column_end":25},"name":"major_version","qualname":"<ContextSettings>::major_version","value":"pub fn major_version(&Self) -> c_uint","parent":null,"children":[],"decl_id":null,"docs":" Major number of the context version to create.\n","sig":null,"attributes":[{"value":"/ Major number of the context version to create.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309883,"byte_end":309933,"line_start":84,"line_end":84,"column_start":5,"column_end":55}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":309938,"byte_end":309949,"line_start":85,"line_end":85,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310090,"byte_end":310107,"line_start":90,"line_end":90,"column_start":12,"column_end":29},"name":"set_major_version","qualname":"<ContextSettings>::set_major_version","value":"pub fn set_major_version(&mut Self, c_uint)","parent":null,"children":[],"decl_id":null,"docs":" Set [`major_version`](Self::major_version)\n","sig":null,"attributes":[{"value":"/ Set [`major_version`](Self::major_version)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310032,"byte_end":310078,"line_start":89,"line_end":89,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310261,"byte_end":310274,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"minor_version","qualname":"<ContextSettings>::minor_version","value":"pub fn minor_version(&Self) -> c_uint","parent":null,"children":[],"decl_id":null,"docs":" Minor number of the context version to create.\n","sig":null,"attributes":[{"value":"/ Minor number of the context version to create.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310183,"byte_end":310233,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310238,"byte_end":310249,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310390,"byte_end":310407,"line_start":99,"line_end":99,"column_start":12,"column_end":29},"name":"set_minor_version","qualname":"<ContextSettings>::set_minor_version","value":"pub fn set_minor_version(&mut Self, c_uint)","parent":null,"children":[],"decl_id":null,"docs":" Set [`minor_version`](Self::minor_version)\n","sig":null,"attributes":[{"value":"/ Set [`minor_version`](Self::minor_version)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310332,"byte_end":310378,"line_start":98,"line_end":98,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310562,"byte_end":310577,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"attribute_flags","qualname":"<ContextSettings>::attribute_flags","value":"pub fn attribute_flags(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The attribute flags to create the context with.\n","sig":null,"attributes":[{"value":"/ The attribute flags to create the context with.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310483,"byte_end":310534,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310539,"byte_end":310550,"line_start":103,"line_end":103,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310696,"byte_end":310715,"line_start":108,"line_end":108,"column_start":12,"column_end":31},"name":"set_attribute_flags","qualname":"<ContextSettings>::set_attribute_flags","value":"pub fn set_attribute_flags(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set [`attribute_flags`](Self::attribute_flags)\n","sig":null,"attributes":[{"value":"/ Set [`attribute_flags`](Self::attribute_flags)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310634,"byte_end":310684,"line_start":107,"line_end":107,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310870,"byte_end":310882,"line_start":113,"line_end":113,"column_start":12,"column_end":24},"name":"srgb_capable","qualname":"<ContextSettings>::srgb_capable","value":"pub fn srgb_capable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the context framebuffer is sRGB capable.\n","sig":null,"attributes":[{"value":"/ Whether the context framebuffer is sRGB capable.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310790,"byte_end":310842,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310847,"byte_end":310858,"line_start":112,"line_end":112,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310998,"byte_end":311014,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"name":"set_srgb_capable","qualname":"<ContextSettings>::set_srgb_capable","value":"pub fn set_srgb_capable(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set [`srgb_capable`](Self::srgb_capable)\n","sig":null,"attributes":[{"value":"/ Set [`srgb_capable`](Self::srgb_capable)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":310942,"byte_end":310986,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4100},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312559,"byte_end":312565,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::window::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":4101}],"decl_id":null,"docs":" Defines the appearance of a system cursor.","sig":null,"attributes":[{"value":"/ Defines the appearance of a system cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":311864,"byte_end":311910,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":311911,"byte_end":311914,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Warning: Features related to Cursor are not supported on iOS and Android.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":311915,"byte_end":311992,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":311993,"byte_end":311996,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type abstracts the operating system resources associated with either a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":311997,"byte_end":312076,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ native system cursor or a custom cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312077,"byte_end":312121,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312122,"byte_end":312125,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ After loading the cursor the graphical appearance with either","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312126,"byte_end":312191,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ [`Cursor::from_pixels`] or [`Cursor::from_system`], the cursor can be changed with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312192,"byte_end":312278,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/ [`Window::set_mouse_cursor`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312279,"byte_end":312312,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312313,"byte_end":312316,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The behaviour is undefined if the cursor is destroyed while in use by the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312317,"byte_end":312402,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312403,"byte_end":312406,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Window::set_mouse_cursor`]: crate::window::Window::set_mouse_cursor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312407,"byte_end":312480,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312481,"byte_end":312491,"line_start":21,"line_end":21,"column_start":1,"column_end":11}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312509,"byte_end":312547,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314449,"byte_end":314460,"line_start":73,"line_end":73,"column_start":19,"column_end":30},"name":"from_pixels","qualname":"<Cursor>::from_pixels","value":"pub unsafe fn from_pixels(&[u8], Vector2u, Vector2u) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Create a cursor with the provided image.","sig":null,"attributes":[{"value":"/ Create a cursor with the provided image.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312774,"byte_end":312818,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312823,"byte_end":312826,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ `pixels` must be an array of width by height pixels in 32-bit RGBA format.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312831,"byte_end":312909,"line_start":38,"line_end":38,"column_start":5,"column_end":83}},{"value":"/ If not, this will cause undefined behavior.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312914,"byte_end":312961,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312966,"byte_end":312969,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If the width or height are 0, the current cursor is left unchanged and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312974,"byte_end":313048,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the function will return false.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313053,"byte_end":313088,"line_start":42,"line_end":42,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313093,"byte_end":313096,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ In addition to specifying the pixel data, you can also specify the location of","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313101,"byte_end":313183,"line_start":44,"line_end":44,"column_start":5,"column_end":87}},{"value":"/ the hotspot of the cursor. The hotspot is the pixel coordinate within the cursor image which","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313188,"byte_end":313284,"line_start":45,"line_end":45,"column_start":5,"column_end":101}},{"value":"/ will be located exactly where the mouse pointer position is.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313289,"byte_end":313353,"line_start":46,"line_end":46,"column_start":5,"column_end":69}},{"value":"/ Any mouse actions that are performed will return the window/screen location of the hotspot.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313358,"byte_end":313453,"line_start":47,"line_end":47,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313458,"byte_end":313461,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313466,"byte_end":313479,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ On Unix, the pixels are mapped into a monochrome bitmap:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313484,"byte_end":313544,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/ pixels with an alpha channel to 0 are transparent, black if the RGB channel are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313549,"byte_end":313632,"line_start":51,"line_end":51,"column_start":5,"column_end":88}},{"value":"/ close to zero, and white otherwise.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313637,"byte_end":313676,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313681,"byte_end":313684,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313689,"byte_end":313705,"line_start":54,"line_end":54,"column_start":5,"column_end":21}},{"value":"/ - `pixels`: Array of pixels of the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313710,"byte_end":313754,"line_start":55,"line_end":55,"column_start":5,"column_end":49}},{"value":"/ - `size`: Width and height of the image","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313759,"byte_end":313802,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ - `hotspot`: (x,y) location of the hotspot","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313807,"byte_end":313853,"line_start":57,"line_end":57,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313858,"byte_end":313861,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313866,"byte_end":313879,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/ `true` if the cursor was successfully loaded; `false` otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313884,"byte_end":313951,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313956,"byte_end":313959,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313964,"byte_end":313976,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313981,"byte_end":313984,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ `pixels` must be an array of width by height pixels in 32-bit RGBA format.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":313989,"byte_end":314067,"line_start":64,"line_end":64,"column_start":5,"column_end":83}},{"value":"/ If not, this will cause undefined behavior.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314072,"byte_end":314119,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314124,"byte_end":314127,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Binding maintainer's note:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314132,"byte_end":314162,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314167,"byte_end":314170,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ > I noticed that on at least Linux X11, if the size of the image is not a power of 2,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314175,"byte_end":314264,"line_start":69,"line_end":69,"column_start":5,"column_end":94}},{"value":"/ > the image is loaded in a wrong way that doesn't respect the dimensions. This is also","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314269,"byte_end":314359,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ > why I decided to leave this function unsafe.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314364,"byte_end":314414,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314419,"byte_end":314430,"line_start":72,"line_end":72,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315214,"byte_end":315225,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"from_system","qualname":"<Cursor>::from_system","value":"pub fn from_system(Type) -> Option<SfBox<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Create a native system cursor.","sig":null,"attributes":[{"value":"/ Create a native system cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314717,"byte_end":314751,"line_start":82,"line_end":82,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314756,"byte_end":314759,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Refer to the list of cursor available on each system (see `CursorType`) to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314764,"byte_end":314842,"line_start":84,"line_end":84,"column_start":5,"column_end":83}},{"value":"/ know whether a given cursor is expected to load successfully or","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314847,"byte_end":314914,"line_start":85,"line_end":85,"column_start":5,"column_end":72}},{"value":"/ is not supported by the operating system.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314919,"byte_end":314964,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314969,"byte_end":314972,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314977,"byte_end":314993,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/ - type: Native system cursor type","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":314998,"byte_end":315035,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315040,"byte_end":315043,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315048,"byte_end":315061,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"/ true if and only if the corresponding cursor is natively supported by","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315066,"byte_end":315139,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/ the operating system; false otherwise.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315144,"byte_end":315186,"line_start":93,"line_end":93,"column_start":5,"column_end":47}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315191,"byte_end":315202,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4106},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316951,"byte_end":316956,"line_start":133,"line_end":133,"column_start":5,"column_end":10},"name":"Arrow","qualname":"::window::cursor::Type::Arrow","value":"Type::Arrow","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Arrow cursor (default)\n","sig":null,"attributes":[{"value":"/ Arrow cursor (default)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316920,"byte_end":316946,"line_start":132,"line_end":132,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4109},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317023,"byte_end":317032,"line_start":135,"line_end":135,"column_start":5,"column_end":14},"name":"ArrowWait","qualname":"::window::cursor::Type::ArrowWait","value":"Type::ArrowWait","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Busy arrow cursor.\n","sig":null,"attributes":[{"value":"/ Busy arrow cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316996,"byte_end":317018,"line_start":134,"line_end":134,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4112},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317097,"byte_end":317101,"line_start":137,"line_end":137,"column_start":5,"column_end":9},"name":"Wait","qualname":"::window::cursor::Type::Wait","value":"Type::Wait","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Busy cursor.\n","sig":null,"attributes":[{"value":"/ Busy cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317076,"byte_end":317092,"line_start":136,"line_end":136,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4115},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317211,"byte_end":317215,"line_start":139,"line_end":139,"column_start":5,"column_end":9},"name":"Text","qualname":"::window::cursor::Type::Text","value":"Type::Text","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" I-beam, cursor when hovering over a field allowing text entry.\n","sig":null,"attributes":[{"value":"/ I-beam, cursor when hovering over a field allowing text entry.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317140,"byte_end":317206,"line_start":138,"line_end":138,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4118},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317284,"byte_end":317288,"line_start":141,"line_end":141,"column_start":5,"column_end":9},"name":"Hand","qualname":"::window::cursor::Type::Hand","value":"Type::Hand","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Pointing hand cursor.\n","sig":null,"attributes":[{"value":"/ Pointing hand cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317254,"byte_end":317279,"line_start":140,"line_end":140,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4121},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317367,"byte_end":317381,"line_start":143,"line_end":143,"column_start":5,"column_end":19},"name":"SizeHorizontal","qualname":"::window::cursor::Type::SizeHorizontal","value":"Type::SizeHorizontal","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Horizontal double arrow cursor.\n","sig":null,"attributes":[{"value":"/ Horizontal double arrow cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317327,"byte_end":317362,"line_start":142,"line_end":142,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4124},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317468,"byte_end":317480,"line_start":145,"line_end":145,"column_start":5,"column_end":17},"name":"SizeVertical","qualname":"::window::cursor::Type::SizeVertical","value":"Type::SizeVertical","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Vertical double arrow cursor.\n","sig":null,"attributes":[{"value":"/ Vertical double arrow cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317430,"byte_end":317463,"line_start":144,"line_end":144,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4127},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317592,"byte_end":317614,"line_start":147,"line_end":147,"column_start":5,"column_end":27},"name":"SizeTopLeftBottomRight","qualname":"::window::cursor::Type::SizeTopLeftBottomRight","value":"Type::SizeTopLeftBottomRight","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Double arrow cursor going from top-left to bottom-right.\n","sig":null,"attributes":[{"value":"/ Double arrow cursor going from top-left to bottom-right.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317527,"byte_end":317587,"line_start":146,"line_end":146,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4130},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317736,"byte_end":317758,"line_start":149,"line_end":149,"column_start":5,"column_end":27},"name":"SizeBottomLeftTopRight","qualname":"::window::cursor::Type::SizeBottomLeftTopRight","value":"Type::SizeBottomLeftTopRight","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Double arrow cursor going from bottom-left to top-right.\n","sig":null,"attributes":[{"value":"/ Double arrow cursor going from bottom-left to top-right.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317671,"byte_end":317731,"line_start":148,"line_end":148,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4133},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317871,"byte_end":317878,"line_start":151,"line_end":151,"column_start":5,"column_end":12},"name":"SizeAll","qualname":"::window::cursor::Type::SizeAll","value":"Type::SizeAll","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Combination of SizeHorizontal and SizeVertical.\n","sig":null,"attributes":[{"value":"/ Combination of SizeHorizontal and SizeVertical.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317815,"byte_end":317866,"line_start":150,"line_end":150,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4136},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317946,"byte_end":317951,"line_start":153,"line_end":153,"column_start":5,"column_end":10},"name":"Cross","qualname":"::window::cursor::Type::Cross","value":"Type::Cross","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Crosshair cursor.\n","sig":null,"attributes":[{"value":"/ Crosshair cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317920,"byte_end":317941,"line_start":152,"line_end":152,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4139},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":318012,"byte_end":318016,"line_start":155,"line_end":155,"column_start":5,"column_end":9},"name":"Help","qualname":"::window::cursor::Type::Help","value":"Type::Help","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Help cursor.\n","sig":null,"attributes":[{"value":"/ Help cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":317991,"byte_end":318007,"line_start":154,"line_end":154,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4142},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":318090,"byte_end":318100,"line_start":157,"line_end":157,"column_start":5,"column_end":15},"name":"NotAllowed","qualname":"::window::cursor::Type::NotAllowed","value":"Type::NotAllowed","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" Action not allowed cursor.\n","sig":null,"attributes":[{"value":"/ Action not allowed cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":318055,"byte_end":318085,"line_start":156,"line_end":156,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":4105},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316909,"byte_end":316913,"line_start":131,"line_end":131,"column_start":10,"column_end":14},"name":"Type","qualname":"::window::cursor::Type","value":"pub enum Type {\n    Arrow = ,\n    ArrowWait = ,\n    Wait = ,\n    Text = ,\n    Hand = ,\n    SizeHorizontal = ,\n    SizeVertical = ,\n    SizeTopLeftBottomRight = ,\n    SizeBottomLeftTopRight = ,\n    SizeAll = ,\n    Cross = ,\n    Help = ,\n    NotAllowed = ,\n}","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":4109},{"krate":0,"index":4112},{"krate":0,"index":4115},{"krate":0,"index":4118},{"krate":0,"index":4121},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4130},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4139},{"krate":0,"index":4142}],"decl_id":null,"docs":" Enumeration of the native system cursor types.","sig":null,"attributes":[{"value":"/ Enumeration of the native system cursor types.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315551,"byte_end":315601,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315602,"byte_end":315605,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Refer to the following table to determine which cursor is available on which platform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315606,"byte_end":315696,"line_start":109,"line_end":109,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315697,"byte_end":315700,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ |Type                             | Linux | Mac OS X | Windows |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315701,"byte_end":315769,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ |---------------------------------|-------|----------|---------|","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315770,"byte_end":315838,"line_start":112,"line_end":112,"column_start":1,"column_end":69}},{"value":"/ |[`Type::Arrow`]                  | yes   | yes      | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315839,"byte_end":315907,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"/ |[`Type::ArrowWait`]              | no    | no       | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315908,"byte_end":315976,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ |[`Type::Wait`]                   | yes   | no       | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":315977,"byte_end":316045,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"/ |[`Type::Text`]                   | yes   | yes      | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316046,"byte_end":316114,"line_start":116,"line_end":116,"column_start":1,"column_end":69}},{"value":"/ |[`Type::Hand`]                   | yes   | yes      | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316115,"byte_end":316183,"line_start":117,"line_end":117,"column_start":1,"column_end":69}},{"value":"/ |[`Type::SizeHorizontal`]         | yes   | yes      | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316184,"byte_end":316252,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ |[`Type::SizeVertical`]           | yes   | yes      | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316253,"byte_end":316321,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ |[`Type::SizeTopLeftBottomRight`] | no    | yes*     | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316322,"byte_end":316390,"line_start":120,"line_end":120,"column_start":1,"column_end":69}},{"value":"/ |[`Type::SizeBottomLeftTopRight`] | no    | yes*     | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316391,"byte_end":316459,"line_start":121,"line_end":121,"column_start":1,"column_end":69}},{"value":"/ |[`Type::SizeAll`]                | yes   | no       | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316460,"byte_end":316528,"line_start":122,"line_end":122,"column_start":1,"column_end":69}},{"value":"/ |[`Type::Cross`]                  | yes   | yes      | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316529,"byte_end":316597,"line_start":123,"line_end":123,"column_start":1,"column_end":69}},{"value":"/ |[`Type::Help`]                   | yes   | yes*     | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316598,"byte_end":316666,"line_start":124,"line_end":124,"column_start":1,"column_end":69}},{"value":"/ |[`Type::NotAllowed`]             | yes   | yes      | yes     |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316667,"byte_end":316735,"line_start":125,"line_end":125,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316736,"byte_end":316739,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ * These cursor types are undocumented so may not be available on all versions,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316740,"byte_end":316822,"line_start":127,"line_end":127,"column_start":1,"column_end":83}},{"value":"/ but have been tested on 10.13","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316823,"byte_end":316856,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"repr(u32)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":316857,"byte_end":316869,"line_start":129,"line_end":129,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4151},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319668,"byte_end":319674,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Closed","qualname":"::window::event::Event::Closed","value":"Event::Closed","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The window requested to be closed\n","sig":null,"attributes":[{"value":"/ The window requested to be closed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319626,"byte_end":319663,"line_start":43,"line_end":43,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":4153},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319711,"byte_end":319718,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"name":"Resized","qualname":"::window::event::Event::Resized","value":"Event::Resized { width, height }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The window was resized\n","sig":null,"attributes":[{"value":"/ The window was resized","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319680,"byte_end":319706,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4156},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319888,"byte_end":319897,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"LostFocus","qualname":"::window::event::Event::LostFocus","value":"Event::LostFocus","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The window lost the focus\n","sig":null,"attributes":[{"value":"/ The window lost the focus","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319854,"byte_end":319883,"line_start":52,"line_end":52,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4158},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319939,"byte_end":319950,"line_start":55,"line_end":55,"column_start":5,"column_end":16},"name":"GainedFocus","qualname":"::window::event::Event::GainedFocus","value":"Event::GainedFocus","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The window gained the focus\n","sig":null,"attributes":[{"value":"/ The window gained the focus","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319903,"byte_end":319934,"line_start":54,"line_end":54,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":4160},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319988,"byte_end":319999,"line_start":57,"line_end":57,"column_start":5,"column_end":16},"name":"TextEntered","qualname":"::window::event::Event::TextEntered","value":"Event::TextEntered { unicode }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A character was entered\n","sig":null,"attributes":[{"value":"/ A character was entered","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319956,"byte_end":319983,"line_start":56,"line_end":56,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":4162},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":320108,"byte_end":320118,"line_start":62,"line_end":62,"column_start":5,"column_end":15},"name":"KeyPressed","qualname":"::window::event::Event::KeyPressed","value":"Event::KeyPressed { code, alt, ctrl, shift, system }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A key was pressed\n","sig":null,"attributes":[{"value":"/ A key was pressed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":320082,"byte_end":320103,"line_start":61,"line_end":61,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":4168},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":320422,"byte_end":320433,"line_start":75,"line_end":75,"column_start":5,"column_end":16},"name":"KeyReleased","qualname":"::window::event::Event::KeyReleased","value":"Event::KeyReleased { code, alt, ctrl, shift, system }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A key was released\n","sig":null,"attributes":[{"value":"/ A key was released","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":320395,"byte_end":320417,"line_start":74,"line_end":74,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":4174},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":320752,"byte_end":320770,"line_start":88,"line_end":88,"column_start":5,"column_end":23},"name":"MouseWheelScrolled","qualname":"::window::event::Event::MouseWheelScrolled","value":"Event::MouseWheelScrolled { wheel, delta, x, y }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The mouse wheel was scrolled\n","sig":null,"attributes":[{"value":"/ The mouse wheel was scrolled","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":320715,"byte_end":320747,"line_start":87,"line_end":87,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":4179},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":321256,"byte_end":321274,"line_start":100,"line_end":100,"column_start":5,"column_end":23},"name":"MouseButtonPressed","qualname":"::window::event::Event::MouseButtonPressed","value":"Event::MouseButtonPressed { button, x, y }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A mouse button was pressed\n","sig":null,"attributes":[{"value":"/ A mouse button was pressed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":321221,"byte_end":321251,"line_start":99,"line_end":99,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":4183},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":321607,"byte_end":321626,"line_start":109,"line_end":109,"column_start":5,"column_end":24},"name":"MouseButtonReleased","qualname":"::window::event::Event::MouseButtonReleased","value":"Event::MouseButtonReleased { button, x, y }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A mouse button was released\n","sig":null,"attributes":[{"value":"/ A mouse button was released","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":321571,"byte_end":321602,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":4187},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":321954,"byte_end":321964,"line_start":118,"line_end":118,"column_start":5,"column_end":15},"name":"MouseMoved","qualname":"::window::event::Event::MouseMoved","value":"Event::MouseMoved { x, y }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The mouse cursor moved\n","sig":null,"attributes":[{"value":"/ The mouse cursor moved","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":321923,"byte_end":321949,"line_start":117,"line_end":117,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4190},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322239,"byte_end":322251,"line_start":125,"line_end":125,"column_start":5,"column_end":17},"name":"MouseEntered","qualname":"::window::event::Event::MouseEntered","value":"Event::MouseEntered","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The mouse cursor entered the area of the window\n","sig":null,"attributes":[{"value":"/ The mouse cursor entered the area of the window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322183,"byte_end":322234,"line_start":124,"line_end":124,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4192},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322310,"byte_end":322319,"line_start":127,"line_end":127,"column_start":5,"column_end":14},"name":"MouseLeft","qualname":"::window::event::Event::MouseLeft","value":"Event::MouseLeft","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The mouse cursor left the area of the window\n","sig":null,"attributes":[{"value":"/ The mouse cursor left the area of the window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322257,"byte_end":322305,"line_start":126,"line_end":126,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":4194},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322363,"byte_end":322384,"line_start":129,"line_end":129,"column_start":5,"column_end":26},"name":"JoystickButtonPressed","qualname":"::window::event::Event::JoystickButtonPressed","value":"Event::JoystickButtonPressed { joystickid, button }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A joystick button was pressed\n","sig":null,"attributes":[{"value":"/ A joystick button was pressed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322325,"byte_end":322358,"line_start":128,"line_end":128,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":4197},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322654,"byte_end":322676,"line_start":136,"line_end":136,"column_start":5,"column_end":27},"name":"JoystickButtonReleased","qualname":"::window::event::Event::JoystickButtonReleased","value":"Event::JoystickButtonReleased { joystickid, button }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A joystick button was released\n","sig":null,"attributes":[{"value":"/ A joystick button was released","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322615,"byte_end":322649,"line_start":135,"line_end":135,"column_start":5,"column_end":39}}]},{"kind":"StructVariant","id":{"krate":0,"index":4200},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322948,"byte_end":322961,"line_start":143,"line_end":143,"column_start":5,"column_end":18},"name":"JoystickMoved","qualname":"::window::event::Event::JoystickMoved","value":"Event::JoystickMoved { joystickid, axis, position }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" The joystick moved along an axis\n","sig":null,"attributes":[{"value":"/ The joystick moved along an axis","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":322907,"byte_end":322943,"line_start":142,"line_end":142,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":4204},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":323256,"byte_end":323273,"line_start":152,"line_end":152,"column_start":5,"column_end":22},"name":"JoystickConnected","qualname":"::window::event::Event::JoystickConnected","value":"Event::JoystickConnected { joystickid }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A joystick was connected\n","sig":null,"attributes":[{"value":"/ A joystick was connected","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":323223,"byte_end":323251,"line_start":151,"line_end":151,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":4206},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":323420,"byte_end":323440,"line_start":157,"line_end":157,"column_start":5,"column_end":25},"name":"JoystickDisconnected","qualname":"::window::event::Event::JoystickDisconnected","value":"Event::JoystickDisconnected { joystickid }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A joystick was disconnected\n","sig":null,"attributes":[{"value":"/ A joystick was disconnected","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":323384,"byte_end":323415,"line_start":156,"line_end":156,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":4208},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":323579,"byte_end":323589,"line_start":162,"line_end":162,"column_start":5,"column_end":15},"name":"TouchBegan","qualname":"::window::event::Event::TouchBegan","value":"Event::TouchBegan { finger, x, y }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A touch event began\n","sig":null,"attributes":[{"value":"/ A touch event began","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":323551,"byte_end":323574,"line_start":161,"line_end":161,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":4212},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":323898,"byte_end":323908,"line_start":171,"line_end":171,"column_start":5,"column_end":15},"name":"TouchMoved","qualname":"::window::event::Event::TouchMoved","value":"Event::TouchMoved { finger, x, y }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A touch moved\n","sig":null,"attributes":[{"value":"/ A touch moved","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":323876,"byte_end":323893,"line_start":170,"line_end":170,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":4216},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":324223,"byte_end":324233,"line_start":180,"line_end":180,"column_start":5,"column_end":15},"name":"TouchEnded","qualname":"::window::event::Event::TouchEnded","value":"Event::TouchEnded { finger, x, y }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A touch event ended\n","sig":null,"attributes":[{"value":"/ A touch event ended","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":324195,"byte_end":324218,"line_start":179,"line_end":179,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":4220},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":324551,"byte_end":324564,"line_start":189,"line_end":189,"column_start":5,"column_end":18},"name":"SensorChanged","qualname":"::window::event::Event::SensorChanged","value":"Event::SensorChanged { type_, x, y, z }","parent":{"krate":0,"index":4150},"children":[],"decl_id":null,"docs":" A sensor value changed\n","sig":null,"attributes":[{"value":"/ A sensor value changed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":324520,"byte_end":324546,"line_start":188,"line_end":188,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":4150},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319614,"byte_end":319619,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"name":"Event","qualname":"::window::event::Event","value":"pub enum Event {\n    Closed,\n    Resized {\n        width: u32,\n        height: u32,\n    },\n    LostFocus,\n    GainedFocus,\n    TextEntered {\n        unicode: char,\n    },\n    KeyPressed {\n        code: Key,\n        alt: bool,\n        ctrl: bool,\n        shift: bool,\n        system: bool,\n    },\n    KeyReleased {\n        code: Key,\n        alt: bool,\n        ctrl: bool,\n        shift: bool,\n        system: bool,\n    },\n    MouseWheelScrolled {\n        wheel: Wheel,\n        delta: f32,\n        x: i32,\n        y: i32,\n    },\n    MouseButtonPressed {\n        button: Button,\n        x: i32,\n        y: i32,\n    },\n    MouseButtonReleased {\n        button: Button,\n        x: i32,\n        y: i32,\n    },\n    MouseMoved {\n        x: i32,\n        y: i32,\n    },\n    MouseEntered,\n    MouseLeft,\n    JoystickButtonPressed {\n        joystickid: u32,\n        button: u32,\n    },\n    JoystickButtonReleased {\n        joystickid: u32,\n        button: u32,\n    },\n    JoystickMoved {\n        joystickid: u32,\n        axis: Axis,\n        position: f32,\n    },\n    JoystickConnected {\n        joystickid: u32,\n    },\n    JoystickDisconnected {\n        joystickid: u32,\n    },\n    TouchBegan {\n        finger: u32,\n        x: i32,\n        y: i32,\n    },\n    TouchMoved {\n        finger: u32,\n        x: i32,\n        y: i32,\n    },\n    TouchEnded {\n        finger: u32,\n        x: i32,\n        y: i32,\n    },\n    SensorChanged {\n        type_: crate::window::sensor::Type,\n        x: f32,\n        y: f32,\n        z: f32,\n    },\n}","parent":null,"children":[{"krate":0,"index":4151},{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":4158},{"krate":0,"index":4160},{"krate":0,"index":4162},{"krate":0,"index":4168},{"krate":0,"index":4174},{"krate":0,"index":4179},{"krate":0,"index":4183},{"krate":0,"index":4187},{"krate":0,"index":4190},{"krate":0,"index":4192},{"krate":0,"index":4194},{"krate":0,"index":4197},{"krate":0,"index":4200},{"krate":0,"index":4204},{"krate":0,"index":4206},{"krate":0,"index":4208},{"krate":0,"index":4212},{"krate":0,"index":4216},{"krate":0,"index":4220}],"decl_id":null,"docs":" Defines a system event and its parameters.","sig":null,"attributes":[{"value":"/ Defines a system event and its parameters.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318265,"byte_end":318311,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318312,"byte_end":318315,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Event` holds all the informations about a system event that just happened.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318316,"byte_end":318395,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318396,"byte_end":318399,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Events are retrieved using the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318400,"byte_end":318434,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ [`Window::poll_event`] or [`Window::wait_event`] functions.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318435,"byte_end":318498,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318499,"byte_end":318502,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ An `Event` instance contains the type of the event","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318503,"byte_end":318557,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ (mouse moved, key pressed, window closed, ...) as well as the details about this","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318558,"byte_end":318642,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ particular event.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318643,"byte_end":318664,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318665,"byte_end":318668,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318669,"byte_end":318688,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318689,"byte_end":318692,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # use sfml::window::{Event, Style, Key, Window};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318804,"byte_end":318856,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/ # let mut window = Window::new((32, 32),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318857,"byte_end":318901,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ #                              \"test\",","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318902,"byte_end":318944,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/ #                              Style::CLOSE,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318945,"byte_end":318993,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/ #                              &Default::default());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":318994,"byte_end":319050,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ # fn do_something_with_the_new_size(_x: u32, _y: u32) {}","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319051,"byte_end":319111,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/ while let Some(event) = window.poll_event() {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319112,"byte_end":319161,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/     match event {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319162,"byte_end":319183,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         Event::Closed | Event::KeyPressed { code: Key::ESCAPE, .. } => window.close(),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319184,"byte_end":319274,"line_start":31,"line_end":31,"column_start":1,"column_end":91}},{"value":"/         Event::Resized { width, height } => do_something_with_the_new_size(width, height),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319275,"byte_end":319369,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/         _ => { /* Do nothing */ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319370,"byte_end":319407,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319408,"byte_end":319417,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319418,"byte_end":319423,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319424,"byte_end":319431,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319432,"byte_end":319435,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Window::poll_event`]: crate::window::Window::poll_event","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319436,"byte_end":319497,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ [`Window::wait_event`]: crate::window::Window::wait_event","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319498,"byte_end":319559,"line_start":39,"line_end":39,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":319560,"byte_end":319563,"line_start":40,"line_end":40,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":3032},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"joystick","qualname":"::window::joystick","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":4234},{"krate":0,"index":4237},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4246},{"krate":0,"index":4248},{"krate":0,"index":4250},{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":3042},{"krate":0,"index":4256},{"krate":0,"index":4260},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057}],"decl_id":null,"docs":" Access to the real-time state of the joysticks.","sig":null,"attributes":[{"value":"/ Access to the real-time state of the joysticks.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":329955,"byte_end":330006,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330007,"byte_end":330010,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `joystick` provides an interface to the state of the joysticks.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330011,"byte_end":330078,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330079,"byte_end":330082,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Each joystick is identified by an index that is passed to the functions of this module.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330083,"byte_end":330174,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330175,"byte_end":330178,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module allows users to query the state of joysticks at any time and directly,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330179,"byte_end":330265,"line_start":7,"line_end":7,"column_start":1,"column_end":87}},{"value":"/ without having to deal with a window and its events. Compared to the [`JoystickMoved`],","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330266,"byte_end":330357,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ [`JoystickButtonPressed`] and [`JoystickButtonReleased`] events, `Joystick` can retrieve the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330358,"byte_end":330454,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ state of axes and buttons of joysticks at any time (you don't need to store and update a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330455,"byte_end":330547,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ boolean on your side in order to know if a button is pressed or released),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330548,"byte_end":330626,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ and you always get the real state of joysticks, even if they are moved,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330627,"byte_end":330702,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ pressed or released when your window is out of focus and no event is triggered.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330703,"byte_end":330786,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330787,"byte_end":330790,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`JoystickMoved`]: crate::window::Event::JoystickMoved","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330791,"byte_end":330849,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`JoystickButtonPressed`]: crate::window::Event::JoystickButtonPressed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330850,"byte_end":330924,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ [`JoystickButtonReleased`]: crate::window::Event::JoystickButtonReleased","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":330925,"byte_end":331001,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331002,"byte_end":331005,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ SFML supports:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331006,"byte_end":331024,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331025,"byte_end":331028,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - 8 joysticks ([`COUNT`])","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331029,"byte_end":331058,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/ - 32 buttons per joystick ([`BUTTON_COUNT`])","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331059,"byte_end":331107,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ - 8 axes per joystick ([`AXIS_COUNT`])","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331108,"byte_end":331150,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331151,"byte_end":331154,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Unlike the keyboard or mouse, the state of joysticks is sometimes not directly","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331155,"byte_end":331237,"line_start":25,"line_end":25,"column_start":1,"column_end":83}},{"value":"/ available (depending on the OS), therefore an [`update`] function must be called in order to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331238,"byte_end":331334,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ update the current state of joysticks. When you have a window with event handling, this is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331335,"byte_end":331429,"line_start":27,"line_end":27,"column_start":1,"column_end":95}},{"value":"/ done automatically, you don't need to call anything. But if you have no window, or if you want","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331430,"byte_end":331528,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ to check joysticks state before creating one, you must call [`update`] explicitly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331529,"byte_end":331615,"line_start":29,"line_end":29,"column_start":1,"column_end":87}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331616,"byte_end":331635,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331636,"byte_end":331639,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331640,"byte_end":331647,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use sfml::window::joystick;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331648,"byte_end":331679,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331680,"byte_end":331683,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // If joystick #0 is connected","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331684,"byte_end":331718,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ if joystick::is_connected(0) {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331719,"byte_end":331753,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/     // How many buttons does joystick #0 support?","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331754,"byte_end":331807,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/     let _buttons = joystick::button_count(0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331808,"byte_end":331857,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/     // Does joystick #0 define a X axis?","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331858,"byte_end":331902,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/     let _hax_x = joystick::has_axis(0, joystick::Axis::X);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331903,"byte_end":331965,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/     // Is button #2 pressed on joystick #0?","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":331966,"byte_end":332013,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/     let _pressed = joystick::is_button_pressed(0, 2);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332014,"byte_end":332071,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/     // What's the current position of the Y axis on joystick #0?","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332072,"byte_end":332140,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/     let _position = joystick::axis_position(0, joystick::Axis::Y);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332141,"byte_end":332211,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332212,"byte_end":332217,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332218,"byte_end":332225,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332226,"byte_end":332229,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`COUNT`]: COUNT","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332230,"byte_end":332250,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"/ [`BUTTON_COUNT`]: BUTTON_COUNT","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332251,"byte_end":332285,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/ [`AXIS_COUNT`]: AXIS_COUNT","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332286,"byte_end":332316,"line_start":50,"line_end":50,"column_start":1,"column_end":31}},{"value":"/ [`update`]: update","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332317,"byte_end":332339,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332340,"byte_end":332343,"line_start":52,"line_end":52,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":3039},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332463,"byte_end":332468,"line_start":58,"line_end":58,"column_start":11,"column_end":16},"name":"COUNT","qualname":"::window::joystick::COUNT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of supported joysticks.\n","sig":null,"attributes":[{"value":"/ Maximum number of supported joysticks.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332410,"byte_end":332452,"line_start":57,"line_end":57,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":3040},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332530,"byte_end":332542,"line_start":60,"line_end":60,"column_start":11,"column_end":23},"name":"BUTTON_COUNT","qualname":"::window::joystick::BUTTON_COUNT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of supported buttons.\n","sig":null,"attributes":[{"value":"/ Maximum number of supported buttons.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332479,"byte_end":332519,"line_start":59,"line_end":59,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":3041},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332602,"byte_end":332612,"line_start":62,"line_end":62,"column_start":11,"column_end":21},"name":"AXIS_COUNT","qualname":"::window::joystick::AXIS_COUNT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of supported axes.\n","sig":null,"attributes":[{"value":"/ Maximum number of supported axes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332554,"byte_end":332591,"line_start":61,"line_end":61,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4234},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332761,"byte_end":332765,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"Axis","qualname":"::window::joystick::Axis","value":"","parent":null,"children":[],"decl_id":null,"docs":" Axes supported by SFML joysticks\n","sig":null,"attributes":[{"value":"/ Axes supported by SFML joysticks","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332624,"byte_end":332660,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332729,"byte_end":332749,"line_start":66,"line_end":66,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":3043},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332846,"byte_end":332847,"line_start":71,"line_end":71,"column_start":15,"column_end":16},"name":"X","qualname":"::window::joystick::Axis::X","value":"Self","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The X axis.\n","sig":null,"attributes":[{"value":"/ The X axis.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332816,"byte_end":332831,"line_start":70,"line_end":70,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3044},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332929,"byte_end":332930,"line_start":73,"line_end":73,"column_start":15,"column_end":16},"name":"Y","qualname":"::window::joystick::Axis::Y","value":"Self","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The Y axis.\n","sig":null,"attributes":[{"value":"/ The Y axis.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332899,"byte_end":332914,"line_start":72,"line_end":72,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3045},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333012,"byte_end":333013,"line_start":75,"line_end":75,"column_start":15,"column_end":16},"name":"Z","qualname":"::window::joystick::Axis::Z","value":"Self","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The Z axis.\n","sig":null,"attributes":[{"value":"/ The Z axis.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332982,"byte_end":332997,"line_start":74,"line_end":74,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3046},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333095,"byte_end":333096,"line_start":77,"line_end":77,"column_start":15,"column_end":16},"name":"R","qualname":"::window::joystick::Axis::R","value":"Self","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The R axis.\n","sig":null,"attributes":[{"value":"/ The R axis.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333065,"byte_end":333080,"line_start":76,"line_end":76,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3047},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333178,"byte_end":333179,"line_start":79,"line_end":79,"column_start":15,"column_end":16},"name":"U","qualname":"::window::joystick::Axis::U","value":"Self","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The U axis.\n","sig":null,"attributes":[{"value":"/ The U axis.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333148,"byte_end":333163,"line_start":78,"line_end":78,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3048},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333261,"byte_end":333262,"line_start":81,"line_end":81,"column_start":15,"column_end":16},"name":"V","qualname":"::window::joystick::Axis::V","value":"Self","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The V axis.\n","sig":null,"attributes":[{"value":"/ The V axis.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333231,"byte_end":333246,"line_start":80,"line_end":80,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3049},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333369,"byte_end":333374,"line_start":83,"line_end":83,"column_start":15,"column_end":20},"name":"POV_X","qualname":"::window::joystick::Axis::POV_X","value":"Self","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The X axis of the point-of-view hat.\n","sig":null,"attributes":[{"value":"/ The X axis of the point-of-view hat.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333314,"byte_end":333354,"line_start":82,"line_end":82,"column_start":5,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":3050},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333484,"byte_end":333489,"line_start":85,"line_end":85,"column_start":15,"column_end":20},"name":"POV_Y","qualname":"::window::joystick::Axis::POV_Y","value":"Self","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The Y axis of the point-of-view hat.\n","sig":null,"attributes":[{"value":"/ The Y axis of the point-of-view hat.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333429,"byte_end":333469,"line_start":84,"line_end":84,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":4256},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333622,"byte_end":333636,"line_start":90,"line_end":90,"column_start":12,"column_end":26},"name":"Identification","qualname":"::window::joystick::Identification","value":"Identification { name, vendor_id, product_id }","parent":null,"children":[{"krate":0,"index":4257},{"krate":0,"index":4258},{"krate":0,"index":4259}],"decl_id":null,"docs":" Structure holding a joystick's identification.\n","sig":null,"attributes":[{"value":"/ Structure holding a joystick's identification.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333543,"byte_end":333593,"line_start":88,"line_end":88,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4257},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333677,"byte_end":333681,"line_start":92,"line_end":92,"column_start":9,"column_end":13},"name":"name","qualname":"::window::joystick::Identification::name","value":"std::string::String","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":" Name of the joystick.\n","sig":null,"attributes":[{"value":"/ Name of the joystick.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333643,"byte_end":333668,"line_start":91,"line_end":91,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4258},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333732,"byte_end":333741,"line_start":94,"line_end":94,"column_start":9,"column_end":18},"name":"vendor_id","qualname":"::window::joystick::Identification::vendor_id","value":"u32","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":" Manufacturer identifier.\n","sig":null,"attributes":[{"value":"/ Manufacturer identifier.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333695,"byte_end":333723,"line_start":93,"line_end":93,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4259},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333784,"byte_end":333794,"line_start":96,"line_end":96,"column_start":9,"column_end":19},"name":"product_id","qualname":"::window::joystick::Identification::product_id","value":"u32","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":" Product identifier.\n","sig":null,"attributes":[{"value":"/ Product identifier.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333752,"byte_end":333775,"line_start":95,"line_end":95,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":3051},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333996,"byte_end":334008,"line_start":106,"line_end":106,"column_start":8,"column_end":20},"name":"is_connected","qualname":"::window::joystick::is_connected","value":"pub fn is_connected(u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the joystick is connected","sig":null,"attributes":[{"value":"/ Check if the joystick is connected","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333804,"byte_end":333842,"line_start":99,"line_end":99,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333843,"byte_end":333846,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333847,"byte_end":333862,"line_start":101,"line_end":101,"column_start":1,"column_end":16}},{"value":"/ * joystick - Index of the joystick to check","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333863,"byte_end":333910,"line_start":102,"line_end":102,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333911,"byte_end":333914,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Return true if the joystick is connected, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333915,"byte_end":333976,"line_start":104,"line_end":104,"column_start":1,"column_end":62}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":333977,"byte_end":333988,"line_start":105,"line_end":105,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3052},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334301,"byte_end":334313,"line_start":117,"line_end":117,"column_start":8,"column_end":20},"name":"button_count","qualname":"::window::joystick::button_count","value":"pub fn button_count(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the number of buttons supported by a joystick","sig":null,"attributes":[{"value":"/ Return the number of buttons supported by a joystick","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334102,"byte_end":334158,"line_start":110,"line_end":110,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334159,"byte_end":334162,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334163,"byte_end":334178,"line_start":112,"line_end":112,"column_start":1,"column_end":16}},{"value":"/ * joystick - Index of the joystick","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334179,"byte_end":334217,"line_start":113,"line_end":113,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334218,"byte_end":334221,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Return the number of buttons supported by the joystick.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334222,"byte_end":334281,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334282,"byte_end":334293,"line_start":116,"line_end":116,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3053},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334691,"byte_end":334699,"line_start":131,"line_end":131,"column_start":8,"column_end":16},"name":"has_axis","qualname":"::window::joystick::has_axis","value":"pub fn has_axis(u32, Axis) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the joystick support a given axis","sig":null,"attributes":[{"value":"/ Check if the joystick support a given axis","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334397,"byte_end":334443,"line_start":121,"line_end":121,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334444,"byte_end":334447,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ If the joystick is not connected, this function returns false.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334448,"byte_end":334514,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334515,"byte_end":334518,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334519,"byte_end":334534,"line_start":125,"line_end":125,"column_start":1,"column_end":16}},{"value":"/ * joystick - Index of the joystick","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334535,"byte_end":334573,"line_start":126,"line_end":126,"column_start":1,"column_end":39}},{"value":"/ * axis - Axis to check","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334574,"byte_end":334600,"line_start":127,"line_end":127,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334601,"byte_end":334604,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Return true if the joystick supports the axis, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334605,"byte_end":334671,"line_start":129,"line_end":129,"column_start":1,"column_end":67}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334672,"byte_end":334683,"line_start":130,"line_end":130,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3054},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335107,"byte_end":335124,"line_start":145,"line_end":145,"column_start":8,"column_end":25},"name":"is_button_pressed","qualname":"::window::joystick::is_button_pressed","value":"pub fn is_button_pressed(u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the button is pressed on a given joystick.","sig":null,"attributes":[{"value":"/ Check if the button is pressed on a given joystick.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334809,"byte_end":334864,"line_start":135,"line_end":135,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334865,"byte_end":334868,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ If the joystick is not connected, this function returns false.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334869,"byte_end":334935,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334936,"byte_end":334939,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334940,"byte_end":334955,"line_start":139,"line_end":139,"column_start":1,"column_end":16}},{"value":"/ * joystick - Index of the joystick","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334956,"byte_end":334994,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/ * button - Button to check","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":334995,"byte_end":335025,"line_start":141,"line_end":141,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335026,"byte_end":335029,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Return true if the button is pressed, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335030,"byte_end":335087,"line_start":143,"line_end":143,"column_start":1,"column_end":58}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335088,"byte_end":335099,"line_start":144,"line_end":144,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3055},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335554,"byte_end":335567,"line_start":159,"line_end":159,"column_start":8,"column_end":21},"name":"axis_position","qualname":"::window::joystick::axis_position","value":"pub fn axis_position(u32, Axis) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the current position on a given axis, on a given joystick.","sig":null,"attributes":[{"value":"/ Get the current position on a given axis, on a given joystick.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335243,"byte_end":335309,"line_start":149,"line_end":149,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335310,"byte_end":335313,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ If the joystick is not connected, this function returns 0.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335314,"byte_end":335376,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335377,"byte_end":335380,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335381,"byte_end":335396,"line_start":153,"line_end":153,"column_start":1,"column_end":16}},{"value":"/ * joystick - Index of the joystick","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335397,"byte_end":335435,"line_start":154,"line_end":154,"column_start":1,"column_end":39}},{"value":"/ * axis - Axis to check","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335436,"byte_end":335462,"line_start":155,"line_end":155,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335463,"byte_end":335466,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Return the current position of the axis, in range [-100 .. 100]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335467,"byte_end":335534,"line_start":157,"line_end":157,"column_start":1,"column_end":68}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335535,"byte_end":335546,"line_start":158,"line_end":158,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3056},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335978,"byte_end":335984,"line_start":169,"line_end":169,"column_start":8,"column_end":14},"name":"update","qualname":"::window::joystick::update","value":"pub fn update()","parent":null,"children":[],"decl_id":null,"docs":" Update the states of all joysticks","sig":null,"attributes":[{"value":"/ Update the states of all joysticks","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335672,"byte_end":335710,"line_start":163,"line_end":163,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335711,"byte_end":335714,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This function is used internally by SFML, so you normally","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335715,"byte_end":335776,"line_start":165,"line_end":165,"column_start":1,"column_end":62}},{"value":"/ don't have to call it explicitely. However, you may need to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335777,"byte_end":335840,"line_start":166,"line_end":166,"column_start":1,"column_end":64}},{"value":"/ call it if you have no window yet (or no window at all):","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335841,"byte_end":335901,"line_start":167,"line_end":167,"column_start":1,"column_end":61}},{"value":"/ in this case the joysticks states are not updated automatically.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":335902,"byte_end":335970,"line_start":168,"line_end":168,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":3057},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":336098,"byte_end":336112,"line_start":177,"line_end":177,"column_start":8,"column_end":22},"name":"identification","qualname":"::window::joystick::identification","value":"pub fn identification(u32) -> Identification","parent":null,"children":[],"decl_id":null,"docs":" Get the joystick information.\n","sig":null,"attributes":[{"value":"/ Get the joystick information.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":336045,"byte_end":336078,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":336079,"byte_end":336090,"line_start":176,"line_end":176,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4262},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336643,"byte_end":336646,"line_start":7,"line_end":7,"column_start":12,"column_end":15},"name":"Key","qualname":"::window::keyboard::Key","value":"","parent":null,"children":[],"decl_id":null,"docs":" Key codes known to SFML.\n","sig":null,"attributes":[{"value":"/ Key codes known to SFML.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336514,"byte_end":336542,"line_start":4,"line_end":4,"column_start":1,"column_end":29}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336543,"byte_end":336563,"line_start":5,"line_end":5,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":3073},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336723,"byte_end":336730,"line_start":11,"line_end":11,"column_start":15,"column_end":22},"name":"UNKNOWN","qualname":"::window::keyboard::Key::UNKNOWN","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" Unhandled key\n","sig":null,"attributes":[{"value":"/ Unhandled key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336691,"byte_end":336708,"line_start":10,"line_end":10,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":3074},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336806,"byte_end":336807,"line_start":13,"line_end":13,"column_start":15,"column_end":16},"name":"A","qualname":"::window::keyboard::Key::A","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The A key\n","sig":null,"attributes":[{"value":"/ The A key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336778,"byte_end":336791,"line_start":12,"line_end":12,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3075},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336877,"byte_end":336878,"line_start":15,"line_end":15,"column_start":15,"column_end":16},"name":"B","qualname":"::window::keyboard::Key::B","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The B key\n","sig":null,"attributes":[{"value":"/ The B key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336849,"byte_end":336862,"line_start":14,"line_end":14,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3076},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336948,"byte_end":336949,"line_start":17,"line_end":17,"column_start":15,"column_end":16},"name":"C","qualname":"::window::keyboard::Key::C","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The C key\n","sig":null,"attributes":[{"value":"/ The C key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336920,"byte_end":336933,"line_start":16,"line_end":16,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3077},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337019,"byte_end":337020,"line_start":19,"line_end":19,"column_start":15,"column_end":16},"name":"D","qualname":"::window::keyboard::Key::D","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The D key\n","sig":null,"attributes":[{"value":"/ The D key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336991,"byte_end":337004,"line_start":18,"line_end":18,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3078},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337090,"byte_end":337091,"line_start":21,"line_end":21,"column_start":15,"column_end":16},"name":"E","qualname":"::window::keyboard::Key::E","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The E key\n","sig":null,"attributes":[{"value":"/ The E key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337062,"byte_end":337075,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3079},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337161,"byte_end":337162,"line_start":23,"line_end":23,"column_start":15,"column_end":16},"name":"F","qualname":"::window::keyboard::Key::F","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F key\n","sig":null,"attributes":[{"value":"/ The F key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337133,"byte_end":337146,"line_start":22,"line_end":22,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3080},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337232,"byte_end":337233,"line_start":25,"line_end":25,"column_start":15,"column_end":16},"name":"G","qualname":"::window::keyboard::Key::G","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The G key\n","sig":null,"attributes":[{"value":"/ The G key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337204,"byte_end":337217,"line_start":24,"line_end":24,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3081},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337303,"byte_end":337304,"line_start":27,"line_end":27,"column_start":15,"column_end":16},"name":"H","qualname":"::window::keyboard::Key::H","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The H key\n","sig":null,"attributes":[{"value":"/ The H key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337275,"byte_end":337288,"line_start":26,"line_end":26,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3082},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337374,"byte_end":337375,"line_start":29,"line_end":29,"column_start":15,"column_end":16},"name":"I","qualname":"::window::keyboard::Key::I","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The I key\n","sig":null,"attributes":[{"value":"/ The I key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337346,"byte_end":337359,"line_start":28,"line_end":28,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3083},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337445,"byte_end":337446,"line_start":31,"line_end":31,"column_start":15,"column_end":16},"name":"J","qualname":"::window::keyboard::Key::J","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The J key\n","sig":null,"attributes":[{"value":"/ The J key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337417,"byte_end":337430,"line_start":30,"line_end":30,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3084},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337516,"byte_end":337517,"line_start":33,"line_end":33,"column_start":15,"column_end":16},"name":"K","qualname":"::window::keyboard::Key::K","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The K key\n","sig":null,"attributes":[{"value":"/ The K key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337488,"byte_end":337501,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3085},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337587,"byte_end":337588,"line_start":35,"line_end":35,"column_start":15,"column_end":16},"name":"L","qualname":"::window::keyboard::Key::L","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The L key\n","sig":null,"attributes":[{"value":"/ The L key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337559,"byte_end":337572,"line_start":34,"line_end":34,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3086},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337658,"byte_end":337659,"line_start":37,"line_end":37,"column_start":15,"column_end":16},"name":"M","qualname":"::window::keyboard::Key::M","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The M key\n","sig":null,"attributes":[{"value":"/ The M key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337630,"byte_end":337643,"line_start":36,"line_end":36,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3087},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337729,"byte_end":337730,"line_start":39,"line_end":39,"column_start":15,"column_end":16},"name":"N","qualname":"::window::keyboard::Key::N","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The N key\n","sig":null,"attributes":[{"value":"/ The N key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337701,"byte_end":337714,"line_start":38,"line_end":38,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3088},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337800,"byte_end":337801,"line_start":41,"line_end":41,"column_start":15,"column_end":16},"name":"O","qualname":"::window::keyboard::Key::O","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The O key\n","sig":null,"attributes":[{"value":"/ The O key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337772,"byte_end":337785,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3089},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337871,"byte_end":337872,"line_start":43,"line_end":43,"column_start":15,"column_end":16},"name":"P","qualname":"::window::keyboard::Key::P","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The P key\n","sig":null,"attributes":[{"value":"/ The P key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337843,"byte_end":337856,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3090},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337942,"byte_end":337943,"line_start":45,"line_end":45,"column_start":15,"column_end":16},"name":"Q","qualname":"::window::keyboard::Key::Q","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Q key\n","sig":null,"attributes":[{"value":"/ The Q key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337914,"byte_end":337927,"line_start":44,"line_end":44,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3091},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338013,"byte_end":338014,"line_start":47,"line_end":47,"column_start":15,"column_end":16},"name":"R","qualname":"::window::keyboard::Key::R","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The R key\n","sig":null,"attributes":[{"value":"/ The R key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":337985,"byte_end":337998,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3092},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338084,"byte_end":338085,"line_start":49,"line_end":49,"column_start":15,"column_end":16},"name":"S","qualname":"::window::keyboard::Key::S","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The S key\n","sig":null,"attributes":[{"value":"/ The S key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338056,"byte_end":338069,"line_start":48,"line_end":48,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3093},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338155,"byte_end":338156,"line_start":51,"line_end":51,"column_start":15,"column_end":16},"name":"T","qualname":"::window::keyboard::Key::T","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The T key\n","sig":null,"attributes":[{"value":"/ The T key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338127,"byte_end":338140,"line_start":50,"line_end":50,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3094},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338226,"byte_end":338227,"line_start":53,"line_end":53,"column_start":15,"column_end":16},"name":"U","qualname":"::window::keyboard::Key::U","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The U key\n","sig":null,"attributes":[{"value":"/ The U key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338198,"byte_end":338211,"line_start":52,"line_end":52,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3095},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338297,"byte_end":338298,"line_start":55,"line_end":55,"column_start":15,"column_end":16},"name":"V","qualname":"::window::keyboard::Key::V","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The V key\n","sig":null,"attributes":[{"value":"/ The V key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338269,"byte_end":338282,"line_start":54,"line_end":54,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3096},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338368,"byte_end":338369,"line_start":57,"line_end":57,"column_start":15,"column_end":16},"name":"W","qualname":"::window::keyboard::Key::W","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The W key\n","sig":null,"attributes":[{"value":"/ The W key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338340,"byte_end":338353,"line_start":56,"line_end":56,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3097},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338439,"byte_end":338440,"line_start":59,"line_end":59,"column_start":15,"column_end":16},"name":"X","qualname":"::window::keyboard::Key::X","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The X key\n","sig":null,"attributes":[{"value":"/ The X key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338411,"byte_end":338424,"line_start":58,"line_end":58,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3098},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338510,"byte_end":338511,"line_start":61,"line_end":61,"column_start":15,"column_end":16},"name":"Y","qualname":"::window::keyboard::Key::Y","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Y key\n","sig":null,"attributes":[{"value":"/ The Y key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338482,"byte_end":338495,"line_start":60,"line_end":60,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3099},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338581,"byte_end":338582,"line_start":63,"line_end":63,"column_start":15,"column_end":16},"name":"Z","qualname":"::window::keyboard::Key::Z","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Z key\n","sig":null,"attributes":[{"value":"/ The Z key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338553,"byte_end":338566,"line_start":62,"line_end":62,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3100},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338652,"byte_end":338656,"line_start":65,"line_end":65,"column_start":15,"column_end":19},"name":"NUM0","qualname":"::window::keyboard::Key::NUM0","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 0 key\n","sig":null,"attributes":[{"value":"/ The 0 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338624,"byte_end":338637,"line_start":64,"line_end":64,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3101},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338729,"byte_end":338733,"line_start":67,"line_end":67,"column_start":15,"column_end":19},"name":"NUM1","qualname":"::window::keyboard::Key::NUM1","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 1 key\n","sig":null,"attributes":[{"value":"/ The 1 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338701,"byte_end":338714,"line_start":66,"line_end":66,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3102},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338806,"byte_end":338810,"line_start":69,"line_end":69,"column_start":15,"column_end":19},"name":"NUM2","qualname":"::window::keyboard::Key::NUM2","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 2 key\n","sig":null,"attributes":[{"value":"/ The 2 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338778,"byte_end":338791,"line_start":68,"line_end":68,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3103},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338883,"byte_end":338887,"line_start":71,"line_end":71,"column_start":15,"column_end":19},"name":"NUM3","qualname":"::window::keyboard::Key::NUM3","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 3 key\n","sig":null,"attributes":[{"value":"/ The 3 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338855,"byte_end":338868,"line_start":70,"line_end":70,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3104},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338960,"byte_end":338964,"line_start":73,"line_end":73,"column_start":15,"column_end":19},"name":"NUM4","qualname":"::window::keyboard::Key::NUM4","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 4 key\n","sig":null,"attributes":[{"value":"/ The 4 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":338932,"byte_end":338945,"line_start":72,"line_end":72,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3105},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339037,"byte_end":339041,"line_start":75,"line_end":75,"column_start":15,"column_end":19},"name":"NUM5","qualname":"::window::keyboard::Key::NUM5","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 5 key\n","sig":null,"attributes":[{"value":"/ The 5 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339009,"byte_end":339022,"line_start":74,"line_end":74,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3106},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339114,"byte_end":339118,"line_start":77,"line_end":77,"column_start":15,"column_end":19},"name":"NUM6","qualname":"::window::keyboard::Key::NUM6","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 6 key\n","sig":null,"attributes":[{"value":"/ The 6 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339086,"byte_end":339099,"line_start":76,"line_end":76,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3107},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339191,"byte_end":339195,"line_start":79,"line_end":79,"column_start":15,"column_end":19},"name":"NUM7","qualname":"::window::keyboard::Key::NUM7","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 7 key\n","sig":null,"attributes":[{"value":"/ The 7 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339163,"byte_end":339176,"line_start":78,"line_end":78,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3108},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339268,"byte_end":339272,"line_start":81,"line_end":81,"column_start":15,"column_end":19},"name":"NUM8","qualname":"::window::keyboard::Key::NUM8","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 8 key\n","sig":null,"attributes":[{"value":"/ The 8 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339240,"byte_end":339253,"line_start":80,"line_end":80,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3109},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339345,"byte_end":339349,"line_start":83,"line_end":83,"column_start":15,"column_end":19},"name":"NUM9","qualname":"::window::keyboard::Key::NUM9","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The 9 key\n","sig":null,"attributes":[{"value":"/ The 9 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339317,"byte_end":339330,"line_start":82,"line_end":82,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3110},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339427,"byte_end":339433,"line_start":85,"line_end":85,"column_start":15,"column_end":21},"name":"ESCAPE","qualname":"::window::keyboard::Key::ESCAPE","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Escape key\n","sig":null,"attributes":[{"value":"/ The Escape key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339394,"byte_end":339412,"line_start":84,"line_end":84,"column_start":5,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":3111},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339519,"byte_end":339527,"line_start":87,"line_end":87,"column_start":15,"column_end":23},"name":"LCONTROL","qualname":"::window::keyboard::Key::LCONTROL","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The left Control key\n","sig":null,"attributes":[{"value":"/ The left Control key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339480,"byte_end":339504,"line_start":86,"line_end":86,"column_start":5,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":3112},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339613,"byte_end":339619,"line_start":89,"line_end":89,"column_start":15,"column_end":21},"name":"LSHIFT","qualname":"::window::keyboard::Key::LSHIFT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The left Shift key\n","sig":null,"attributes":[{"value":"/ The left Shift key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339576,"byte_end":339598,"line_start":88,"line_end":88,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":3113},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339701,"byte_end":339705,"line_start":91,"line_end":91,"column_start":15,"column_end":19},"name":"LALT","qualname":"::window::keyboard::Key::LALT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The left Alt key\n","sig":null,"attributes":[{"value":"/ The left Alt key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339666,"byte_end":339686,"line_start":90,"line_end":90,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3114},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339844,"byte_end":339851,"line_start":93,"line_end":93,"column_start":15,"column_end":22},"name":"LSYSTEM","qualname":"::window::keyboard::Key::LSYSTEM","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The left OS specific key: window (Windows and Linux), apple (Mac OS X), ...\n","sig":null,"attributes":[{"value":"/ The left OS specific key: window (Windows and Linux), apple (Mac OS X), ...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339750,"byte_end":339829,"line_start":92,"line_end":92,"column_start":5,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":3115},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339939,"byte_end":339947,"line_start":95,"line_end":95,"column_start":15,"column_end":23},"name":"RCONTROL","qualname":"::window::keyboard::Key::RCONTROL","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The right Control key\n","sig":null,"attributes":[{"value":"/ The right Control key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339899,"byte_end":339924,"line_start":94,"line_end":94,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":3116},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340034,"byte_end":340040,"line_start":97,"line_end":97,"column_start":15,"column_end":21},"name":"RSHIFT","qualname":"::window::keyboard::Key::RSHIFT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The right Shift key\n","sig":null,"attributes":[{"value":"/ The right Shift key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":339996,"byte_end":340019,"line_start":96,"line_end":96,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":3117},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340123,"byte_end":340127,"line_start":99,"line_end":99,"column_start":15,"column_end":19},"name":"RALT","qualname":"::window::keyboard::Key::RALT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The right Alt key\n","sig":null,"attributes":[{"value":"/ The right Alt key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340087,"byte_end":340108,"line_start":98,"line_end":98,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":3118},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340267,"byte_end":340274,"line_start":101,"line_end":101,"column_start":15,"column_end":22},"name":"RSYSTEM","qualname":"::window::keyboard::Key::RSYSTEM","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The right OS specific key: window (Windows and Linux), apple (Mac OS X), ...\n","sig":null,"attributes":[{"value":"/ The right OS specific key: window (Windows and Linux), apple (Mac OS X), ...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340172,"byte_end":340252,"line_start":100,"line_end":100,"column_start":5,"column_end":85}}]},{"kind":"Const","id":{"krate":0,"index":3119},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340353,"byte_end":340357,"line_start":103,"line_end":103,"column_start":15,"column_end":19},"name":"MENU","qualname":"::window::keyboard::Key::MENU","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Menu key\n","sig":null,"attributes":[{"value":"/ The Menu key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340322,"byte_end":340338,"line_start":102,"line_end":102,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":3120},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340430,"byte_end":340438,"line_start":105,"line_end":105,"column_start":15,"column_end":23},"name":"LBRACKET","qualname":"::window::keyboard::Key::LBRACKET","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The [ key\n","sig":null,"attributes":[{"value":"/ The [ key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340402,"byte_end":340415,"line_start":104,"line_end":104,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3121},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340515,"byte_end":340523,"line_start":107,"line_end":107,"column_start":15,"column_end":23},"name":"RBRACKET","qualname":"::window::keyboard::Key::RBRACKET","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The ] key\n","sig":null,"attributes":[{"value":"/ The ] key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340487,"byte_end":340500,"line_start":106,"line_end":106,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3122},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340600,"byte_end":340609,"line_start":109,"line_end":109,"column_start":15,"column_end":24},"name":"SEMICOLON","qualname":"::window::keyboard::Key::SEMICOLON","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The ; key\n","sig":null,"attributes":[{"value":"/ The ; key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340572,"byte_end":340585,"line_start":108,"line_end":108,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3123},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340687,"byte_end":340692,"line_start":111,"line_end":111,"column_start":15,"column_end":20},"name":"COMMA","qualname":"::window::keyboard::Key::COMMA","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The , key\n","sig":null,"attributes":[{"value":"/ The , key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340659,"byte_end":340672,"line_start":110,"line_end":110,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3124},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340766,"byte_end":340772,"line_start":113,"line_end":113,"column_start":15,"column_end":21},"name":"PERIOD","qualname":"::window::keyboard::Key::PERIOD","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The . key\n","sig":null,"attributes":[{"value":"/ The . key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340738,"byte_end":340751,"line_start":112,"line_end":112,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3125},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340847,"byte_end":340852,"line_start":115,"line_end":115,"column_start":15,"column_end":20},"name":"QUOTE","qualname":"::window::keyboard::Key::QUOTE","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The ' key\n","sig":null,"attributes":[{"value":"/ The ' key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340819,"byte_end":340832,"line_start":114,"line_end":114,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3126},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340926,"byte_end":340931,"line_start":117,"line_end":117,"column_start":15,"column_end":20},"name":"SLASH","qualname":"::window::keyboard::Key::SLASH","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The / key\n","sig":null,"attributes":[{"value":"/ The / key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340898,"byte_end":340911,"line_start":116,"line_end":116,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3127},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341005,"byte_end":341014,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"name":"BACKSLASH","qualname":"::window::keyboard::Key::BACKSLASH","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The \\ key\n","sig":null,"attributes":[{"value":"/ The \\ key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":340977,"byte_end":340990,"line_start":118,"line_end":118,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3128},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341092,"byte_end":341097,"line_start":121,"line_end":121,"column_start":15,"column_end":20},"name":"TILDE","qualname":"::window::keyboard::Key::TILDE","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The ~ key\n","sig":null,"attributes":[{"value":"/ The ~ key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341064,"byte_end":341077,"line_start":120,"line_end":120,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3129},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341171,"byte_end":341176,"line_start":123,"line_end":123,"column_start":15,"column_end":20},"name":"EQUAL","qualname":"::window::keyboard::Key::EQUAL","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The = key\n","sig":null,"attributes":[{"value":"/ The = key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341143,"byte_end":341156,"line_start":122,"line_end":122,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3130},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341259,"byte_end":341265,"line_start":125,"line_end":125,"column_start":15,"column_end":21},"name":"HYPHEN","qualname":"::window::keyboard::Key::HYPHEN","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The - key (hyphen)\n","sig":null,"attributes":[{"value":"/ The - key (hyphen)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341222,"byte_end":341244,"line_start":124,"line_end":124,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":3131},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341344,"byte_end":341349,"line_start":127,"line_end":127,"column_start":15,"column_end":20},"name":"SPACE","qualname":"::window::keyboard::Key::SPACE","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Space key\n","sig":null,"attributes":[{"value":"/ The Space key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341312,"byte_end":341329,"line_start":126,"line_end":126,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":3132},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341435,"byte_end":341440,"line_start":129,"line_end":129,"column_start":15,"column_end":20},"name":"ENTER","qualname":"::window::keyboard::Key::ENTER","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Enter/Return keys\n","sig":null,"attributes":[{"value":"/ The Enter/Return keys","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341395,"byte_end":341420,"line_start":128,"line_end":128,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":3133},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341522,"byte_end":341531,"line_start":131,"line_end":131,"column_start":15,"column_end":24},"name":"BACKSPACE","qualname":"::window::keyboard::Key::BACKSPACE","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Backspace key\n","sig":null,"attributes":[{"value":"/ The Backspace key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341486,"byte_end":341507,"line_start":130,"line_end":130,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":3134},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341618,"byte_end":341621,"line_start":133,"line_end":133,"column_start":15,"column_end":18},"name":"TAB","qualname":"::window::keyboard::Key::TAB","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Tabulation key\n","sig":null,"attributes":[{"value":"/ The Tabulation key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341581,"byte_end":341603,"line_start":132,"line_end":132,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":3135},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341699,"byte_end":341705,"line_start":135,"line_end":135,"column_start":15,"column_end":21},"name":"PAGEUP","qualname":"::window::keyboard::Key::PAGEUP","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Page up key\n","sig":null,"attributes":[{"value":"/ The Page up key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341665,"byte_end":341684,"line_start":134,"line_end":134,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":3136},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341788,"byte_end":341796,"line_start":137,"line_end":137,"column_start":15,"column_end":23},"name":"PAGEDOWN","qualname":"::window::keyboard::Key::PAGEDOWN","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Page down key\n","sig":null,"attributes":[{"value":"/ The Page down key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341752,"byte_end":341773,"line_start":136,"line_end":136,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":3137},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341875,"byte_end":341878,"line_start":139,"line_end":139,"column_start":15,"column_end":18},"name":"END","qualname":"::window::keyboard::Key::END","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The End key\n","sig":null,"attributes":[{"value":"/ The End key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341845,"byte_end":341860,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3138},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341953,"byte_end":341957,"line_start":141,"line_end":141,"column_start":15,"column_end":19},"name":"HOME","qualname":"::window::keyboard::Key::HOME","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Home key\n","sig":null,"attributes":[{"value":"/ The Home key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":341922,"byte_end":341938,"line_start":140,"line_end":140,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":3139},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342035,"byte_end":342041,"line_start":143,"line_end":143,"column_start":15,"column_end":21},"name":"INSERT","qualname":"::window::keyboard::Key::INSERT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Insert key\n","sig":null,"attributes":[{"value":"/ The Insert key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342002,"byte_end":342020,"line_start":142,"line_end":142,"column_start":5,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":3140},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342121,"byte_end":342127,"line_start":145,"line_end":145,"column_start":15,"column_end":21},"name":"DELETE","qualname":"::window::keyboard::Key::DELETE","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Delete key\n","sig":null,"attributes":[{"value":"/ The Delete key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342088,"byte_end":342106,"line_start":144,"line_end":144,"column_start":5,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":3141},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342202,"byte_end":342205,"line_start":147,"line_end":147,"column_start":15,"column_end":18},"name":"ADD","qualname":"::window::keyboard::Key::ADD","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The + key\n","sig":null,"attributes":[{"value":"/ The + key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342174,"byte_end":342187,"line_start":146,"line_end":146,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3142},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342306,"byte_end":342314,"line_start":149,"line_end":149,"column_start":15,"column_end":23},"name":"SUBTRACT","qualname":"::window::keyboard::Key::SUBTRACT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The - key (minus, usually from numpad)\n","sig":null,"attributes":[{"value":"/ The - key (minus, usually from numpad)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342249,"byte_end":342291,"line_start":148,"line_end":148,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":3143},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342391,"byte_end":342399,"line_start":151,"line_end":151,"column_start":15,"column_end":23},"name":"MULTIPLY","qualname":"::window::keyboard::Key::MULTIPLY","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The * key\n","sig":null,"attributes":[{"value":"/ The * key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342363,"byte_end":342376,"line_start":150,"line_end":150,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3144},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342476,"byte_end":342482,"line_start":153,"line_end":153,"column_start":15,"column_end":21},"name":"DIVIDE","qualname":"::window::keyboard::Key::DIVIDE","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The / key\n","sig":null,"attributes":[{"value":"/ The / key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342448,"byte_end":342461,"line_start":152,"line_end":152,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":3145},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342558,"byte_end":342562,"line_start":155,"line_end":155,"column_start":15,"column_end":19},"name":"LEFT","qualname":"::window::keyboard::Key::LEFT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" Left arrow\n","sig":null,"attributes":[{"value":"/ Left arrow","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342529,"byte_end":342543,"line_start":154,"line_end":154,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3146},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342637,"byte_end":342642,"line_start":157,"line_end":157,"column_start":15,"column_end":20},"name":"RIGHT","qualname":"::window::keyboard::Key::RIGHT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" Right arrow\n","sig":null,"attributes":[{"value":"/ Right arrow","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342607,"byte_end":342622,"line_start":156,"line_end":156,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3147},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342715,"byte_end":342717,"line_start":159,"line_end":159,"column_start":15,"column_end":17},"name":"UP","qualname":"::window::keyboard::Key::UP","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" Up arrow\n","sig":null,"attributes":[{"value":"/ Up arrow","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342688,"byte_end":342700,"line_start":158,"line_end":158,"column_start":5,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":3148},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342789,"byte_end":342793,"line_start":161,"line_end":161,"column_start":15,"column_end":19},"name":"DOWN","qualname":"::window::keyboard::Key::DOWN","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" Down arrow\n","sig":null,"attributes":[{"value":"/ Down arrow","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342760,"byte_end":342774,"line_start":160,"line_end":160,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3149},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342873,"byte_end":342880,"line_start":163,"line_end":163,"column_start":15,"column_end":22},"name":"NUMPAD0","qualname":"::window::keyboard::Key::NUMPAD0","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 0 key\n","sig":null,"attributes":[{"value":"/ The numpad 0 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342838,"byte_end":342858,"line_start":162,"line_end":162,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3150},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342963,"byte_end":342970,"line_start":165,"line_end":165,"column_start":15,"column_end":22},"name":"NUMPAD1","qualname":"::window::keyboard::Key::NUMPAD1","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 1 key\n","sig":null,"attributes":[{"value":"/ The numpad 1 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":342928,"byte_end":342948,"line_start":164,"line_end":164,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3151},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343053,"byte_end":343060,"line_start":167,"line_end":167,"column_start":15,"column_end":22},"name":"NUMPAD2","qualname":"::window::keyboard::Key::NUMPAD2","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 2 key\n","sig":null,"attributes":[{"value":"/ The numpad 2 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343018,"byte_end":343038,"line_start":166,"line_end":166,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3152},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343143,"byte_end":343150,"line_start":169,"line_end":169,"column_start":15,"column_end":22},"name":"NUMPAD3","qualname":"::window::keyboard::Key::NUMPAD3","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 3 key\n","sig":null,"attributes":[{"value":"/ The numpad 3 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343108,"byte_end":343128,"line_start":168,"line_end":168,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3153},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343233,"byte_end":343240,"line_start":171,"line_end":171,"column_start":15,"column_end":22},"name":"NUMPAD4","qualname":"::window::keyboard::Key::NUMPAD4","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 4 key\n","sig":null,"attributes":[{"value":"/ The numpad 4 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343198,"byte_end":343218,"line_start":170,"line_end":170,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3154},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343323,"byte_end":343330,"line_start":173,"line_end":173,"column_start":15,"column_end":22},"name":"NUMPAD5","qualname":"::window::keyboard::Key::NUMPAD5","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 5 key\n","sig":null,"attributes":[{"value":"/ The numpad 5 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343288,"byte_end":343308,"line_start":172,"line_end":172,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3155},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343413,"byte_end":343420,"line_start":175,"line_end":175,"column_start":15,"column_end":22},"name":"NUMPAD6","qualname":"::window::keyboard::Key::NUMPAD6","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 6 key\n","sig":null,"attributes":[{"value":"/ The numpad 6 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343378,"byte_end":343398,"line_start":174,"line_end":174,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3156},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343503,"byte_end":343510,"line_start":177,"line_end":177,"column_start":15,"column_end":22},"name":"NUMPAD7","qualname":"::window::keyboard::Key::NUMPAD7","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 7 key\n","sig":null,"attributes":[{"value":"/ The numpad 7 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343468,"byte_end":343488,"line_start":176,"line_end":176,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3157},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343593,"byte_end":343600,"line_start":179,"line_end":179,"column_start":15,"column_end":22},"name":"NUMPAD8","qualname":"::window::keyboard::Key::NUMPAD8","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 8 key\n","sig":null,"attributes":[{"value":"/ The numpad 8 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343558,"byte_end":343578,"line_start":178,"line_end":178,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3158},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343683,"byte_end":343690,"line_start":181,"line_end":181,"column_start":15,"column_end":22},"name":"NUMPAD9","qualname":"::window::keyboard::Key::NUMPAD9","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The numpad 9 key\n","sig":null,"attributes":[{"value":"/ The numpad 9 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343648,"byte_end":343668,"line_start":180,"line_end":180,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3159},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343767,"byte_end":343769,"line_start":183,"line_end":183,"column_start":15,"column_end":17},"name":"F1","qualname":"::window::keyboard::Key::F1","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F1 key\n","sig":null,"attributes":[{"value":"/ The F1 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343738,"byte_end":343752,"line_start":182,"line_end":182,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3160},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343841,"byte_end":343843,"line_start":185,"line_end":185,"column_start":15,"column_end":17},"name":"F2","qualname":"::window::keyboard::Key::F2","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F2 key\n","sig":null,"attributes":[{"value":"/ The F2 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343812,"byte_end":343826,"line_start":184,"line_end":184,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3161},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343915,"byte_end":343917,"line_start":187,"line_end":187,"column_start":15,"column_end":17},"name":"F3","qualname":"::window::keyboard::Key::F3","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F3 key\n","sig":null,"attributes":[{"value":"/ The F3 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343886,"byte_end":343900,"line_start":186,"line_end":186,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3162},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343989,"byte_end":343991,"line_start":189,"line_end":189,"column_start":15,"column_end":17},"name":"F4","qualname":"::window::keyboard::Key::F4","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F4 key\n","sig":null,"attributes":[{"value":"/ The F4 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":343960,"byte_end":343974,"line_start":188,"line_end":188,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3163},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344063,"byte_end":344065,"line_start":191,"line_end":191,"column_start":15,"column_end":17},"name":"F5","qualname":"::window::keyboard::Key::F5","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F5 key\n","sig":null,"attributes":[{"value":"/ The F5 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344034,"byte_end":344048,"line_start":190,"line_end":190,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3164},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344137,"byte_end":344139,"line_start":193,"line_end":193,"column_start":15,"column_end":17},"name":"F6","qualname":"::window::keyboard::Key::F6","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F6 key\n","sig":null,"attributes":[{"value":"/ The F6 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344108,"byte_end":344122,"line_start":192,"line_end":192,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3165},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344211,"byte_end":344213,"line_start":195,"line_end":195,"column_start":15,"column_end":17},"name":"F7","qualname":"::window::keyboard::Key::F7","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F7 key\n","sig":null,"attributes":[{"value":"/ The F7 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344182,"byte_end":344196,"line_start":194,"line_end":194,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3166},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344285,"byte_end":344287,"line_start":197,"line_end":197,"column_start":15,"column_end":17},"name":"F8","qualname":"::window::keyboard::Key::F8","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F8 key\n","sig":null,"attributes":[{"value":"/ The F8 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344256,"byte_end":344270,"line_start":196,"line_end":196,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3167},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344359,"byte_end":344361,"line_start":199,"line_end":199,"column_start":15,"column_end":17},"name":"F9","qualname":"::window::keyboard::Key::F9","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F9 key\n","sig":null,"attributes":[{"value":"/ The F9 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344330,"byte_end":344344,"line_start":198,"line_end":198,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":3168},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344434,"byte_end":344437,"line_start":201,"line_end":201,"column_start":15,"column_end":18},"name":"F10","qualname":"::window::keyboard::Key::F10","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F10 key\n","sig":null,"attributes":[{"value":"/ The F10 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344404,"byte_end":344419,"line_start":200,"line_end":200,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3169},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344511,"byte_end":344514,"line_start":203,"line_end":203,"column_start":15,"column_end":18},"name":"F11","qualname":"::window::keyboard::Key::F11","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F11 key\n","sig":null,"attributes":[{"value":"/ The F11 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344481,"byte_end":344496,"line_start":202,"line_end":202,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3170},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344588,"byte_end":344591,"line_start":205,"line_end":205,"column_start":15,"column_end":18},"name":"F12","qualname":"::window::keyboard::Key::F12","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F12 key\n","sig":null,"attributes":[{"value":"/ The F12 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344558,"byte_end":344573,"line_start":204,"line_end":204,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3171},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344665,"byte_end":344668,"line_start":207,"line_end":207,"column_start":15,"column_end":18},"name":"F13","qualname":"::window::keyboard::Key::F13","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F13 key\n","sig":null,"attributes":[{"value":"/ The F13 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344635,"byte_end":344650,"line_start":206,"line_end":206,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3172},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344742,"byte_end":344745,"line_start":209,"line_end":209,"column_start":15,"column_end":18},"name":"F14","qualname":"::window::keyboard::Key::F14","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F14 key\n","sig":null,"attributes":[{"value":"/ The F14 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344712,"byte_end":344727,"line_start":208,"line_end":208,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3173},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344819,"byte_end":344822,"line_start":211,"line_end":211,"column_start":15,"column_end":18},"name":"F15","qualname":"::window::keyboard::Key::F15","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The F15 key\n","sig":null,"attributes":[{"value":"/ The F15 key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344789,"byte_end":344804,"line_start":210,"line_end":210,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3174},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344898,"byte_end":344903,"line_start":213,"line_end":213,"column_start":15,"column_end":20},"name":"PAUSE","qualname":"::window::keyboard::Key::PAUSE","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The Pause key\n","sig":null,"attributes":[{"value":"/ The Pause key","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344866,"byte_end":344883,"line_start":212,"line_end":212,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":3175},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345001,"byte_end":345006,"line_start":215,"line_end":215,"column_start":15,"column_end":20},"name":"COUNT","qualname":"::window::keyboard::Key::COUNT","value":"Self","parent":{"krate":0,"index":3072},"children":[],"decl_id":null,"docs":" The total number of keyboard keys\n","sig":null,"attributes":[{"value":"/ The total number of keyboard keys","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":344949,"byte_end":344986,"line_start":214,"line_end":214,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345321,"byte_end":345331,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"is_pressed","qualname":"<Key>::is_pressed","value":"pub fn is_pressed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether this key is currently pressed.","sig":null,"attributes":[{"value":"/ Return whether this key is currently pressed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345066,"byte_end":345115,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345120,"byte_end":345123,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Queries the real-time state of the keyboard, even if keys have been","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345128,"byte_end":345199,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ pressed or released while no window was focused and no events were","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345204,"byte_end":345274,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ triggered.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345279,"byte_end":345293,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345298,"byte_end":345309,"line_start":224,"line_end":224,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":3178},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345779,"byte_end":345807,"line_start":238,"line_end":238,"column_start":8,"column_end":36},"name":"set_virtual_keyboard_visible","qualname":"::window::keyboard::set_virtual_keyboard_visible","value":"pub fn set_virtual_keyboard_visible(bool)","parent":null,"children":[],"decl_id":null,"docs":" Show or hide the virtual keyboard.","sig":null,"attributes":[{"value":"/ Show or hide the virtual keyboard.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345470,"byte_end":345508,"line_start":232,"line_end":232,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345509,"byte_end":345512,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Warning: the virtual keyboard is not supported on all systems. It will typically be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345513,"byte_end":345600,"line_start":234,"line_end":234,"column_start":1,"column_end":88}},{"value":"/ implemented on mobile OSes (Android, iOS) but not on desktop OSes (Windows, Linux, ...).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345601,"byte_end":345693,"line_start":235,"line_end":235,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345694,"byte_end":345697,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ If the virtual keyboard is not available, this function does nothing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345698,"byte_end":345771,"line_start":237,"line_end":237,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":3179},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mouse","qualname":"::window::mouse","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3184},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":4284},{"krate":0,"index":4287},{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4296},{"krate":0,"index":4298},{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":3193},{"krate":0,"index":4303},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4318},{"krate":0,"index":4320},{"krate":0,"index":4322},{"krate":0,"index":3200},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":3205}],"decl_id":null,"docs":" Access to the real-time state of the mouse.","sig":null,"attributes":[{"value":"/ Access to the real-time state of the mouse.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":345916,"byte_end":345963,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":345964,"byte_end":345967,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `mouse` provides an interface to the state of the mouse.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":345968,"byte_end":346028,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346029,"byte_end":346032,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module allows users to query the mouse state at any time and directly, without having to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346033,"byte_end":346130,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ deal with a window and its events. Compared to the [`MouseMoved`], [`MouseButtonPressed`] and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346131,"byte_end":346228,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ [`MouseButtonReleased`] events, `mouse` can retrieve the state of the cursor and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346229,"byte_end":346313,"line_start":7,"line_end":7,"column_start":1,"column_end":85}},{"value":"/ the buttons at any time (you don't need to store and update a boolean on your side in order to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346314,"byte_end":346412,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ know if a button is pressed or released), and you always get the real state of the mouse, even","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346413,"byte_end":346511,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ if it is moved, pressed or released when your window is out of focus and no event is triggered.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346512,"byte_end":346611,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346612,"byte_end":346615,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`MouseMoved`]: crate::window::Event::MouseMoved","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346616,"byte_end":346668,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ [`MouseButtonPressed`]: crate::window::Event::MouseButtonPressed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346669,"byte_end":346737,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ [`MouseButtonReleased`]: crate::window::Event::MouseButtonReleased","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346738,"byte_end":346808,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346809,"byte_end":346812,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346813,"byte_end":346832,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346833,"byte_end":346836,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346837,"byte_end":346850,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ use sfml::window::{Window, mouse};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346851,"byte_end":346889,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ use sfml::system::Vector2i;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346890,"byte_end":346921,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346922,"byte_end":346925,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # let window: Window = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346926,"byte_end":346970,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346971,"byte_end":346974,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ if mouse::Button::LEFT.is_pressed() {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":346975,"byte_end":347016,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/     // left click","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347017,"byte_end":347038,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347039,"byte_end":347044,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347045,"byte_end":347048,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // get global mouse position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347049,"byte_end":347081,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ let _position = mouse::desktop_position();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347082,"byte_end":347128,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347129,"byte_end":347132,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // set mouse position relative to a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347133,"byte_end":347179,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/ window.set_mouse_position(Vector2i::new(100, 200));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347180,"byte_end":347235,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347236,"byte_end":347243,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4284},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347466,"byte_end":347472,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"Button","qualname":"::window::mouse::Button","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mouse buttons.\n","sig":null,"attributes":[{"value":"/ Mouse buttons.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347353,"byte_end":347371,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347434,"byte_end":347454,"line_start":40,"line_end":40,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":3194},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347565,"byte_end":347569,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"name":"LEFT","qualname":"::window::mouse::Button::LEFT","value":"Self","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" The left mouse button.\n","sig":null,"attributes":[{"value":"/ The left mouse button.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347524,"byte_end":347550,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":3195},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347662,"byte_end":347667,"line_start":47,"line_end":47,"column_start":15,"column_end":20},"name":"RIGHT","qualname":"::window::mouse::Button::RIGHT","value":"Self","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" The right mouse button.\n","sig":null,"attributes":[{"value":"/ The right mouse button.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347620,"byte_end":347647,"line_start":46,"line_end":46,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":3196},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347770,"byte_end":347776,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"name":"MIDDLE","qualname":"::window::mouse::Button::MIDDLE","value":"Self","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" The middle (wheel) mouse button.\n","sig":null,"attributes":[{"value":"/ The middle (wheel) mouse button.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347719,"byte_end":347755,"line_start":48,"line_end":48,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":3197},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347877,"byte_end":347887,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"name":"X_BUTTON_1","qualname":"::window::mouse::Button::X_BUTTON_1","value":"Self","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" The first extra mouse button.\n","sig":null,"attributes":[{"value":"/ The first extra mouse button.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347829,"byte_end":347862,"line_start":50,"line_end":50,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":3198},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347991,"byte_end":348001,"line_start":53,"line_end":53,"column_start":15,"column_end":25},"name":"X_BUTTON_2","qualname":"::window::mouse::Button::X_BUTTON_2","value":"Self","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" The second extra mouse button.\n","sig":null,"attributes":[{"value":"/ The second extra mouse button.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347942,"byte_end":347976,"line_start":52,"line_end":52,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":3199},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348109,"byte_end":348114,"line_start":55,"line_end":55,"column_start":15,"column_end":20},"name":"COUNT","qualname":"::window::mouse::Button::COUNT","value":"ffi::sfMouseButton","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" The total number of mouse buttons.\n","sig":null,"attributes":[{"value":"/ The total number of mouse buttons.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348056,"byte_end":348094,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4304},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348314,"byte_end":348322,"line_start":62,"line_end":62,"column_start":5,"column_end":13},"name":"Vertical","qualname":"::window::mouse::Wheel::Vertical","value":"Wheel::Vertical","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":" The vertical mouse wheel.\n","sig":null,"attributes":[{"value":"/ The vertical mouse wheel.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348280,"byte_end":348309,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4306},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348364,"byte_end":348374,"line_start":64,"line_end":64,"column_start":5,"column_end":15},"name":"Horizontal","qualname":"::window::mouse::Wheel::Horizontal","value":"Wheel::Horizontal","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":" The horizontal mouse wheel.\n","sig":null,"attributes":[{"value":"/ The horizontal mouse wheel.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348328,"byte_end":348359,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":4303},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348268,"byte_end":348273,"line_start":60,"line_end":60,"column_start":10,"column_end":15},"name":"Wheel","qualname":"::window::mouse::Wheel","value":"pub enum Wheel { Vertical, Horizontal, }","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4306}],"decl_id":null,"docs":" Mouse wheels.\n","sig":null,"attributes":[{"value":"/ Mouse wheels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348241,"byte_end":348258,"line_start":59,"line_end":59,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348953,"byte_end":348963,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_pressed","qualname":"<Button>::is_pressed","value":"pub fn is_pressed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether this mouse button is currently pressed.","sig":null,"attributes":[{"value":"/ Return whether this mouse button is currently pressed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348689,"byte_end":348747,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348752,"byte_end":348755,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Queries the real-time state of the mouse, even if buttons have been","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348760,"byte_end":348831,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ pressed or released while no window was focused and no events were","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348836,"byte_end":348906,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ triggered.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348911,"byte_end":348925,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348930,"byte_end":348941,"line_start":83,"line_end":83,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":3204},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349273,"byte_end":349289,"line_start":95,"line_end":95,"column_start":8,"column_end":24},"name":"desktop_position","qualname":"::window::mouse::desktop_position","value":"pub fn desktop_position() -> Vector2i","parent":null,"children":[],"decl_id":null,"docs":" Get the current position of the mouse in desktop coordinates.","sig":null,"attributes":[{"value":"/ Get the current position of the mouse in desktop coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349102,"byte_end":349167,"line_start":91,"line_end":91,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349168,"byte_end":349171,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This function returns the global position of the mouse cursor on the desktop.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349172,"byte_end":349253,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349254,"byte_end":349265,"line_start":94,"line_end":94,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3205},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349543,"byte_end":349563,"line_start":102,"line_end":102,"column_start":8,"column_end":28},"name":"set_desktop_position","qualname":"::window::mouse::set_desktop_position","value":"pub fn set_desktop_position(Vector2i)","parent":null,"children":[],"decl_id":null,"docs":" Set the current position of the mouse in desktop coordinates.","sig":null,"attributes":[{"value":"/ Set the current position of the mouse in desktop coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349387,"byte_end":349452,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349453,"byte_end":349456,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This function sets the global position of the mouse cursor on the desktop.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":349457,"byte_end":349535,"line_start":101,"line_end":101,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":3206},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sensor","qualname":"::window::sensor","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4329},{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4340},{"krate":0,"index":3218}],"decl_id":null,"docs":" Access to the real-time state of the sensors.","sig":null,"attributes":[{"value":"/ Access to the real-time state of the sensors.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":349663,"byte_end":349712,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":349713,"byte_end":349716,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `sensor` provides an interface to the state of the various sensors that a device provides.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":349717,"byte_end":349811,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":349812,"byte_end":349815,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module allows users to query the sensors values at any time and directly, without having","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":349816,"byte_end":349913,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ to deal with a window and its events. Compared to the [`SensorChanged`] event, `sensor` can","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":349914,"byte_end":350009,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ retrieve the state of a sensor at any time (you don't need to store and update its current","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350010,"byte_end":350104,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ value on your side).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350105,"byte_end":350129,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350130,"byte_end":350133,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`SensorChanged`]: crate::window::Event::SensorChanged","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350134,"byte_end":350192,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350193,"byte_end":350196,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Depending on the OS and hardware of the device (phone, tablet, ...), some sensor types may","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350197,"byte_end":350291,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ not be available. You should always check the availability of a sensor before trying to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350292,"byte_end":350383,"line_start":13,"line_end":13,"column_start":1,"column_end":92}},{"value":"/ read it, with the [`is_available`] function.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350384,"byte_end":350432,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350433,"byte_end":350436,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ You may wonder why some sensor types look so similar, for example [`ACCELEROMETER`] and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350437,"byte_end":350528,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ [`GRAVITY`] / [`USER_ACCELERATION`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350529,"byte_end":350569,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ The first one is the raw measurement of the acceleration,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350570,"byte_end":350631,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/ and takes into account both the earth gravity and the user movement. The others are more","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350632,"byte_end":350724,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ precise: they provide these components separately, which is usually more useful.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350725,"byte_end":350809,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ In fact they are not direct sensors, they are computed internally based on the raw acceleration","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350810,"byte_end":350909,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ and other sensors. This is exactly the same for [`GYROSCOPE`] vs [`ORIENTATION`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350910,"byte_end":350995,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":350996,"byte_end":350999,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Because sensors consume a non-negligible amount of current, they are all disabled by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351000,"byte_end":351097,"line_start":24,"line_end":24,"column_start":1,"column_end":98}},{"value":"/ You must call [`set_enabled`] for each sensor in which you are interested.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351098,"byte_end":351176,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351177,"byte_end":351180,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351181,"byte_end":351200,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351201,"byte_end":351204,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351205,"byte_end":351212,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use sfml::window::sensor;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351213,"byte_end":351242,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351243,"byte_end":351246,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ if sensor::is_available(sensor::Type::GRAVITY) {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351247,"byte_end":351299,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/     // enable the gravity sensor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351300,"byte_end":351336,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/     sensor::set_enabled(sensor::Type::GRAVITY, true);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351337,"byte_end":351394,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/     // get the current value of gravity","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351395,"byte_end":351438,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/     let _gravity = sensor::value(sensor::Type::GRAVITY);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351439,"byte_end":351499,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351500,"byte_end":351505,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351506,"byte_end":351513,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351514,"byte_end":351517,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`is_available`]: is_available","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351518,"byte_end":351552,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/ [`set_enabled`]: set_enabled","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351553,"byte_end":351585,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/ [`ACCELEROMETER`]: Type::ACCELEROMETER","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351586,"byte_end":351628,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ [`GRAVITY`]: Type::GRAVITY","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351629,"byte_end":351659,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ [`USER_ACCELERATION`]: Type::USER_ACCELERATION","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351660,"byte_end":351710,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ [`GYROSCOPE`]: Type::GYROSCOPE","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351711,"byte_end":351745,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/ [`ORIENTATION`]: Type::ORIENTATION","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351746,"byte_end":351784,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351785,"byte_end":351788,"line_start":47,"line_end":47,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":3215},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351924,"byte_end":351929,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"value","qualname":"::window::sensor::value","value":"pub fn value(Type) -> Vector3f","parent":null,"children":[],"decl_id":null,"docs":" Get the current sensor value.\n","sig":null,"attributes":[{"value":"/ Get the current sensor value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351871,"byte_end":351904,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":351905,"byte_end":351916,"line_start":53,"line_end":53,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3216},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352106,"byte_end":352118,"line_start":60,"line_end":60,"column_start":8,"column_end":20},"name":"is_available","qualname":"::window::sensor::is_available","value":"pub fn is_available(Type) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a sensor is available on the underlying platform.\n","sig":null,"attributes":[{"value":"/ Check if a sensor is available on the underlying platform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352024,"byte_end":352086,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352087,"byte_end":352098,"line_start":59,"line_end":59,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3217},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352478,"byte_end":352489,"line_start":70,"line_end":70,"column_start":8,"column_end":19},"name":"set_enabled","qualname":"::window::sensor::set_enabled","value":"pub fn set_enabled(Type, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable a sensor.","sig":null,"attributes":[{"value":"/ Enable or disable a sensor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352204,"byte_end":352235,"line_start":64,"line_end":64,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352236,"byte_end":352239,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ All sensors are disabled by default, to avoid consuming too much battery power.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352240,"byte_end":352323,"line_start":66,"line_end":66,"column_start":1,"column_end":84}},{"value":"/ Once a sensor is enabled, it starts sending events of the corresponding type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352324,"byte_end":352405,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352406,"byte_end":352409,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This function does nothing if the sensor is unavailable.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352410,"byte_end":352470,"line_start":69,"line_end":69,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":4323},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352711,"byte_end":352715,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"Type","qualname":"::window::sensor::Type","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sensor type.\n","sig":null,"attributes":[{"value":"/ Sensor type.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352600,"byte_end":352616,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"repr(transparent)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352679,"byte_end":352699,"line_start":76,"line_end":76,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":3219},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352817,"byte_end":352830,"line_start":81,"line_end":81,"column_start":15,"column_end":28},"name":"ACCELEROMETER","qualname":"::window::sensor::Type::ACCELEROMETER","value":"Self","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Measures the raw acceleration (`m/s^2`)\n","sig":null,"attributes":[{"value":"/ Measures the raw acceleration (`m/s^2`)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352759,"byte_end":352802,"line_start":80,"line_end":80,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":3220},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352947,"byte_end":352956,"line_start":83,"line_end":83,"column_start":15,"column_end":24},"name":"GYROSCOPE","qualname":"::window::sensor::Type::GYROSCOPE","value":"Self","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Measures the raw rotation rates (degrees/s)\n","sig":null,"attributes":[{"value":"/ Measures the raw rotation rates (degrees/s)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352885,"byte_end":352932,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":3221},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353076,"byte_end":353088,"line_start":85,"line_end":85,"column_start":15,"column_end":27},"name":"MAGNETOMETER","qualname":"::window::sensor::Type::MAGNETOMETER","value":"Self","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Measures the ambient magnetic field (micro-teslas)\n","sig":null,"attributes":[{"value":"/ Measures the ambient magnetic field (micro-teslas)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353007,"byte_end":353061,"line_start":84,"line_end":84,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":3222},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353262,"byte_end":353269,"line_start":88,"line_end":88,"column_start":15,"column_end":22},"name":"GRAVITY","qualname":"::window::sensor::Type::GRAVITY","value":"Self","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Measures the direction and intensity of gravity,\n independent of device acceleration (`m/s^2`)\n","sig":null,"attributes":[{"value":"/ Measures the direction and intensity of gravity,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353142,"byte_end":353194,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/ independent of device acceleration (`m/s^2`)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353199,"byte_end":353247,"line_start":87,"line_end":87,"column_start":5,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":3223},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353442,"byte_end":353459,"line_start":91,"line_end":91,"column_start":15,"column_end":32},"name":"USER_ACCELERATION","qualname":"::window::sensor::Type::USER_ACCELERATION","value":"Self","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Measures the direction and intensity of device acceleration,\n independent of the gravity (`m/s^2`)\n","sig":null,"attributes":[{"value":"/ Measures the direction and intensity of device acceleration,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353318,"byte_end":353382,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ independent of the gravity (`m/s^2`)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353387,"byte_end":353427,"line_start":90,"line_end":90,"column_start":5,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":3224},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353582,"byte_end":353593,"line_start":93,"line_end":93,"column_start":15,"column_end":26},"name":"ORIENTATION","qualname":"::window::sensor::Type::ORIENTATION","value":"Self","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Measures the absolute 3D orientation (degrees)\n","sig":null,"attributes":[{"value":"/ Measures the absolute 3D orientation (degrees)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353517,"byte_end":353567,"line_start":92,"line_end":92,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":3225},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353698,"byte_end":353703,"line_start":95,"line_end":95,"column_start":15,"column_end":20},"name":"COUNT","qualname":"::window::sensor::Type::COUNT","value":"sfSensorType","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" The total number of sensor types.\n","sig":null,"attributes":[{"value":"/ The total number of sensor types.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":353646,"byte_end":353683,"line_start":94,"line_end":94,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4342},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":353896,"byte_end":353901,"line_start":6,"line_end":6,"column_start":16,"column_end":21},"name":"Style","qualname":"::window::style::Style","value":"Style {  }","parent":null,"children":[{"krate":0,"index":4343}],"decl_id":null,"docs":" Available styles applicable to windows.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":13533743,"byte_end":13533752,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":4380},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":353989,"byte_end":353993,"line_start":8,"line_end":8,"column_start":15,"column_end":19},"name":"NONE","qualname":"::window::style::Style::NONE","value":"Self","parent":{"krate":0,"index":4379},"children":[],"decl_id":null,"docs":" No decorations (cannot be combined with other flags).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4381},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":354053,"byte_end":354061,"line_start":10,"line_end":10,"column_start":15,"column_end":23},"name":"TITLEBAR","qualname":"::window::style::Style::TITLEBAR","value":"Self","parent":{"krate":0,"index":4379},"children":[],"decl_id":null,"docs":" Title bar and fixed border.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4382},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":354143,"byte_end":354149,"line_start":12,"line_end":12,"column_start":15,"column_end":21},"name":"RESIZE","qualname":"::window::style::Style::RESIZE","value":"Self","parent":{"krate":0,"index":4379},"children":[],"decl_id":null,"docs":" Title bar, resizable border, and maximize button.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4383},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":354209,"byte_end":354214,"line_start":14,"line_end":14,"column_start":15,"column_end":20},"name":"CLOSE","qualname":"::window::style::Style::CLOSE","value":"Self","parent":{"krate":0,"index":4379},"children":[],"decl_id":null,"docs":" Title bar and close button.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4384},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":354285,"byte_end":354295,"line_start":16,"line_end":16,"column_start":15,"column_end":25},"name":"FULLSCREEN","qualname":"::window::style::Style::FULLSCREEN","value":"Self","parent":{"krate":0,"index":4379},"children":[],"decl_id":null,"docs":" Fullscreen mode (ignores other flags).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4385},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":354396,"byte_end":354403,"line_start":18,"line_end":18,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::window::style::Style::DEFAULT","value":"Self","parent":{"krate":0,"index":4379},"children":[],"decl_id":null,"docs":" Default window style: title bar, resizable border, and close button.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3242},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"touch","qualname":"::window::touch","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252}],"decl_id":null,"docs":" Access to the real-time state of the touches.","sig":null,"attributes":[{"value":"/ Access to the real-time state of the touches.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355175,"byte_end":355224,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355225,"byte_end":355228,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Touch` provides an interface to the state of the touches.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355229,"byte_end":355291,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355292,"byte_end":355295,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module allows users to query the touches state at any time and directly,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355296,"byte_end":355377,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ without having to deal with a window and its events.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355378,"byte_end":355434,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/ Compared to the [`TouchBegan`], [`TouchMoved`] and [`TouchEnded`] events,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355435,"byte_end":355512,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ `touch` can retrieve the state of the touches at any time","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355513,"byte_end":355574,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ (you don't need to store and update a boolean on your side in","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355575,"byte_end":355640,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/ order to know if a touch is down), and you always get the real state of the touches,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355641,"byte_end":355729,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ even if they happen when your window is out of focus and no event is triggered.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355730,"byte_end":355813,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355814,"byte_end":355817,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`TouchBegan`]: crate::window::Event::TouchBegan","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355818,"byte_end":355870,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`TouchMoved`]: crate::window::Event::TouchMoved","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355871,"byte_end":355923,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/ [`TouchEnded`]: crate::window::Event::TouchEnded","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355924,"byte_end":355976,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355977,"byte_end":355980,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ There are two functions that can be used to retrieve the current position of a touch.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":355981,"byte_end":356070,"line_start":17,"line_end":17,"column_start":1,"column_end":90}},{"value":"/ 1. [`desktop_position`]: operates in global coordinates (relative to the desktop)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356071,"byte_end":356156,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/ 2. [`Window::touch_position`]: operates in window coordinates","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356157,"byte_end":356222,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ (relative to a specific window).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356223,"byte_end":356259,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356260,"byte_end":356263,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Touches are identified by an index (the \"finger\"), so that in multi-touch events, individual","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356264,"byte_end":356360,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ touches can be tracked correctly. As long as a finger touches the screen, it will keep the same","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356361,"byte_end":356460,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ index even if other fingers start or stop touching the screen in the meantime.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356461,"byte_end":356543,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"/ As a consequence, active touch indices may not always be sequential","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356544,"byte_end":356615,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ (i.e. touch number 0 may be released while touch number 1 is still down).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356616,"byte_end":356693,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356694,"byte_end":356697,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356698,"byte_end":356717,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356718,"byte_end":356731,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ use sfml::window::{Window, touch};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356732,"byte_end":356770,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356771,"byte_end":356774,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # let window: Window = unimplemented!();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356775,"byte_end":356819,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356820,"byte_end":356823,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ if touch::is_down(0) {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356824,"byte_end":356850,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/     // touch 0 is down","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356851,"byte_end":356877,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356878,"byte_end":356883,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356884,"byte_end":356887,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // get global position of touch 1","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356888,"byte_end":356925,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ let _global_pos = touch::desktop_position(1);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356926,"byte_end":356975,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356976,"byte_end":356979,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // get position of touch 1 relative to a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":356980,"byte_end":357031,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"/ let _relative_pos = window.touch_position(1);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357032,"byte_end":357081,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357082,"byte_end":357089,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357090,"byte_end":357093,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`desktop_position`]: desktop_position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357094,"byte_end":357136,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ [`Window::touch_position`]: crate::window::Window::touch_position","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357137,"byte_end":357206,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357207,"byte_end":357210,"line_start":47,"line_end":47,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":3251},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357358,"byte_end":357365,"line_start":54,"line_end":54,"column_start":8,"column_end":15},"name":"is_down","qualname":"::window::touch::is_down","value":"pub fn is_down(u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a touch event is currently down.\n","sig":null,"attributes":[{"value":"/ Check if a touch event is currently down.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357293,"byte_end":357338,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357339,"byte_end":357350,"line_start":53,"line_end":53,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3252},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357615,"byte_end":357631,"line_start":62,"line_end":62,"column_start":8,"column_end":24},"name":"desktop_position","qualname":"::window::touch::desktop_position","value":"pub fn desktop_position(u32) -> Vector2i","parent":null,"children":[],"decl_id":null,"docs":" Get the current position of a touch in desktop coordinates.","sig":null,"attributes":[{"value":"/ Get the current position of a touch in desktop coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357442,"byte_end":357505,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357506,"byte_end":357509,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function returns the current touch position in global (desktop) coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357510,"byte_end":357595,"line_start":60,"line_end":60,"column_start":1,"column_end":86}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/touch.rs","byte_start":357596,"byte_end":357607,"line_start":61,"line_end":61,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4454},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359634,"byte_end":359643,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"VideoMode","qualname":"::window::video_mode::VideoMode","value":"VideoMode { width, height, bits_per_pixel }","parent":null,"children":[{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457}],"decl_id":null,"docs":" `VideoMode` defines a video mode (width, height, bpp)","sig":null,"attributes":[{"value":"/ `VideoMode` defines a video mode (width, height, bpp)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":357833,"byte_end":357890,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":357891,"byte_end":357894,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A video mode is defined by a width and a height (in pixels) and a depth (in bits per pixel).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":357895,"byte_end":357991,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":357992,"byte_end":357995,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Video modes are used to setup windows at creation time.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":357996,"byte_end":358055,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358056,"byte_end":358059,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The main usage of video modes is for fullscreen mode: indeed you must use one of the valid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358060,"byte_end":358154,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ video modes allowed by the OS (which are defined by what the monitor and","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358155,"byte_end":358231,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ the graphics card support), otherwise your window creation will just fail.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358232,"byte_end":358310,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358311,"byte_end":358314,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `VideoMode` provides an associated function for retrieving the list of all the video modes","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358315,"byte_end":358409,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ supported by the system: [`VideoMode::fullscreen_modes`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358410,"byte_end":358471,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358472,"byte_end":358475,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A custom video mode can also be checked directly for fullscreen compatibility","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358476,"byte_end":358557,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ with its [`VideoMode::is_valid`] function.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358558,"byte_end":358604,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358605,"byte_end":358608,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Additionally, `VideoMode` provides a static function to get the mode currently used by","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358609,"byte_end":358699,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ the desktop: [`VideoMode::desktop_mode`]. This allows to build windows with the same size or","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358700,"byte_end":358796,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"/ pixel depth as the current resolution.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358797,"byte_end":358839,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358840,"byte_end":358843,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358844,"byte_end":358863,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358864,"byte_end":358867,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ use sfml::window::{VideoMode, Window, Style};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":358979,"byte_end":359028,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359029,"byte_end":359032,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Display the list of all the video modes available for fullscreen","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359033,"byte_end":359104,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ let modes = VideoMode::fullscreen_modes();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359105,"byte_end":359151,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359152,"byte_end":359155,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ for mode in modes {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359156,"byte_end":359179,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", mode);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359180,"byte_end":359211,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359212,"byte_end":359217,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359218,"byte_end":359221,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a window with the same pixel depth as the desktop","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359222,"byte_end":359285,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/ let desktop = VideoMode::desktop_mode();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359286,"byte_end":359330,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ let _window = Window::new(VideoMode::new(1024, 768, desktop.bits_per_pixel),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359331,"byte_end":359411,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/                           \"SFML window\",","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359412,"byte_end":359456,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/                           Style::CLOSE,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359457,"byte_end":359500,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/                           &Default::default());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359501,"byte_end":359552,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359553,"byte_end":359560,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":4455},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359691,"byte_end":359696,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"width","qualname":"::window::video_mode::VideoMode::width","value":"u32","parent":{"krate":0,"index":4454},"children":[],"decl_id":null,"docs":" Video mode width, in pixels.\n","sig":null,"attributes":[{"value":"/ Video mode width, in pixels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359650,"byte_end":359682,"line_start":46,"line_end":46,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4456},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359749,"byte_end":359755,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"height","qualname":"::window::video_mode::VideoMode::height","value":"u32","parent":{"krate":0,"index":4454},"children":[],"decl_id":null,"docs":" Video mode height, in pixels.\n","sig":null,"attributes":[{"value":"/ Video mode height, in pixels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359707,"byte_end":359740,"line_start":48,"line_end":48,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4457},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359822,"byte_end":359836,"line_start":51,"line_end":51,"column_start":9,"column_end":23},"name":"bits_per_pixel","qualname":"::window::video_mode::VideoMode::bits_per_pixel","value":"u32","parent":{"krate":0,"index":4454},"children":[],"decl_id":null,"docs":" Video mode pixel depth, in bits per pixels.\n","sig":null,"attributes":[{"value":"/ Video mode pixel depth, in bits per pixels.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359766,"byte_end":359813,"line_start":50,"line_end":50,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359960,"byte_end":359963,"line_start":57,"line_end":57,"column_start":18,"column_end":21},"name":"new","qualname":"<VideoMode>::new","value":"pub const fn new(u32, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `VideoMode` from the given parameters.\n","sig":null,"attributes":[{"value":"/ Constructs a new `VideoMode` from the given parameters.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359867,"byte_end":359926,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359931,"byte_end":359942,"line_start":56,"line_end":56,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360437,"byte_end":360445,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<VideoMode>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not a video mode is valid","sig":null,"attributes":[{"value":"/ Tell whether or not a video mode is valid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360123,"byte_end":360168,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360173,"byte_end":360176,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The validity of video modes is only relevant when using","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360181,"byte_end":360240,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"/ fullscreen windows; otherwise any video mode can be used","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360245,"byte_end":360305,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/ with no restriction.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360310,"byte_end":360334,"line_start":69,"line_end":69,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360339,"byte_end":360342,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ return true if the video mode is valid for fullscreen mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360347,"byte_end":360409,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360414,"byte_end":360425,"line_start":72,"line_end":72,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360676,"byte_end":360688,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"desktop_mode","qualname":"<VideoMode>::desktop_mode","value":"pub fn desktop_mode() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Static Method, get the current desktop video mode","sig":null,"attributes":[{"value":"/ Static Method, get the current desktop video mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360542,"byte_end":360595,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360600,"byte_end":360603,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ return the urrent desktop video mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360608,"byte_end":360648,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360653,"byte_end":360664,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361451,"byte_end":361467,"line_start":99,"line_end":99,"column_start":12,"column_end":28},"name":"fullscreen_modes","qualname":"<VideoMode>::fullscreen_modes","value":"pub fn fullscreen_modes() -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Static Method, retrieve all the video modes supported in fullscreen mode","sig":null,"attributes":[{"value":"/ Static Method, retrieve all the video modes supported in fullscreen mode","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360826,"byte_end":360902,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360907,"byte_end":360910,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When creating a fullscreen window, the video mode is restricted","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360915,"byte_end":360982,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/ to be compatible with what the graphics driver and monitor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":360987,"byte_end":361049,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ support. This function returns the complete list of all video","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361054,"byte_end":361119,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"/ modes that can be used in fullscreen mode.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361124,"byte_end":361170,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ The returned array is sorted from best to worst, so that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361175,"byte_end":361235,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/ the first element will always give the best mode (higher","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361240,"byte_end":361300,"line_start":94,"line_end":94,"column_start":5,"column_end":65}},{"value":"/ `width`, `height` and `bits_per_pixel`).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361305,"byte_end":361349,"line_start":95,"line_end":95,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361354,"byte_end":361357,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Return a vector containing all the supported `VideoMode`s","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361362,"byte_end":361423,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":361428,"byte_end":361439,"line_start":98,"line_end":98,"column_start":5,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":3315},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":362893,"byte_end":362899,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Handle","qualname":"::window::window::Handle","value":"ffi::sfWindowHandle","parent":null,"children":[],"decl_id":null,"docs":" The system native window handle type. Can be used to create an SFML Window\n from an existing system window.\n","sig":null,"attributes":[{"value":"/ The system native window handle type. Can be used to create an SFML Window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":362769,"byte_end":362847,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ from an existing system window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":362848,"byte_end":362883,"line_start":10,"line_end":10,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4474},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364658,"byte_end":364664,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Window","qualname":"::window::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":4475}],"decl_id":null,"docs":" Window that serves as a target for OpenGL rendering.","sig":null,"attributes":[{"value":"/ Window that serves as a target for OpenGL rendering.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":362924,"byte_end":362980,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":362981,"byte_end":362984,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Window` is the main type of the window module.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":362985,"byte_end":363036,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363037,"byte_end":363040,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ It defines an OS window that is able to receive an OpenGL rendering.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363041,"byte_end":363113,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363114,"byte_end":363117,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `Window` type provides a simple interface for manipulating the window:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363118,"byte_end":363196,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ move, resize, show/hide, control mouse cursor, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363197,"byte_end":363252,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ It also provides event handling through [`Window::poll_event`] and [`Window::wait_event`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363253,"byte_end":363347,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363348,"byte_end":363351,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that OpenGL experts can pass their own parameters","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363352,"byte_end":363410,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ (antialiasing level, bits for the depth and stencil buffers, etc.) to the OpenGL context","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363411,"byte_end":363503,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ attached to the window, with the [`ContextSettings`] structure which is passed as an","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363504,"byte_end":363592,"line_start":25,"line_end":25,"column_start":1,"column_end":89}},{"value":"/ optional argument when creating the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363593,"byte_end":363640,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363641,"byte_end":363644,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363645,"byte_end":363664,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363665,"byte_end":363668,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363669,"byte_end":363682,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ use sfml::window::{Window, Event, Style};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363683,"byte_end":363728,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/ // Create a new window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363729,"byte_end":363755,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ let mut window = Window::new((800, 600),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363756,"byte_end":363800,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/                              \"SFML window\",","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363801,"byte_end":363848,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/                              Style::CLOSE,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363849,"byte_end":363895,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/                              &Default::default());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363896,"byte_end":363950,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/ // Limit the framerate to 60 frames per second (this step is optional)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":363951,"byte_end":364025,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ window.set_framerate_limit(60);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364026,"byte_end":364061,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364062,"byte_end":364065,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // The main loop - ends as soon as the window is closed","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364066,"byte_end":364125,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/ while window.is_open() {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364126,"byte_end":364154,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/     // Event processing","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364155,"byte_end":364182,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/     while let Some(event) = window.poll_event() {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364183,"byte_end":364236,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/         // Request closing for the window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364237,"byte_end":364282,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/         if event == Event::Closed {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364283,"byte_end":364322,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/             window.close();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364323,"byte_end":364354,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/         }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364355,"byte_end":364368,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364369,"byte_end":364378,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364379,"byte_end":364382,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // Activate the window for OpenGL rendering","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364383,"byte_end":364434,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/     window.set_active(true);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364435,"byte_end":364467,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364468,"byte_end":364471,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     // OpenGL drawing commands go here...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364472,"byte_end":364517,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364518,"byte_end":364521,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // End the current frame and display its contents on screen","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364522,"byte_end":364589,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/     window.display();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364590,"byte_end":364615,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364616,"byte_end":364621,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364622,"byte_end":364629,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365583,"byte_end":365586,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Window>::new","value":"pub fn new<V: Into<VideoMode>, S: SfStrConv>(V, S, Style, &ContextSettings)\n-> Window","parent":null,"children":[],"decl_id":null,"docs":" Construct a new window","sig":null,"attributes":[{"value":"/ Construct a new window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364720,"byte_end":364746,"line_start":65,"line_end":65,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364751,"byte_end":364754,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function creates the window with the size and pixel","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364759,"byte_end":364819,"line_start":67,"line_end":67,"column_start":5,"column_end":65}},{"value":"/ depth defined in mode. An optional style can be passed to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364824,"byte_end":364885,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/ customize the look and behaviour of the window (borders,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364890,"byte_end":364950,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"/ title bar, resizable, closable, ...). If style contains","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364955,"byte_end":365014,"line_start":70,"line_end":70,"column_start":5,"column_end":64}},{"value":"/ [`Style::FULLSCREEN`], then mode must be a valid video mode.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365019,"byte_end":365083,"line_start":71,"line_end":71,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365088,"byte_end":365091,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The fourth parameter is a pointer to a structure specifying","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365096,"byte_end":365159,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ advanced OpenGL context settings such as antialiasing,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365164,"byte_end":365222,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"/ depth-buffer bits, etc.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365227,"byte_end":365254,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365259,"byte_end":365262,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365267,"byte_end":365282,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/ * mode - Video mode to use (defines the width, height and depth of the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365287,"byte_end":365361,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/                             rendering area of the window)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365366,"byte_end":365427,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/ * title - Title of the window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365432,"byte_end":365465,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/ * style - Window style","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365470,"byte_end":365496,"line_start":81,"line_end":81,"column_start":5,"column_end":31}},{"value":"/ * settings - Additional settings for the underlying OpenGL context","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":365501,"byte_end":365571,"line_start":82,"line_end":82,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366933,"byte_end":366944,"line_start":121,"line_end":121,"column_start":19,"column_end":30},"name":"from_handle","qualname":"<Window>::from_handle","value":"pub unsafe fn from_handle(Handle, &ContextSettings) -> Window","parent":null,"children":[],"decl_id":null,"docs":" Create a window from an existing platform-specific window handle","sig":null,"attributes":[{"value":"/ Create a window from an existing platform-specific window handle","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366209,"byte_end":366277,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366282,"byte_end":366285,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This function creates a window based on an existing platform specific","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366290,"byte_end":366363,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ window handle which has been allocated outside of SFML. This is only","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366368,"byte_end":366440,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/ intended to be used in cases where you need to integrate SFML with some","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366445,"byte_end":366520,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ other windowing library.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366525,"byte_end":366553,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366558,"byte_end":366561,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366566,"byte_end":366578,"line_start":112,"line_end":112,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366583,"byte_end":366586,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to ensure that it is called with a valid window handle.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366591,"byte_end":366684,"line_start":114,"line_end":114,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366689,"byte_end":366692,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366697,"byte_end":366712,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/ * handle - The handle to the platform-specific window handle to use for","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366717,"byte_end":366792,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/            the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366797,"byte_end":366823,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ * settings - Additional settings for the underlying OpenGL context","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366828,"byte_end":366898,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":366903,"byte_end":366914,"line_start":120,"line_end":120,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367628,"byte_end":367641,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"system_handle","qualname":"<Window>::system_handle","value":"pub fn system_handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get the OS-specific handle of the window.","sig":null,"attributes":[{"value":"/ Get the OS-specific handle of the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367248,"byte_end":367293,"line_start":129,"line_end":129,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367298,"byte_end":367301,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The type of the returned handle is Handle, which is a typedef to the handle type defined by the OS.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367306,"byte_end":367409,"line_start":131,"line_end":131,"column_start":5,"column_end":108}},{"value":"/ You shouldn't need to use this function, unless you have very specific stuff to implement that SFML","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367414,"byte_end":367517,"line_start":132,"line_end":132,"column_start":5,"column_end":108}},{"value":"/ doesn't support, or implement a temporary workaround until a bug is fixed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367522,"byte_end":367600,"line_start":133,"line_end":133,"column_start":5,"column_end":83}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367605,"byte_end":367616,"line_start":134,"line_end":134,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368215,"byte_end":368225,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"poll_event","qualname":"<Window>::poll_event","value":"pub fn poll_event(&mut Self) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":"  Pop the event on top of event queue, if any, and return it","sig":null,"attributes":[{"value":"/  Pop the event on top of event queue, if any, and return it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367734,"byte_end":367797,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367802,"byte_end":367805,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This function is not blocking: if there's no pending event then","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367810,"byte_end":367877,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/ it will return `None`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367882,"byte_end":367908,"line_start":142,"line_end":142,"column_start":5,"column_end":31}},{"value":"/ Note that more than one event may be present in the event queue,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367913,"byte_end":367981,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/ thus you should always call this function in a loop","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":367986,"byte_end":368041,"line_start":144,"line_end":144,"column_start":5,"column_end":60}},{"value":"/ to make sure that you process every pending event.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368046,"byte_end":368100,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368105,"byte_end":368108,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(event)` if an event was returned, or `None` if the event queue was empty","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368113,"byte_end":368203,"line_start":147,"line_end":147,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369012,"byte_end":369022,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"wait_event","qualname":"<Window>::wait_event","value":"pub fn wait_event(&mut Self) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Wait for an event and return it","sig":null,"attributes":[{"value":"/ Wait for an event and return it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368571,"byte_end":368606,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368611,"byte_end":368614,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This function is blocking: if there's no pending event then","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368619,"byte_end":368682,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/ it will wait until an event is received.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368687,"byte_end":368731,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368736,"byte_end":368739,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function is typically used when you have a thread that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368744,"byte_end":368807,"line_start":164,"line_end":164,"column_start":5,"column_end":68}},{"value":"/ is dedicated to events handling: you want to make this thread","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368812,"byte_end":368877,"line_start":165,"line_end":165,"column_start":5,"column_end":70}},{"value":"/ sleep as long as no new event is received.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368882,"byte_end":368928,"line_start":166,"line_end":166,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368933,"byte_end":368936,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(event)` or `None` if an error has occured","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":368941,"byte_end":369000,"line_start":168,"line_end":168,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369637,"byte_end":369645,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"set_icon","qualname":"<Window>::set_icon","value":"pub fn set_icon(&mut Self, u32, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Change a window's icon\n pixels must be an array of width x height pixels in 32-bits RGBA format.","sig":null,"attributes":[{"value":"/ Change a window's icon","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369368,"byte_end":369394,"line_start":180,"line_end":180,"column_start":5,"column_end":31}},{"value":"/ pixels must be an array of width x height pixels in 32-bits RGBA format.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369399,"byte_end":369475,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369480,"byte_end":369483,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369488,"byte_end":369503,"line_start":183,"line_end":183,"column_start":5,"column_end":20}},{"value":"/ * width - Icon's width, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369508,"byte_end":369545,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/ * height - Icon's height, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369550,"byte_end":369589,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ * pixels - Vector of pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369594,"byte_end":369625,"line_start":186,"line_end":186,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370168,"byte_end":370173,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"close","qualname":"<Window>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close a window and destroy all the attached resources","sig":null,"attributes":[{"value":"/ Close a window and destroy all the attached resources","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369796,"byte_end":369853,"line_start":191,"line_end":191,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369858,"byte_end":369861,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ After calling this method, the Window object remains","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369866,"byte_end":369922,"line_start":193,"line_end":193,"column_start":5,"column_end":61}},{"value":"/ valid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369927,"byte_end":369937,"line_start":194,"line_end":194,"column_start":5,"column_end":15}},{"value":"/ All other functions such as [`Window::poll_event`] or [`Window::display`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":369942,"byte_end":370019,"line_start":195,"line_end":195,"column_start":5,"column_end":82}},{"value":"/ will still work (i.e. you don't have to test [`Window::is_open`]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370024,"byte_end":370092,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ every time), and will have no effect on closed windows.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370097,"byte_end":370156,"line_start":197,"line_end":197,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370496,"byte_end":370503,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"is_open","qualname":"<Window>::is_open","value":"pub fn is_open(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not a window is opened","sig":null,"attributes":[{"value":"/ Tell whether or not a window is opened","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370271,"byte_end":370313,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370318,"byte_end":370321,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This function returns whether or not the window exists.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370326,"byte_end":370385,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ Note that a hidden window (`set_visible(false)`) will return","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370390,"byte_end":370454,"line_start":207,"line_end":207,"column_start":5,"column_end":69}},{"value":"/ true.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370459,"byte_end":370468,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370473,"byte_end":370484,"line_start":209,"line_end":209,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370977,"byte_end":370985,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"settings","qualname":"<Window>::settings","value":"pub fn settings(&Self) -> ContextSettings","parent":null,"children":[],"decl_id":null,"docs":" Get the settings of the OpenGL context of a window","sig":null,"attributes":[{"value":"/ Get the settings of the OpenGL context of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370597,"byte_end":370651,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370656,"byte_end":370659,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Note that these settings may be different from what was","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370664,"byte_end":370723,"line_start":216,"line_end":216,"column_start":5,"column_end":64}},{"value":"/ passed to the [`Window::new`] function,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370728,"byte_end":370771,"line_start":217,"line_end":217,"column_start":5,"column_end":48}},{"value":"/ if one or more settings were not supported. In this case,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370776,"byte_end":370837,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ SFML chose the closest match.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370842,"byte_end":370875,"line_start":219,"line_end":219,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370880,"byte_end":370883,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Return a structure containing the OpenGL context settings","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370888,"byte_end":370949,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":370954,"byte_end":370965,"line_start":222,"line_end":222,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371200,"byte_end":371209,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"set_title","qualname":"<Window>::set_title","value":"pub fn set_title<S: SfStrConv>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Change the title of a window","sig":null,"attributes":[{"value":"/ Change the title of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371100,"byte_end":371132,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371137,"byte_end":371140,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371145,"byte_end":371160,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"/ * title - New title","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371165,"byte_end":371188,"line_start":230,"line_end":230,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371512,"byte_end":371523,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"set_visible","qualname":"<Window>::set_visible","value":"pub fn set_visible(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Show or hide a window","sig":null,"attributes":[{"value":"/ Show or hide a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371385,"byte_end":371410,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371415,"byte_end":371418,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371423,"byte_end":371438,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/ * visible - true to show the window, false to hide it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371443,"byte_end":371500,"line_start":240,"line_end":240,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371764,"byte_end":371788,"line_start":249,"line_end":249,"column_start":12,"column_end":36},"name":"set_mouse_cursor_visible","qualname":"<Window>::set_mouse_cursor_visible","value":"pub fn set_mouse_cursor_visible(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Show or hide the mouse cursor","sig":null,"attributes":[{"value":"/ Show or hide the mouse cursor","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371648,"byte_end":371681,"line_start":245,"line_end":245,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371686,"byte_end":371689,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371694,"byte_end":371709,"line_start":247,"line_end":247,"column_start":5,"column_end":20}},{"value":"/ * visible - true to  false to hide","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371714,"byte_end":371752,"line_start":248,"line_end":248,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372172,"byte_end":372196,"line_start":257,"line_end":257,"column_start":12,"column_end":36},"name":"set_mouse_cursor_grabbed","qualname":"<Window>::set_mouse_cursor_grabbed","value":"pub fn set_mouse_cursor_grabbed(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Grab or release the mouse cursor.","sig":null,"attributes":[{"value":"/ Grab or release the mouse cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371924,"byte_end":371961,"line_start":253,"line_end":253,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371966,"byte_end":371969,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ If set, grabs the mouse cursor inside this window's client area so it may no longer be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":371974,"byte_end":372064,"line_start":255,"line_end":255,"column_start":5,"column_end":95}},{"value":"/ moved outside its bounds. Note that grabbing is only active while the window has focus.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372069,"byte_end":372160,"line_start":256,"line_end":256,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372760,"byte_end":372785,"line_start":270,"line_end":270,"column_start":12,"column_end":37},"name":"set_vertical_sync_enabled","qualname":"<Window>::set_vertical_sync_enabled","value":"pub fn set_vertical_sync_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable vertical synchronization","sig":null,"attributes":[{"value":"/ Enable or disable vertical synchronization","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372332,"byte_end":372378,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372383,"byte_end":372386,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Activating vertical synchronization will limit the number","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372391,"byte_end":372452,"line_start":263,"line_end":263,"column_start":5,"column_end":66}},{"value":"/ of frames displayed to the refresh rate of the monitor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372457,"byte_end":372516,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/ This can avoid some visual artifacts, and limit the framerate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372521,"byte_end":372586,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/ to a good value (but not constant across different computers).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372591,"byte_end":372657,"line_start":266,"line_end":266,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372662,"byte_end":372665,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372670,"byte_end":372685,"line_start":268,"line_end":268,"column_start":5,"column_end":20}},{"value":"/ * enabled - true to enable v-sync, false to deactivate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372690,"byte_end":372748,"line_start":269,"line_end":269,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373326,"byte_end":373348,"line_start":284,"line_end":284,"column_start":12,"column_end":34},"name":"set_key_repeat_enabled","qualname":"<Window>::set_key_repeat_enabled","value":"pub fn set_key_repeat_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable automatic key-repeat","sig":null,"attributes":[{"value":"/ Enable or disable automatic key-repeat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372922,"byte_end":372964,"line_start":274,"line_end":274,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372969,"byte_end":372972,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If key repeat is enabled, you will receive repeated","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":372977,"byte_end":373032,"line_start":276,"line_end":276,"column_start":5,"column_end":60}},{"value":"/ [`Event::KeyPressed`] events while keeping a key pressed. If it is disabled,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373037,"byte_end":373117,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ you will only get a single event when the key is pressed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373122,"byte_end":373183,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373188,"byte_end":373191,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Key repeat is enabled by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373196,"byte_end":373233,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373238,"byte_end":373241,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373246,"byte_end":373261,"line_start":282,"line_end":282,"column_start":5,"column_end":20}},{"value":"/ * enabled - true to enable, false to disable","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373266,"byte_end":373314,"line_start":283,"line_end":283,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374074,"byte_end":374084,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"set_active","qualname":"<Window>::set_active","value":"pub fn set_active(&mut Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Activate or deactivate a window as the current target for OpenGL rendering","sig":null,"attributes":[{"value":"/ Activate or deactivate a window as the current target for OpenGL rendering","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373482,"byte_end":373560,"line_start":288,"line_end":288,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373565,"byte_end":373568,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ A window is active only on the current thread, if you want to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373573,"byte_end":373638,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"/ make it active on another thread you have to deactivate it","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373643,"byte_end":373705,"line_start":291,"line_end":291,"column_start":5,"column_end":67}},{"value":"/ on the previous thread first if it was active.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373710,"byte_end":373760,"line_start":292,"line_end":292,"column_start":5,"column_end":55}},{"value":"/ Only one window can be active on a thread at a time, thus","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373765,"byte_end":373826,"line_start":293,"line_end":293,"column_start":5,"column_end":66}},{"value":"/ the window previously active (if any) automatically gets deactivated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373831,"byte_end":373904,"line_start":294,"line_end":294,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373909,"byte_end":373912,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373917,"byte_end":373932,"line_start":296,"line_end":296,"column_start":5,"column_end":20}},{"value":"/ * active - true to activate, false to deactivate","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373937,"byte_end":373989,"line_start":297,"line_end":297,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":373994,"byte_end":373997,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Return true if operation was successful, false otherwise","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374002,"byte_end":374062,"line_start":299,"line_end":299,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374466,"byte_end":374473,"line_start":309,"line_end":309,"column_start":12,"column_end":19},"name":"display","qualname":"<Window>::display","value":"pub fn display(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Display on screen what has been rendered to the window so far","sig":null,"attributes":[{"value":"/ Display on screen what has been rendered to the window so far","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374228,"byte_end":374293,"line_start":304,"line_end":304,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374298,"byte_end":374301,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This function is typically called after all OpenGL rendering","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374306,"byte_end":374370,"line_start":306,"line_end":306,"column_start":5,"column_end":69}},{"value":"/ has been done for the current frame, in order to show","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374375,"byte_end":374432,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/ it on screen.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374437,"byte_end":374454,"line_start":308,"line_end":308,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374932,"byte_end":374951,"line_start":321,"line_end":321,"column_start":12,"column_end":31},"name":"set_framerate_limit","qualname":"<Window>::set_framerate_limit","value":"pub fn set_framerate_limit(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Limit the framerate to a maximum fixed frequency","sig":null,"attributes":[{"value":"/ Limit the framerate to a maximum fixed frequency","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374552,"byte_end":374604,"line_start":313,"line_end":313,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374609,"byte_end":374612,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ If a limit is set, the window will use a small delay after","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374617,"byte_end":374679,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/ each call to [`Window::display`] to ensure that the current frame","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374684,"byte_end":374753,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ lasted long enough to match the framerate limit.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374758,"byte_end":374810,"line_start":317,"line_end":317,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374815,"byte_end":374818,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374823,"byte_end":374838,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/ * limit - Framerate limit, in frames per seconds (use 0 to disable limit)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":374843,"byte_end":374920,"line_start":320,"line_end":320,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375316,"byte_end":375338,"line_start":332,"line_end":332,"column_start":12,"column_end":34},"name":"set_joystick_threshold","qualname":"<Window>::set_joystick_threshold","value":"pub fn set_joystick_threshold(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Change the joystick threshold","sig":null,"attributes":[{"value":"/ Change the joystick threshold","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375059,"byte_end":375092,"line_start":325,"line_end":325,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375097,"byte_end":375100,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ The joystick threshold is the value below which","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375105,"byte_end":375156,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/ no [`Event::JoystickMoved`] event will be generated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375161,"byte_end":375217,"line_start":328,"line_end":328,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375222,"byte_end":375225,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375230,"byte_end":375245,"line_start":330,"line_end":330,"column_start":5,"column_end":20}},{"value":"/ * threshold - New threshold, in the range [0, 100]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375250,"byte_end":375304,"line_start":331,"line_end":331,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375563,"byte_end":375571,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"position","qualname":"<Window>::position","value":"pub fn position(&Self) -> Vector2i","parent":null,"children":[],"decl_id":null,"docs":" Get the position of a window","sig":null,"attributes":[{"value":"/ Get the position of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375457,"byte_end":375489,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375494,"byte_end":375497,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Return the position in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375502,"byte_end":375535,"line_start":338,"line_end":338,"column_start":5,"column_end":38}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375540,"byte_end":375551,"line_start":339,"line_end":339,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375994,"byte_end":376006,"line_start":352,"line_end":352,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Window>::set_position","value":"pub fn set_position(&mut Self, Vector2i)","parent":null,"children":[],"decl_id":null,"docs":" Change the position of a window on screen","sig":null,"attributes":[{"value":"/ Change the position of a window on screen","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375682,"byte_end":375727,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375732,"byte_end":375735,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This function only works for top-level windows","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375740,"byte_end":375790,"line_start":346,"line_end":346,"column_start":5,"column_end":55}},{"value":"/ (i.e. it will be ignored for windows created from","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375795,"byte_end":375848,"line_start":347,"line_end":347,"column_start":5,"column_end":58}},{"value":"/ the handle of a child window/control).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375853,"byte_end":375895,"line_start":348,"line_end":348,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375900,"byte_end":375903,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375908,"byte_end":375923,"line_start":350,"line_end":350,"column_start":5,"column_end":20}},{"value":"/ * position - New position of the window, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":375928,"byte_end":375982,"line_start":351,"line_end":351,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376328,"byte_end":376332,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"name":"size","qualname":"<Window>::size","value":"pub fn size(&Self) -> Vector2u","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the rendering region of a window","sig":null,"attributes":[{"value":"/ Get the size of the rendering region of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376125,"byte_end":376177,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376182,"byte_end":376185,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ The size doesn't include the titlebar and borders of the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376190,"byte_end":376258,"line_start":358,"line_end":358,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376263,"byte_end":376266,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Return the size in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376271,"byte_end":376300,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376305,"byte_end":376316,"line_start":361,"line_end":361,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376571,"byte_end":376579,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"set_size","qualname":"<Window>::set_size","value":"pub fn set_size(&mut Self, Vector2u)","parent":null,"children":[],"decl_id":null,"docs":" Change the size of the rendering region of a window","sig":null,"attributes":[{"value":"/ Change the size of the rendering region of a window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376439,"byte_end":376494,"line_start":366,"line_end":366,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376499,"byte_end":376502,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376507,"byte_end":376522,"line_start":368,"line_end":368,"column_start":5,"column_end":20}},{"value":"/ * size - New size, in pixels","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376527,"byte_end":376559,"line_start":369,"line_end":369,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376783,"byte_end":376797,"line_start":376,"line_end":376,"column_start":12,"column_end":26},"name":"mouse_position","qualname":"<Window>::mouse_position","value":"pub fn mouse_position(&Self) -> Vector2i","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of the mouse relative to the window.\n","sig":null,"attributes":[{"value":"/ Returns the current position of the mouse relative to the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376686,"byte_end":376755,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376760,"byte_end":376771,"line_start":375,"line_end":375,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377189,"byte_end":377207,"line_start":388,"line_end":388,"column_start":12,"column_end":30},"name":"set_mouse_position","qualname":"<Window>::set_mouse_position","value":"pub fn set_mouse_position(&mut Self, Vector2i)","parent":null,"children":[],"decl_id":null,"docs":" Set the current position of the mouse","sig":null,"attributes":[{"value":"/ Set the current position of the mouse","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376907,"byte_end":376948,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376953,"byte_end":376956,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function sets the current position of the mouse cursor relative to the given window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":376961,"byte_end":377054,"line_start":382,"line_end":382,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377059,"byte_end":377062,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377067,"byte_end":377082,"line_start":384,"line_end":384,"column_start":5,"column_end":20}},{"value":"/ * position - New position of the mouse","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377087,"byte_end":377129,"line_start":385,"line_end":385,"column_start":5,"column_end":47}},{"value":"/ * relativeTo - Reference Window","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377134,"byte_end":377169,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377174,"byte_end":377177,"line_start":387,"line_end":387,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377535,"byte_end":377551,"line_start":396,"line_end":396,"column_start":12,"column_end":28},"name":"set_mouse_cursor","qualname":"<Window>::set_mouse_cursor","value":"pub fn set_mouse_cursor(&mut Self, &Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Set the displayed cursor to a native system cursor.","sig":null,"attributes":[{"value":"/ Set the displayed cursor to a native system cursor.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377325,"byte_end":377380,"line_start":392,"line_end":392,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377385,"byte_end":377388,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Upon window creation, the arrow cursor is used by default.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377393,"byte_end":377455,"line_start":394,"line_end":394,"column_start":5,"column_end":67}},{"value":"/ The cursor can not be destroyed while in use by the window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377460,"byte_end":377523,"line_start":395,"line_end":395,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377762,"byte_end":377776,"line_start":402,"line_end":402,"column_start":12,"column_end":26},"name":"touch_position","qualname":"<Window>::touch_position","value":"pub fn touch_position(&Self, u32) -> Vector2i","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of a touch in window coordinates.\n","sig":null,"attributes":[{"value":"/ Returns the current position of a touch in window coordinates.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377668,"byte_end":377734,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377739,"byte_end":377750,"line_start":401,"line_end":401,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378133,"byte_end":378142,"line_start":411,"line_end":411,"column_start":12,"column_end":21},"name":"has_focus","qualname":"<Window>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the window has the input focus.","sig":null,"attributes":[{"value":"/ Check whether the window has the input focus.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377907,"byte_end":377956,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377961,"byte_end":377964,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ At any given time, only one window may have the input focus to receive input events","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":377969,"byte_end":378056,"line_start":408,"line_end":408,"column_start":5,"column_end":92}},{"value":"/ such as keystrokes or most mouse events.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378061,"byte_end":378105,"line_start":409,"line_end":409,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378110,"byte_end":378121,"line_start":410,"line_end":410,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378688,"byte_end":378701,"line_start":421,"line_end":421,"column_start":12,"column_end":25},"name":"request_focus","qualname":"<Window>::request_focus","value":"pub fn request_focus(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Request the current window to be made the active foreground window.","sig":null,"attributes":[{"value":"/ Request the current window to be made the active foreground window.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378238,"byte_end":378309,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378314,"byte_end":378317,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ At any given time, only one window may have the input focus to receive input events","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378322,"byte_end":378409,"line_start":417,"line_end":417,"column_start":5,"column_end":92}},{"value":"/ such as keystrokes or mouse events. If a window requests focus, it only hints to the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378414,"byte_end":378502,"line_start":418,"line_end":418,"column_start":5,"column_end":93}},{"value":"/ operating system, that it would like to be focused. The operating system is free to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378507,"byte_end":378594,"line_start":419,"line_end":419,"column_start":5,"column_end":92}},{"value":"/ deny the request. This is not to be confused with [`Window::set_active`].","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378599,"byte_end":378676,"line_start":420,"line_end":420,"column_start":5,"column_end":82}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/inputstream.rs","byte_start":3524,"byte_end":3535,"line_start":61,"line_end":61,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_bool_ext.rs","byte_start":4049,"byte_end":4055,"line_start":8,"line_end":8,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":9842,"byte_end":9861,"line_start":115,"line_end":115,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":14386,"byte_end":14405,"line_start":224,"line_end":224,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15351,"byte_end":15370,"line_start":251,"line_end":251,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19069,"byte_end":19088,"line_start":349,"line_end":349,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19161,"byte_end":19180,"line_start":355,"line_end":355,"column_start":15,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26145,"byte_end":26150,"line_start":59,"line_end":59,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33869,"byte_end":33874,"line_start":264,"line_end":264,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":35314,"byte_end":35319,"line_start":303,"line_end":303,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36991,"byte_end":36996,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40516,"byte_end":40521,"line_start":161,"line_end":161,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40603,"byte_end":40608,"line_start":167,"line_end":167,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40873,"byte_end":40878,"line_start":178,"line_end":178,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":42326,"byte_end":42331,"line_start":217,"line_end":217,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45201,"byte_end":45212,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49642,"byte_end":49653,"line_start":196,"line_end":196,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49911,"byte_end":49922,"line_start":205,"line_end":205,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":53883,"byte_end":53894,"line_start":7,"line_end":7,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":56352,"byte_end":56369,"line_start":65,"line_end":65,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":61340,"byte_end":61357,"line_start":189,"line_end":189,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":63026,"byte_end":63043,"line_start":233,"line_end":233,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/time_span.rs","byte_start":63696,"byte_end":63704,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67639,"byte_end":67648,"line_start":55,"line_end":55,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69085,"byte_end":69094,"line_start":106,"line_end":106,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71668,"byte_end":71679,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73380,"byte_end":73391,"line_start":75,"line_end":75,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73685,"byte_end":73696,"line_start":86,"line_end":86,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73980,"byte_end":73991,"line_start":96,"line_end":96,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":75793,"byte_end":75804,"line_start":138,"line_end":138,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":78331,"byte_end":78342,"line_start":210,"line_end":210,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":78802,"byte_end":78813,"line_start":225,"line_end":225,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79264,"byte_end":79269,"line_start":11,"line_end":11,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82109,"byte_end":82114,"line_start":125,"line_end":125,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82476,"byte_end":82481,"line_start":140,"line_end":140,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82711,"byte_end":82716,"line_start":149,"line_end":149,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82812,"byte_end":82817,"line_start":155,"line_end":155,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":83064,"byte_end":83069,"line_start":164,"line_end":164,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":83165,"byte_end":83170,"line_start":170,"line_end":170,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":83481,"byte_end":83486,"line_start":181,"line_end":181,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84526,"byte_end":84537,"line_start":33,"line_end":33,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":87055,"byte_end":87066,"line_start":107,"line_end":107,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":87350,"byte_end":87361,"line_start":117,"line_end":117,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":89163,"byte_end":89174,"line_start":159,"line_end":159,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":92070,"byte_end":92081,"line_start":240,"line_end":240,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":92538,"byte_end":92555,"line_start":255,"line_end":255,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":93166,"byte_end":93177,"line_start":279,"line_end":279,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94760,"byte_end":94771,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":96466,"byte_end":96477,"line_start":106,"line_end":106,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":98608,"byte_end":98619,"line_start":163,"line_end":163,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":98896,"byte_end":98907,"line_start":173,"line_end":173,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":100535,"byte_end":100546,"line_start":215,"line_end":215,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103684,"byte_end":103688,"line_start":63,"line_end":63,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":108482,"byte_end":108486,"line_start":202,"line_end":202,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":108711,"byte_end":108715,"line_start":210,"line_end":210,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109928,"byte_end":109932,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110143,"byte_end":110147,"line_start":47,"line_end":47,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110610,"byte_end":110615,"line_start":71,"line_end":71,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110828,"byte_end":110833,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111054,"byte_end":111065,"line_start":93,"line_end":93,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111228,"byte_end":111239,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111467,"byte_end":111478,"line_start":113,"line_end":113,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111969,"byte_end":111980,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112407,"byte_end":112411,"line_start":154,"line_end":154,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112643,"byte_end":112647,"line_start":165,"line_end":165,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113302,"byte_end":113307,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114193,"byte_end":114198,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":122661,"byte_end":122666,"line_start":274,"line_end":274,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":122991,"byte_end":122996,"line_start":286,"line_end":286,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123507,"byte_end":123520,"line_start":14,"line_end":14,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125091,"byte_end":125095,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125656,"byte_end":125660,"line_start":47,"line_end":47,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":127688,"byte_end":127695,"line_start":111,"line_end":111,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":128121,"byte_end":128130,"line_start":130,"line_end":130,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129074,"byte_end":129088,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130574,"byte_end":130588,"line_start":68,"line_end":68,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130673,"byte_end":130687,"line_start":74,"line_end":74,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130975,"byte_end":130989,"line_start":84,"line_end":84,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":132920,"byte_end":132934,"line_start":130,"line_end":130,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":135551,"byte_end":135565,"line_start":202,"line_end":202,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":136056,"byte_end":136070,"line_start":217,"line_end":217,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138885,"byte_end":138897,"line_start":61,"line_end":61,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140935,"byte_end":140947,"line_start":123,"line_end":123,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":141439,"byte_end":141451,"line_start":139,"line_end":139,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":151959,"byte_end":151972,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":156388,"byte_end":156401,"line_start":135,"line_end":135,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":161498,"byte_end":161511,"line_start":280,"line_end":280,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162446,"byte_end":162458,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":177430,"byte_end":177442,"line_start":427,"line_end":427,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":182800,"byte_end":182812,"line_start":582,"line_end":582,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188468,"byte_end":188474,"line_start":148,"line_end":148,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":204293,"byte_end":204299,"line_start":564,"line_end":564,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209010,"byte_end":209016,"line_start":23,"line_end":23,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214363,"byte_end":214369,"line_start":174,"line_end":174,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214451,"byte_end":214457,"line_start":180,"line_end":180,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214802,"byte_end":214808,"line_start":192,"line_end":192,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":215086,"byte_end":215092,"line_start":202,"line_end":202,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2050}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":216746,"byte_end":216752,"line_start":244,"line_end":244,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217360,"byte_end":217364,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":224094,"byte_end":224098,"line_start":221,"line_end":221,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":224345,"byte_end":224349,"line_start":232,"line_end":232,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":224745,"byte_end":224749,"line_start":247,"line_end":247,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":225025,"byte_end":225029,"line_start":257,"line_end":257,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":226631,"byte_end":226635,"line_start":299,"line_end":299,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text_style.rs","byte_start":227145,"byte_end":227154,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229596,"byte_end":229603,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241629,"byte_end":241636,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241871,"byte_end":241878,"line_start":367,"line_end":367,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242323,"byte_end":242332,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247751,"byte_end":247760,"line_start":172,"line_end":172,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252742,"byte_end":252748,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254812,"byte_end":254818,"line_start":131,"line_end":131,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255377,"byte_end":255388,"line_start":18,"line_end":18,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259722,"byte_end":259733,"line_start":150,"line_end":150,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259947,"byte_end":259958,"line_start":158,"line_end":158,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":260333,"byte_end":260341,"line_start":170,"line_end":170,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2371},{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":260966,"byte_end":260977,"line_start":193,"line_end":193,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":261293,"byte_end":261304,"line_start":207,"line_end":207,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2380}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":261602,"byte_end":261613,"line_start":219,"line_end":219,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":261880,"byte_end":261891,"line_start":229,"line_end":229,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262556,"byte_end":262573,"line_start":14,"line_end":14,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263075,"byte_end":263087,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269989,"byte_end":270001,"line_start":219,"line_end":219,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":270366,"byte_end":270378,"line_start":231,"line_end":231,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":270516,"byte_end":270528,"line_start":239,"line_end":239,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271282,"byte_end":271286,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":276036,"byte_end":276040,"line_start":168,"line_end":168,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2484}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":276270,"byte_end":276274,"line_start":176,"line_end":176,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":276409,"byte_end":276413,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":276857,"byte_end":276862,"line_start":13,"line_end":13,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":276997,"byte_end":277002,"line_start":19,"line_end":19,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2513},{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277135,"byte_end":277140,"line_start":27,"line_end":27,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277275,"byte_end":277280,"line_start":33,"line_end":33,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277397,"byte_end":277402,"line_start":39,"line_end":39,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277517,"byte_end":277522,"line_start":45,"line_end":45,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278214,"byte_end":278215,"line_start":66,"line_end":66,"column_start":33,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278326,"byte_end":278331,"line_start":72,"line_end":72,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279641,"byte_end":279646,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280481,"byte_end":280486,"line_start":53,"line_end":53,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280594,"byte_end":280599,"line_start":59,"line_end":59,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280701,"byte_end":280706,"line_start":65,"line_end":65,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281246,"byte_end":281251,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2611},{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283967,"byte_end":283971,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284088,"byte_end":284092,"line_start":48,"line_end":48,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284117,"byte_end":284121,"line_start":50,"line_end":50,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284281,"byte_end":284285,"line_start":56,"line_end":56,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284413,"byte_end":284417,"line_start":62,"line_end":62,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285760,"byte_end":285764,"line_start":111,"line_end":111,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285921,"byte_end":285925,"line_start":120,"line_end":120,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286088,"byte_end":286092,"line_start":128,"line_end":128,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286210,"byte_end":286214,"line_start":134,"line_end":134,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2694},{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286377,"byte_end":286381,"line_start":142,"line_end":142,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286504,"byte_end":286508,"line_start":148,"line_end":148,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286708,"byte_end":286712,"line_start":157,"line_end":157,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2702},{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":287282,"byte_end":287286,"line_start":184,"line_end":184,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":287461,"byte_end":287465,"line_start":191,"line_end":191,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":287634,"byte_end":287638,"line_start":198,"line_end":198,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":287838,"byte_end":287842,"line_start":207,"line_end":207,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2718},{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288047,"byte_end":288051,"line_start":216,"line_end":216,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288272,"byte_end":288276,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288451,"byte_end":288455,"line_start":232,"line_end":232,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288619,"byte_end":288623,"line_start":239,"line_end":239,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288786,"byte_end":288790,"line_start":247,"line_end":247,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288911,"byte_end":288915,"line_start":253,"line_end":253,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290669,"byte_end":290676,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290832,"byte_end":290839,"line_start":62,"line_end":62,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":291967,"byte_end":291974,"line_start":102,"line_end":102,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2775},{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292209,"byte_end":292216,"line_start":113,"line_end":113,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292344,"byte_end":292351,"line_start":120,"line_end":120,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292586,"byte_end":292593,"line_start":131,"line_end":131,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292721,"byte_end":292728,"line_start":138,"line_end":138,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2789},{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292973,"byte_end":292980,"line_start":149,"line_end":149,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2793}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293101,"byte_end":293108,"line_start":156,"line_end":156,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2796},{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293353,"byte_end":293360,"line_start":167,"line_end":167,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293493,"byte_end":293500,"line_start":174,"line_end":174,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2803},{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293674,"byte_end":293682,"line_start":185,"line_end":185,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293997,"byte_end":294005,"line_start":198,"line_end":198,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":294322,"byte_end":294330,"line_start":211,"line_end":211,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296125,"byte_end":296132,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":297530,"byte_end":297537,"line_start":98,"line_end":98,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2851},{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":297803,"byte_end":297810,"line_start":110,"line_end":110,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":297963,"byte_end":297970,"line_start":118,"line_end":118,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":298236,"byte_end":298243,"line_start":130,"line_end":130,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":298396,"byte_end":298403,"line_start":138,"line_end":138,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":298679,"byte_end":298686,"line_start":150,"line_end":150,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2869}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":298830,"byte_end":298837,"line_start":158,"line_end":158,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2872},{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":299113,"byte_end":299120,"line_start":170,"line_end":170,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":299276,"byte_end":299283,"line_start":178,"line_end":178,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":299478,"byte_end":299485,"line_start":190,"line_end":190,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":299683,"byte_end":299691,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304239,"byte_end":304246,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":305631,"byte_end":305638,"line_start":78,"line_end":78,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":305809,"byte_end":305816,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308757,"byte_end":308772,"line_start":50,"line_end":50,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":311110,"byte_end":311125,"line_start":122,"line_end":122,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312610,"byte_end":312616,"line_start":28,"line_end":28,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312761,"byte_end":312767,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":324859,"byte_end":324864,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332805,"byte_end":332809,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336681,"byte_end":336684,"line_start":9,"line_end":9,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345056,"byte_end":345059,"line_start":218,"line_end":218,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3177}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347511,"byte_end":347517,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348384,"byte_end":348389,"line_start":67,"line_end":67,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348676,"byte_end":348682,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352748,"byte_end":352752,"line_start":79,"line_end":79,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":354443,"byte_end":354448,"line_start":22,"line_end":22,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359851,"byte_end":359860,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":362288,"byte_end":362297,"line_start":127,"line_end":127,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":362466,"byte_end":362475,"line_start":134,"line_end":134,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364707,"byte_end":364713,"line_start":64,"line_end":64,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3317},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378907,"byte_end":378913,"line_start":430,"line_end":430,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1538,"byte_end":1543,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":62}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4722,"byte_end":4729,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":99}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/mod.rs","byte_start":4739,"byte_end":4747,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":173}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1582,"byte_end":1590,"line_start":56,"line_end":56,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":505}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":65008,"byte_end":65018,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":618}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/mod.rs","byte_start":65117,"byte_end":65121,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1142}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1663,"byte_end":1669,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2537}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/lib.rs","byte_start":1706,"byte_end":1712,"line_start":61,"line_end":61,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2887}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300524,"byte_end":300533,"line_start":14,"line_end":14,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2925}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300601,"byte_end":300609,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3032}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300633,"byte_end":300638,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3179}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300648,"byte_end":300654,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3206}},{"kind":"Mod","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mod.rs","byte_start":300705,"byte_end":300710,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3242}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/inputstream.rs","byte_start":3524,"byte_end":3535,"line_start":61,"line_end":61,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_bool_ext.rs","byte_start":4049,"byte_end":4055,"line_start":8,"line_end":8,"column_start":20,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":20,"index":8},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":9842,"byte_end":9861,"line_start":115,"line_end":115,"column_start":28,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":14386,"byte_end":14405,"line_start":224,"line_end":224,"column_start":22,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3361},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":15351,"byte_end":15370,"line_start":251,"line_end":251,"column_start":6,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19069,"byte_end":19088,"line_start":349,"line_end":349,"column_start":18,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3370},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/capture.rs","byte_start":19161,"byte_end":19180,"line_start":355,"line_end":355,"column_start":15,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3370},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":26145,"byte_end":26150,"line_start":59,"line_end":59,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":33869,"byte_end":33874,"line_start":264,"line_end":264,"column_start":22,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3381},"to":{"krate":0,"index":397}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/music.rs","byte_start":35314,"byte_end":35319,"line_start":303,"line_end":303,"column_start":15,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3381},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":36991,"byte_end":36996,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40516,"byte_end":40521,"line_start":161,"line_end":161,"column_start":22,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3385},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40603,"byte_end":40608,"line_start":167,"line_end":167,"column_start":20,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3385},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":40873,"byte_end":40878,"line_start":178,"line_end":178,"column_start":26,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3385},"to":{"krate":0,"index":397}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound.rs","byte_start":42326,"byte_end":42331,"line_start":217,"line_end":217,"column_start":19,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3385},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":45201,"byte_end":45212,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49642,"byte_end":49653,"line_start":196,"line_end":196,"column_start":18,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3392},"to":{"krate":5,"index":537}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_buffer.rs","byte_start":49911,"byte_end":49922,"line_start":205,"line_end":205,"column_start":18,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3392},"to":{"krate":0,"index":2527}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_status.rs","byte_start":53883,"byte_end":53894,"line_start":7,"line_end":7,"column_start":6,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":56352,"byte_end":56369,"line_start":65,"line_end":65,"column_start":26,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":61340,"byte_end":61357,"line_start":189,"line_end":189,"column_start":42,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3416},"to":{"krate":0,"index":397}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/sound_stream.rs","byte_start":63026,"byte_end":63043,"line_start":233,"line_end":233,"column_start":35,"column_end":52},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3416},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/audio/time_span.rs","byte_start":63696,"byte_end":63704,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":67639,"byte_end":67648,"line_start":55,"line_end":55,"column_start":18,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3435},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/blend_mode.rs","byte_start":69085,"byte_end":69094,"line_start":106,"line_end":106,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":71668,"byte_end":71679,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73380,"byte_end":73391,"line_start":75,"line_end":75,"column_start":22,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3506},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73685,"byte_end":73696,"line_start":86,"line_end":86,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3506},"to":{"krate":0,"index":1071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":73980,"byte_end":73991,"line_start":96,"line_end":96,"column_start":28,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3506},"to":{"krate":0,"index":2285}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":75793,"byte_end":75804,"line_start":138,"line_end":138,"column_start":24,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3506},"to":{"krate":0,"index":1933}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":78331,"byte_end":78342,"line_start":210,"line_end":210,"column_start":20,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3506},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/circle_shape.rs","byte_start":78802,"byte_end":78813,"line_start":225,"line_end":225,"column_start":19,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3506},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":79264,"byte_end":79269,"line_start":11,"line_end":11,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82109,"byte_end":82114,"line_start":125,"line_end":125,"column_start":20,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82476,"byte_end":82481,"line_start":140,"line_end":140,"column_start":14,"column_end":19},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82711,"byte_end":82716,"line_start":149,"line_end":149,"column_start":20,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":82812,"byte_end":82817,"line_start":155,"line_end":155,"column_start":14,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":83064,"byte_end":83069,"line_start":164,"line_end":164,"column_start":20,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":83165,"byte_end":83170,"line_start":170,"line_end":170,"column_start":14,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/color.rs","byte_start":83481,"byte_end":83486,"line_start":181,"line_end":181,"column_start":20,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":84526,"byte_end":84537,"line_start":33,"line_end":33,"column_start":10,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":87055,"byte_end":87066,"line_start":107,"line_end":107,"column_start":23,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3528},"to":{"krate":0,"index":1071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":87350,"byte_end":87361,"line_start":117,"line_end":117,"column_start":28,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3528},"to":{"krate":0,"index":2285}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":89163,"byte_end":89174,"line_start":159,"line_end":159,"column_start":24,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3528},"to":{"krate":0,"index":1933}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":92070,"byte_end":92081,"line_start":240,"line_end":240,"column_start":20,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":92538,"byte_end":92555,"line_start":255,"line_end":255,"column_start":19,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/convex_shape.rs","byte_start":93166,"byte_end":93177,"line_start":279,"line_end":279,"column_start":19,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":94760,"byte_end":94771,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":96466,"byte_end":96477,"line_start":106,"line_end":106,"column_start":24,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3540},"to":{"krate":0,"index":1933}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":98608,"byte_end":98619,"line_start":163,"line_end":163,"column_start":23,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3540},"to":{"krate":0,"index":1071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":98896,"byte_end":98907,"line_start":173,"line_end":173,"column_start":28,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3540},"to":{"krate":0,"index":2285}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/custom_shape.rs","byte_start":100535,"byte_end":100546,"line_start":215,"line_end":215,"column_start":19,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3540},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":103684,"byte_end":103688,"line_start":63,"line_end":63,"column_start":6,"column_end":10},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":108482,"byte_end":108486,"line_start":202,"line_end":202,"column_start":18,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3548},"to":{"krate":5,"index":537}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/font.rs","byte_start":108711,"byte_end":108715,"line_start":210,"line_end":210,"column_start":18,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3548},"to":{"krate":0,"index":2527}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":109928,"byte_end":109932,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110143,"byte_end":110147,"line_start":47,"line_end":47,"column_start":22,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3557},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110610,"byte_end":110615,"line_start":71,"line_end":71,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":110828,"byte_end":110833,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3567},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111054,"byte_end":111065,"line_start":93,"line_end":93,"column_start":27,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":22,"index":1318},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111228,"byte_end":111239,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":22,"index":1296},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111467,"byte_end":111478,"line_start":113,"line_end":113,"column_start":27,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":22,"index":1341},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":111969,"byte_end":111980,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":22,"index":1404},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112407,"byte_end":112411,"line_start":154,"line_end":154,"column_start":43,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3587},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glsl.rs","byte_start":112643,"byte_end":112647,"line_start":165,"line_end":165,"column_start":43,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/glyph.rs","byte_start":113302,"byte_end":113307,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":114193,"byte_end":114198,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":122661,"byte_end":122666,"line_start":274,"line_end":274,"column_start":16,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3615},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/image.rs","byte_start":122991,"byte_end":122996,"line_start":286,"line_end":286,"column_start":15,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3615},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/primitive_type.rs","byte_start":123507,"byte_end":123520,"line_start":14,"line_end":14,"column_start":6,"column_end":19},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125091,"byte_end":125095,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":125656,"byte_end":125660,"line_start":47,"line_end":47,"column_start":64,"column_end":68},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":127688,"byte_end":127695,"line_start":111,"line_end":111,"column_start":6,"column_end":13},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rect.rs","byte_start":128121,"byte_end":128130,"line_start":130,"line_end":130,"column_start":6,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":129074,"byte_end":129088,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130574,"byte_end":130588,"line_start":68,"line_end":68,"column_start":22,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3671},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130673,"byte_end":130687,"line_start":74,"line_end":74,"column_start":23,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3671},"to":{"krate":0,"index":1071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":130975,"byte_end":130989,"line_start":84,"line_end":84,"column_start":28,"column_end":42},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3671},"to":{"krate":0,"index":2285}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":132920,"byte_end":132934,"line_start":130,"line_end":130,"column_start":24,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3671},"to":{"krate":0,"index":1933}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":135551,"byte_end":135565,"line_start":202,"line_end":202,"column_start":20,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3671},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/rectangle_shape.rs","byte_start":136056,"byte_end":136070,"line_start":217,"line_end":217,"column_start":19,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3671},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":138885,"byte_end":138897,"line_start":61,"line_end":61,"column_start":42,"column_end":54},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":140935,"byte_end":140947,"line_start":123,"line_end":123,"column_start":6,"column_end":18},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_states.rs","byte_start":141439,"byte_end":141451,"line_start":139,"line_end":139,"column_start":18,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":151959,"byte_end":151972,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":156388,"byte_end":156401,"line_start":135,"line_end":135,"column_start":23,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3699},"to":{"krate":0,"index":1535}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_texture.rs","byte_start":161498,"byte_end":161511,"line_start":280,"line_end":280,"column_start":15,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3699},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":162446,"byte_end":162458,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":177430,"byte_end":177442,"line_start":427,"line_end":427,"column_start":23,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3703},"to":{"krate":0,"index":1535}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/render_window.rs","byte_start":182800,"byte_end":182812,"line_start":582,"line_end":582,"column_start":15,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3703},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":188468,"byte_end":188474,"line_start":148,"line_end":148,"column_start":16,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shader.rs","byte_start":204293,"byte_end":204299,"line_start":564,"line_end":564,"column_start":25,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204581,"byte_end":204589,"line_start":7,"line_end":7,"column_start":22,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":1071},"to":{"krate":0,"index":1933}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/shape.rs","byte_start":204592,"byte_end":204605,"line_start":7,"line_end":7,"column_start":33,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":2285},"to":{"krate":0,"index":1933}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":209010,"byte_end":209016,"line_start":23,"line_end":23,"column_start":10,"column_end":16},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214363,"byte_end":214369,"line_start":174,"line_end":174,"column_start":22,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214451,"byte_end":214457,"line_start":180,"line_end":180,"column_start":20,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":214802,"byte_end":214808,"line_start":192,"line_end":192,"column_start":23,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3714},"to":{"krate":0,"index":1071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":215086,"byte_end":215092,"line_start":202,"line_end":202,"column_start":28,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3714},"to":{"krate":0,"index":2285}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/sprite.rs","byte_start":216746,"byte_end":216752,"line_start":244,"line_end":244,"column_start":19,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":217360,"byte_end":217364,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":224094,"byte_end":224098,"line_start":221,"line_end":221,"column_start":22,"column_end":26},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3721},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":224345,"byte_end":224349,"line_start":232,"line_end":232,"column_start":20,"column_end":24},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3721},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":224745,"byte_end":224749,"line_start":247,"line_end":247,"column_start":23,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3721},"to":{"krate":0,"index":1071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":225025,"byte_end":225029,"line_start":257,"line_end":257,"column_start":28,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3721},"to":{"krate":0,"index":2285}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text.rs","byte_start":226631,"byte_end":226635,"line_start":299,"line_end":299,"column_start":19,"column_end":23},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3721},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/text_style.rs","byte_start":227145,"byte_end":227154,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3728},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":229596,"byte_end":229603,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241629,"byte_end":241636,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3830},"to":{"krate":5,"index":537}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/texture.rs","byte_start":241871,"byte_end":241878,"line_start":367,"line_end":367,"column_start":18,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3830},"to":{"krate":0,"index":2527}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":242323,"byte_end":242332,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/transform.rs","byte_start":247751,"byte_end":247760,"line_start":172,"line_end":172,"column_start":18,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3835},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":252742,"byte_end":252748,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex.rs","byte_start":254812,"byte_end":254818,"line_start":131,"line_end":131,"column_start":18,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3843},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":255377,"byte_end":255388,"line_start":18,"line_end":18,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259722,"byte_end":259733,"line_start":150,"line_end":150,"column_start":18,"column_end":29},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":259947,"byte_end":259958,"line_start":158,"line_end":158,"column_start":16,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":260333,"byte_end":260341,"line_start":170,"line_end":170,"column_start":23,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3856},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":260966,"byte_end":260977,"line_start":193,"line_end":193,"column_start":23,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":261293,"byte_end":261304,"line_start":207,"line_end":207,"column_start":26,"column_end":37},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":261602,"byte_end":261613,"line_start":219,"line_end":219,"column_start":19,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3852},"to":{"krate":0,"index":1071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_array.rs","byte_start":261880,"byte_end":261891,"line_start":229,"line_end":229,"column_start":15,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":262556,"byte_end":262573,"line_start":14,"line_end":14,"column_start":6,"column_end":23},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":263075,"byte_end":263087,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":269989,"byte_end":270001,"line_start":219,"line_end":219,"column_start":16,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3881},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":270366,"byte_end":270378,"line_start":231,"line_end":231,"column_start":15,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3881},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/vertex_buffer.rs","byte_start":270516,"byte_end":270528,"line_start":239,"line_end":239,"column_start":19,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3881},"to":{"krate":0,"index":1071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":271282,"byte_end":271286,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":276036,"byte_end":276040,"line_start":168,"line_end":168,"column_start":18,"column_end":22},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3885},"to":{"krate":5,"index":537}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":276270,"byte_end":276274,"line_start":176,"line_end":176,"column_start":21,"column_end":25},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3885},"to":{"krate":0,"index":2532}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/graphics/view.rs","byte_start":276409,"byte_end":276413,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3885},"to":{"krate":0,"index":2527}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":276857,"byte_end":276862,"line_start":13,"line_end":13,"column_start":21,"column_end":26},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":276997,"byte_end":277002,"line_start":19,"line_end":19,"column_start":31,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277135,"byte_end":277140,"line_start":27,"line_end":27,"column_start":34,"column_end":39},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277275,"byte_end":277280,"line_start":33,"line_end":33,"column_start":35,"column_end":40},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277397,"byte_end":277402,"line_start":39,"line_end":39,"column_start":59,"column_end":64},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":277517,"byte_end":277522,"line_start":45,"line_end":45,"column_start":39,"column_end":44},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278170,"byte_end":278177,"line_start":64,"line_end":64,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":2527},"to":{"krate":0,"index":2529}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278214,"byte_end":278215,"line_start":66,"line_end":66,"column_start":33,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2531},"to":{"krate":0,"index":2529}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/sf_box.rs","byte_start":278326,"byte_end":278331,"line_start":72,"line_end":72,"column_start":46,"column_end":51},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":279641,"byte_end":279646,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280481,"byte_end":280486,"line_start":53,"line_end":53,"column_start":16,"column_end":21},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280594,"byte_end":280599,"line_start":59,"line_end":59,"column_start":15,"column_end":20},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/clock.rs","byte_start":280701,"byte_end":280706,"line_start":65,"line_end":65,"column_start":18,"column_end":23},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/string.rs","byte_start":281246,"byte_end":281251,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":283967,"byte_end":283971,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284088,"byte_end":284092,"line_start":48,"line_end":48,"column_start":13,"column_end":17},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284117,"byte_end":284121,"line_start":50,"line_end":50,"column_start":21,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284281,"byte_end":284285,"line_start":56,"line_end":56,"column_start":14,"column_end":18},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":284413,"byte_end":284417,"line_start":62,"line_end":62,"column_start":6,"column_end":10},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285760,"byte_end":285764,"line_start":111,"line_end":111,"column_start":14,"column_end":18},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":285921,"byte_end":285925,"line_start":120,"line_end":120,"column_start":14,"column_end":18},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286088,"byte_end":286092,"line_start":128,"line_end":128,"column_start":20,"column_end":24},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286210,"byte_end":286214,"line_start":134,"line_end":134,"column_start":14,"column_end":18},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286377,"byte_end":286381,"line_start":142,"line_end":142,"column_start":20,"column_end":24},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286504,"byte_end":286508,"line_start":148,"line_end":148,"column_start":19,"column_end":23},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":286708,"byte_end":286712,"line_start":157,"line_end":157,"column_start":19,"column_end":23},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":287282,"byte_end":287286,"line_start":184,"line_end":184,"column_start":25,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":287461,"byte_end":287465,"line_start":191,"line_end":191,"column_start":25,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":287634,"byte_end":287638,"line_start":198,"line_end":198,"column_start":19,"column_end":23},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":287838,"byte_end":287842,"line_start":207,"line_end":207,"column_start":19,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288047,"byte_end":288051,"line_start":216,"line_end":216,"column_start":14,"column_end":18},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288272,"byte_end":288276,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288451,"byte_end":288455,"line_start":232,"line_end":232,"column_start":25,"column_end":29},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288619,"byte_end":288623,"line_start":239,"line_end":239,"column_start":14,"column_end":18},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288786,"byte_end":288790,"line_start":247,"line_end":247,"column_start":20,"column_end":24},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/time.rs","byte_start":288911,"byte_end":288915,"line_start":253,"line_end":253,"column_start":18,"column_end":22},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3907},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290669,"byte_end":290676,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":290832,"byte_end":290839,"line_start":62,"line_end":62,"column_start":26,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":291967,"byte_end":291974,"line_start":102,"line_end":102,"column_start":22,"column_end":29},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292209,"byte_end":292216,"line_start":113,"line_end":113,"column_start":34,"column_end":41},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292344,"byte_end":292351,"line_start":120,"line_end":120,"column_start":22,"column_end":29},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292586,"byte_end":292593,"line_start":131,"line_end":131,"column_start":34,"column_end":41},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292721,"byte_end":292728,"line_start":138,"line_end":138,"column_start":22,"column_end":29},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":292973,"byte_end":292980,"line_start":149,"line_end":149,"column_start":44,"column_end":51},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293101,"byte_end":293108,"line_start":156,"line_end":156,"column_start":22,"column_end":29},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293353,"byte_end":293360,"line_start":167,"line_end":167,"column_start":44,"column_end":51},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293493,"byte_end":293500,"line_start":174,"line_end":174,"column_start":34,"column_end":41},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293674,"byte_end":293682,"line_start":185,"line_end":185,"column_start":6,"column_end":14},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":293997,"byte_end":294005,"line_start":198,"line_end":198,"column_start":6,"column_end":14},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector2.rs","byte_start":294322,"byte_end":294330,"line_start":211,"line_end":211,"column_start":6,"column_end":14},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":296125,"byte_end":296132,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":297530,"byte_end":297537,"line_start":98,"line_end":98,"column_start":22,"column_end":29},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":297803,"byte_end":297810,"line_start":110,"line_end":110,"column_start":34,"column_end":41},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":297963,"byte_end":297970,"line_start":118,"line_end":118,"column_start":22,"column_end":29},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":298236,"byte_end":298243,"line_start":130,"line_end":130,"column_start":34,"column_end":41},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":298396,"byte_end":298403,"line_start":138,"line_end":138,"column_start":22,"column_end":29},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":298679,"byte_end":298686,"line_start":150,"line_end":150,"column_start":44,"column_end":51},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":298830,"byte_end":298837,"line_start":158,"line_end":158,"column_start":22,"column_end":29},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":299113,"byte_end":299120,"line_start":170,"line_end":170,"column_start":44,"column_end":51},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":299276,"byte_end":299283,"line_start":178,"line_end":178,"column_start":34,"column_end":41},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":299478,"byte_end":299485,"line_start":190,"line_end":190,"column_start":29,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3999},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/system/vector3.rs","byte_start":299683,"byte_end":299691,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":304239,"byte_end":304246,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":305631,"byte_end":305638,"line_start":78,"line_end":78,"column_start":15,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context.rs","byte_start":305809,"byte_end":305816,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":308757,"byte_end":308772,"line_start":50,"line_end":50,"column_start":6,"column_end":21},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/context_settings.rs","byte_start":311110,"byte_end":311125,"line_start":122,"line_end":122,"column_start":18,"column_end":33},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4081},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312610,"byte_end":312616,"line_start":28,"line_end":28,"column_start":18,"column_end":24},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4100},"to":{"krate":0,"index":2527}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/cursor.rs","byte_start":312761,"byte_end":312767,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/event.rs","byte_start":324859,"byte_end":324864,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/joystick.rs","byte_start":332805,"byte_end":332809,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":336681,"byte_end":336684,"line_start":9,"line_end":9,"column_start":6,"column_end":9},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/keyboard.rs","byte_start":345056,"byte_end":345059,"line_start":218,"line_end":218,"column_start":6,"column_end":9},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":347511,"byte_end":347517,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348384,"byte_end":348389,"line_start":67,"line_end":67,"column_start":6,"column_end":11},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/mouse.rs","byte_start":348676,"byte_end":348682,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/sensor.rs","byte_start":352748,"byte_end":352752,"line_start":79,"line_end":79,"column_start":6,"column_end":10},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/style.rs","byte_start":354443,"byte_end":354448,"line_start":22,"line_end":22,"column_start":18,"column_end":23},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4342},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":359851,"byte_end":359860,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":362288,"byte_end":362297,"line_start":127,"line_end":127,"column_start":27,"column_end":36},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4454},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/video_mode.rs","byte_start":362466,"byte_end":362475,"line_start":134,"line_end":134,"column_start":18,"column_end":27},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4454},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":364707,"byte_end":364713,"line_start":64,"line_end":64,"column_start":6,"column_end":12},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/sfml-0.16.0/src/window/window.rs","byte_start":378907,"byte_end":378913,"line_start":430,"line_end":430,"column_start":15,"column_end":21},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4474},"to":{"krate":2,"index":3239}}]}
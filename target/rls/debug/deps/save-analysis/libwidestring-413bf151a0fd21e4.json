{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3","program":"/home/pc2/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","widestring","/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=413bf151a0fd21e4","-C","extra-filename=-413bf151a0fd21e4","--out-dir","/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps","-L","dependency=/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/pc2/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pc2/Rust/convex-hull-gift-wrapping/target/rls/debug/deps/libwidestring-413bf151a0fd21e4.rmeta"},"prelude":{"crate_id":{"name":"widestring","disambiguator":[13887749936414837523,0]},"crate_root":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src","external_crates":[{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}}],"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":0,"byte_end":11268,"line_start":1,"line_end":238,"column_start":1,"column_end":25}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10523,"byte_end":10524,"line_start":210,"line_end":210,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"MissingNulError, UCStr","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10577,"byte_end":10578,"line_start":212,"line_end":212,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"UCString","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10601,"byte_end":10602,"line_start":213,"line_end":213,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"UStr, FromUtf32Error","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10654,"byte_end":10655,"line_start":215,"line_end":215,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"UString","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":0,"byte_end":11268,"line_start":1,"line_end":238,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":19},{"krate":0,"index":94},{"krate":0,"index":334},{"krate":0,"index":401},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610}],"decl_id":null,"docs":" A wide string FFI module for converting to and from wide string variants.","sig":null,"attributes":[{"value":"/ A wide string FFI module for converting to and from wide string variants.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":78,"byte_end":81,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides multiple types of wide strings: `U16String`, `U16CString`, `U32String`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":82,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ and `U32CString`. These types are backed by two generic implementations parameterized by","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":179,"byte_end":271,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ element size: `UString<C>` and `UCString<C>`. The `UCString` types are analogous to the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":272,"byte_end":363,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ standard `CString` FFI type, while the `UString` types are analogous to `OsString`. Otherwise,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":364,"byte_end":462,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/ `U16` and `U32` types differ only in character width and encoding methods.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":463,"byte_end":541,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":542,"byte_end":545,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For `U16String` and `U32String`, no guarantees are made about the underlying string data; they","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":546,"byte_end":644,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ are simply a sequence of UTF-16 *code units* or UTF-32 code points, both of which may be","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":645,"byte_end":737,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ ill-formed or contain nul values. `U16CString` and `U32CString`, on the other hand, are aware","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":738,"byte_end":835,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ of nul values and are guaranteed to be terminated with a nul value (unless unchecked methods","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":836,"byte_end":932,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ are used to construct the strings). Because `U16CString` and `U32CString` are C-style,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":933,"byte_end":1023,"line_start":13,"line_end":13,"column_start":1,"column_end":91}},{"value":"/ nul-terminated strings, they will have no interior nul values. All four string types may still","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1024,"byte_end":1122,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ have unpaired UTF-16 surrogates or invalid UTF-32 code points; ill-formed data is preserved","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1123,"byte_end":1218,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ until conversion to a basic Rust `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1219,"byte_end":1265,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1266,"byte_end":1269,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `U16String` or `U32String` when you simply need to pass-through strings, or when you know","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1270,"byte_end":1367,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ or don't care if you're not dealing with a nul-terminated string, such as when string lengths","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1368,"byte_end":1465,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ are provided and you are only reading strings from FFI, not writing them out to a FFI.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1466,"byte_end":1556,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1557,"byte_end":1560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Use `U16CString` or `U32CString` when you must properly handle nul values, and must deal with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1561,"byte_end":1658,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ nul-terminated C-style wide strings, such as when you pass strings into FFI functions.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1659,"byte_end":1749,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1750,"byte_end":1753,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Relationship to other Rust Strings","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1754,"byte_end":1794,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1795,"byte_end":1798,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Standard Rust strings `String` and `str` are well-formed Unicode data encoded as UTF-8. The","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1799,"byte_end":1894,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ standard strings provide proper handling of Unicode and ensure strong safety guarantees.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1895,"byte_end":1987,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1988,"byte_end":1991,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `CString` and `CStr` are strings used for C FFI. They handle nul-terminated C-style strings.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":1992,"byte_end":2088,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"/ However, they do not have a builtin encoding, and conversions between C-style and other Rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2089,"byte_end":2185,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ strings must specifically encode and decode the strings, and handle possibly invalid encoding","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2186,"byte_end":2283,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ data. They are safe to use only in passing string-like data back and forth from C APIs but do","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2284,"byte_end":2381,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ not provide any other guarantees, so may not be well-formed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2382,"byte_end":2446,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2447,"byte_end":2450,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ `OsString` and `OsStr` are also strings for use with FFI. Unlike `CString`, they do no special","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2451,"byte_end":2549,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ handling of nul values, but instead have an OS-specified encoding. While, for example, on Linux","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2550,"byte_end":2649,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"/ systems this is usually the UTF-8 encoding, this is not the case for every platform. The","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2650,"byte_end":2742,"line_start":38,"line_end":38,"column_start":1,"column_end":93}},{"value":"/ encoding may not even be 8-bit: on Windows, `OsString` uses a malformed encoding sometimes","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2743,"byte_end":2837,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ referred to as \"WTF-8\". In any case, like `CString`, `OsString` has no additional guarantees","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2838,"byte_end":2934,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ and may not be well-formed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2935,"byte_end":2966,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2967,"byte_end":2970,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Due to the loss of safety of these other string types, conversion to standard Rust `String` is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":2971,"byte_end":3069,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/ lossy, and may require knowledge of the underlying encoding, including platform-specific","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3070,"byte_end":3162,"line_start":44,"line_end":44,"column_start":1,"column_end":93}},{"value":"/ quirks.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3163,"byte_end":3174,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3175,"byte_end":3178,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The wide strings in this crate are roughly based on the principles of the string types in","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3179,"byte_end":3272,"line_start":47,"line_end":47,"column_start":1,"column_end":94}},{"value":"/ `std::ffi`, though there are differences. `U16String`, `U32String`, `U16Str`, and `U32Str` are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3273,"byte_end":3371,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ roughly similar in role to `OsString` and `OsStr`, while `U16CString`, `U32CString`, `U16CStr`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3372,"byte_end":3471,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"/ and `U32CStr` are roughly similar in role to `CString` and `CStr`. Conversion to FFI string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3472,"byte_end":3567,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ types is generally very straight forward and safe, while conversion directly between standard","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3568,"byte_end":3665,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ Rust `String` is a lossy conversion just as `OsString` is.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3666,"byte_end":3728,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3729,"byte_end":3732,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ `U16String` and `U16CString` are treated as though they use UTF-16 encoding, even if they may","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3733,"byte_end":3830,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ contain unpaired surrogates. `U32String` and `U32CString` are treated as though they use UTF-32","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3831,"byte_end":3930,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ encoding, even if they may contain values outside the valid Unicode character range.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":3931,"byte_end":4019,"line_start":56,"line_end":56,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Remarks on UTF-16 Code Units","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4024,"byte_end":4058,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4059,"byte_end":4062,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ *Code units* are the 16-bit units that comprise UTF-16 sequences. Code units","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4063,"byte_end":4143,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ can specify Unicode code points either as single units or in *surrogate pairs*. Because every","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4144,"byte_end":4241,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/ code unit might be part of a surrogate pair, many regular string operations, including","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4242,"byte_end":4332,"line_start":62,"line_end":62,"column_start":1,"column_end":91}},{"value":"/ indexing into a wide string, writing to a wide string, or even iterating a wide string should","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4333,"byte_end":4430,"line_start":63,"line_end":63,"column_start":1,"column_end":98}},{"value":"/ be handled with care and are greatly discouraged. Some operations have safer alternatives","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4431,"byte_end":4524,"line_start":64,"line_end":64,"column_start":1,"column_end":94}},{"value":"/ provided, such as Unicode code point iteration instead of code unit iteration. Always keep in","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4525,"byte_end":4622,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/ mind that the number of code units (`len()`) of a wide string is **not** equivalent to the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4623,"byte_end":4717,"line_start":66,"line_end":66,"column_start":1,"column_end":95}},{"value":"/ number of Unicode characters in the string, merely the length of the UTF-16 encoding sequence.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4718,"byte_end":4816,"line_start":67,"line_end":67,"column_start":1,"column_end":99}},{"value":"/ In fact, Unicode code points do not even have a one-to-one mapping with characters!","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4817,"byte_end":4904,"line_start":68,"line_end":68,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4905,"byte_end":4908,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ UTF-32 simply encodes Unicode code points as-is in 32-bit values, but Unicode character code","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":4909,"byte_end":5005,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ points are reserved only for 21-bits. Again, Unicode code points do not have a one-to-one","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5006,"byte_end":5099,"line_start":71,"line_end":71,"column_start":1,"column_end":94}},{"value":"/ mapping with the concept of a visual character glyph.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5100,"byte_end":5157,"line_start":72,"line_end":72,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5158,"byte_end":5161,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # FFI with C/C++ `wchar_t`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5162,"byte_end":5192,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5193,"byte_end":5196,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ C/C++'s `wchar_t` (and C++'s corresponding `widestring`) varies in size depending on compiler","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5197,"byte_end":5294,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ and platform. Typically, `wchar_t` is 16-bits on Windows and 32-bits on most Unix-based","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5295,"byte_end":5386,"line_start":77,"line_end":77,"column_start":1,"column_end":92}},{"value":"/ platforms. For convenience when using `wchar_t`-based FFI's, type aliases for the corresponding","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5387,"byte_end":5486,"line_start":78,"line_end":78,"column_start":1,"column_end":100}},{"value":"/ string types are provided: `WideString` aliases `U16String` on Windows or `U32String`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5487,"byte_end":5576,"line_start":79,"line_end":79,"column_start":1,"column_end":90}},{"value":"/ elsewhere, `WideCString` aliases `U16CString` or `U32CString`, etc. The `WideChar` alias","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5577,"byte_end":5669,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"/ is also provided, aliasing `u16` or `u32`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5670,"byte_end":5716,"line_start":81,"line_end":81,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5717,"byte_end":5720,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ When not interacting with a FFI using `wchar_t`, it is recommended to use the string types","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5721,"byte_end":5815,"line_start":83,"line_end":83,"column_start":1,"column_end":95}},{"value":"/ directly rather than via the wide alias.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5816,"byte_end":5860,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5861,"byte_end":5864,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This crate supports `no_std` when default features are disabled. The `std` and `alloc` features","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5865,"byte_end":5964,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ (enabled by default) enable the `U16String`, `U32String`, `U16CString`, and `U32CString` types","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":5965,"byte_end":6063,"line_start":87,"line_end":87,"column_start":1,"column_end":99}},{"value":"/ and aliases. Other types do not require allocation and can be used in a `no_std` environment.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6064,"byte_end":6161,"line_start":88,"line_end":88,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6162,"byte_end":6165,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6166,"byte_end":6180,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6181,"byte_end":6184,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The following example uses `U16String` to get Windows error messages, since `FormatMessageW`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6185,"byte_end":6281,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"/ returns a string length for us and we don't need to pass error messages into other FFI","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6282,"byte_end":6372,"line_start":93,"line_end":93,"column_start":1,"column_end":91}},{"value":"/ functions so we don't need to worry about nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6373,"byte_end":6430,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6431,"byte_end":6434,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6435,"byte_end":6446,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(not(windows))]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6447,"byte_end":6473,"line_start":97,"line_end":97,"column_start":1,"column_end":27}},{"value":"/ # fn main() {}","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6474,"byte_end":6492,"line_start":98,"line_end":98,"column_start":1,"column_end":19}},{"value":"/ # extern crate winapi;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6493,"byte_end":6519,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"/ # extern crate widestring;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6520,"byte_end":6550,"line_start":100,"line_end":100,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(windows)]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6551,"byte_end":6572,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6573,"byte_end":6590,"line_start":102,"line_end":102,"column_start":1,"column_end":18}},{"value":"/ use winapi::um::winbase::{FormatMessageW, LocalFree, FORMAT_MESSAGE_FROM_SYSTEM,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6591,"byte_end":6675,"line_start":103,"line_end":103,"column_start":1,"column_end":85}},{"value":"/                           FORMAT_MESSAGE_ALLOCATE_BUFFER, FORMAT_MESSAGE_IGNORE_INSERTS};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6676,"byte_end":6769,"line_start":104,"line_end":104,"column_start":1,"column_end":94}},{"value":"/ use winapi::shared::ntdef::LPWSTR;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6770,"byte_end":6808,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/ use winapi::shared::minwindef::HLOCAL;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6809,"byte_end":6851,"line_start":106,"line_end":106,"column_start":1,"column_end":43}},{"value":"/ use std::ptr;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6852,"byte_end":6869,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6870,"byte_end":6900,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/ # use winapi::shared::minwindef::DWORD;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6901,"byte_end":6944,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/ # let error_code: DWORD = 0;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6945,"byte_end":6977,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6978,"byte_end":6981,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ let U16Str: U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":6982,"byte_end":7008,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ unsafe {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7009,"byte_end":7021,"line_start":113,"line_end":113,"column_start":1,"column_end":13}},{"value":"/     // First, get a string buffer from some windows api such as FormatMessageW...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7022,"byte_end":7107,"line_start":114,"line_end":114,"column_start":1,"column_end":86}},{"value":"/     let mut buffer: LPWSTR = ptr::null_mut();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7108,"byte_end":7157,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/     let strlen = FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7158,"byte_end":7222,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"/                                 FORMAT_MESSAGE_ALLOCATE_BUFFER |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7223,"byte_end":7291,"line_start":117,"line_end":117,"column_start":1,"column_end":69}},{"value":"/                                 FORMAT_MESSAGE_IGNORE_INSERTS,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7292,"byte_end":7358,"line_start":118,"line_end":118,"column_start":1,"column_end":67}},{"value":"/                                 ptr::null(),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7359,"byte_end":7407,"line_start":119,"line_end":119,"column_start":1,"column_end":49}},{"value":"/                                 error_code, // error code from GetLastError()","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7408,"byte_end":7489,"line_start":120,"line_end":120,"column_start":1,"column_end":82}},{"value":"/                                 0,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7490,"byte_end":7528,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/                                 (&mut buffer as *mut LPWSTR) as LPWSTR,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7529,"byte_end":7604,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                                 0,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7605,"byte_end":7643,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"/                                 ptr::null_mut());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7644,"byte_end":7697,"line_start":124,"line_end":124,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7698,"byte_end":7701,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/     // Get the buffer as a wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7702,"byte_end":7744,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/     U16Str = U16String::from_ptr(buffer, strlen as usize);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7745,"byte_end":7807,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"/     // Since U16String creates an owned copy, it's safe to free original buffer now","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7808,"byte_end":7895,"line_start":128,"line_end":128,"column_start":1,"column_end":88}},{"value":"/     // If you didn't want an owned copy, you could use &U16Str.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7896,"byte_end":7963,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/     LocalFree(buffer as HLOCAL);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":7964,"byte_end":8000,"line_start":130,"line_end":130,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8001,"byte_end":8006,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/ // Convert to a regular Rust String and use it to your heart's desire!","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8007,"byte_end":8081,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ let message = U16Str.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8082,"byte_end":8125,"line_start":133,"line_end":133,"column_start":1,"column_end":44}},{"value":"/ # assert_eq!(message, \"The operation completed successfully.\\r\\n\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8126,"byte_end":8197,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8198,"byte_end":8205,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8206,"byte_end":8213,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8214,"byte_end":8217,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The following example is the functionally the same, only using `U16CString` instead.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8218,"byte_end":8306,"line_start":138,"line_end":138,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8307,"byte_end":8310,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8311,"byte_end":8322,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(not(windows))]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8323,"byte_end":8349,"line_start":141,"line_end":141,"column_start":1,"column_end":27}},{"value":"/ # fn main() {}","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8350,"byte_end":8368,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/ # extern crate winapi;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8369,"byte_end":8395,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/ # extern crate widestring;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8396,"byte_end":8426,"line_start":144,"line_end":144,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(windows)]","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8427,"byte_end":8448,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8449,"byte_end":8466,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/ use winapi::um::winbase::{FormatMessageW, LocalFree, FORMAT_MESSAGE_FROM_SYSTEM,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8467,"byte_end":8551,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/                           FORMAT_MESSAGE_ALLOCATE_BUFFER, FORMAT_MESSAGE_IGNORE_INSERTS};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8552,"byte_end":8645,"line_start":148,"line_end":148,"column_start":1,"column_end":94}},{"value":"/ use winapi::shared::ntdef::LPWSTR;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8646,"byte_end":8684,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"/ use winapi::shared::minwindef::HLOCAL;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8685,"byte_end":8727,"line_start":150,"line_end":150,"column_start":1,"column_end":43}},{"value":"/ use std::ptr;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8728,"byte_end":8745,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8746,"byte_end":8777,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/ # use winapi::shared::minwindef::DWORD;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8778,"byte_end":8821,"line_start":153,"line_end":153,"column_start":1,"column_end":44}},{"value":"/ # let error_code: DWORD = 0;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8822,"byte_end":8854,"line_start":154,"line_end":154,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8855,"byte_end":8858,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let U16Str: U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8859,"byte_end":8886,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"/ unsafe {","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8887,"byte_end":8899,"line_start":157,"line_end":157,"column_start":1,"column_end":13}},{"value":"/     // First, get a string buffer from some windows api such as FormatMessageW...","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8900,"byte_end":8985,"line_start":158,"line_end":158,"column_start":1,"column_end":86}},{"value":"/     let mut buffer: LPWSTR = ptr::null_mut();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":8986,"byte_end":9035,"line_start":159,"line_end":159,"column_start":1,"column_end":50}},{"value":"/     FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9036,"byte_end":9087,"line_start":160,"line_end":160,"column_start":1,"column_end":52}},{"value":"/                    FORMAT_MESSAGE_ALLOCATE_BUFFER |","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9088,"byte_end":9143,"line_start":161,"line_end":161,"column_start":1,"column_end":56}},{"value":"/                    FORMAT_MESSAGE_IGNORE_INSERTS,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9144,"byte_end":9197,"line_start":162,"line_end":162,"column_start":1,"column_end":54}},{"value":"/                    ptr::null(),","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9198,"byte_end":9233,"line_start":163,"line_end":163,"column_start":1,"column_end":36}},{"value":"/                    error_code, // error code from GetLastError()","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9234,"byte_end":9302,"line_start":164,"line_end":164,"column_start":1,"column_end":69}},{"value":"/                    0,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9303,"byte_end":9328,"line_start":165,"line_end":165,"column_start":1,"column_end":26}},{"value":"/                    (&mut buffer as *mut LPWSTR) as LPWSTR,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9329,"byte_end":9391,"line_start":166,"line_end":166,"column_start":1,"column_end":63}},{"value":"/                    0,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9392,"byte_end":9417,"line_start":167,"line_end":167,"column_start":1,"column_end":26}},{"value":"/                    ptr::null_mut());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9418,"byte_end":9458,"line_start":168,"line_end":168,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9459,"byte_end":9462,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     // Get the buffer as a wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9463,"byte_end":9505,"line_start":170,"line_end":170,"column_start":1,"column_end":43}},{"value":"/     U16Str = U16CString::from_ptr_str(buffer);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9506,"byte_end":9556,"line_start":171,"line_end":171,"column_start":1,"column_end":51}},{"value":"/     // Since U16CString creates an owned copy, it's safe to free original buffer now","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9557,"byte_end":9645,"line_start":172,"line_end":172,"column_start":1,"column_end":89}},{"value":"/     // If you didn't want an owned copy, you could use &U16CStr.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9646,"byte_end":9714,"line_start":173,"line_end":173,"column_start":1,"column_end":69}},{"value":"/     LocalFree(buffer as HLOCAL);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9715,"byte_end":9751,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9752,"byte_end":9757,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/ // Convert to a regular Rust String and use it to your heart's desire!","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9758,"byte_end":9832,"line_start":176,"line_end":176,"column_start":1,"column_end":75}},{"value":"/ let message = U16Str.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9833,"byte_end":9876,"line_start":177,"line_end":177,"column_start":1,"column_end":44}},{"value":"/ # assert_eq!(message, \"The operation completed successfully.\\r\\n\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9877,"byte_end":9948,"line_start":178,"line_end":178,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9949,"byte_end":9956,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9957,"byte_end":9964,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"deny(future_incompatible)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9966,"byte_end":9995,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"warn(unused, anonymous_parameters, missing_docs,\n       missing_copy_implementations, missing_debug_implementations,\n       trivial_casts, trivial_numeric_casts)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":9996,"byte_end":10177,"line_start":183,"line_end":191,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12267,"byte_end":12282,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"MissingNulError","qualname":"::ucstr::MissingNulError","value":"MissingNulError {  }","parent":null,"children":[{"krate":0,"index":613}],"decl_id":null,"docs":" An error returned from `UCString` and `UCStr` to indicate that a terminating nul value\n was missing.","sig":null,"attributes":[{"value":"/ An error returned from `UCString` and `UCStr` to indicate that a terminating nul value","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12007,"byte_end":12097,"line_start":19,"line_end":19,"column_start":1,"column_end":91}},{"value":"/ was missing.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12098,"byte_end":12114,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12115,"byte_end":12118,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The error optionally returns the ownership of the invalid vector whenever a vector was owned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12119,"byte_end":12216,"line_start":22,"line_end":22,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12866,"byte_end":12874,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MissingNulError<C>>::into_vec","value":"pub fn into_vec(Self) -> Option<Vec<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error, returning the underlying vector of `u16` values which generated the\n error in the first place.\n","sig":null,"attributes":[{"value":"/ Consumes this error, returning the underlying vector of `u16` values which generated the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12698,"byte_end":12790,"line_start":44,"line_end":44,"column_start":5,"column_end":97}},{"value":"/ error in the first place.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12795,"byte_end":12824,"line_start":45,"line_end":45,"column_start":5,"column_end":34}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12829,"byte_end":12854,"line_start":46,"line_end":46,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14074,"byte_end":14079,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"UCStr","qualname":"::ucstr::UCStr","value":"UCStr {  }","parent":null,"children":[{"krate":0,"index":633}],"decl_id":null,"docs":" C-style wide string reference for `UCString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `UCString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13286,"byte_end":13335,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13336,"byte_end":13339,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ `UCStr` is aware of nul values. Unless unchecked conversions are used, all `UCStr`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13340,"byte_end":13426,"line_start":67,"line_end":67,"column_start":1,"column_end":87}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13427,"byte_end":13525,"line_start":68,"line_end":68,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 or UTF-32 data. These strings are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13526,"byte_end":13622,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/ intended to be used with FFI functions such as Windows API that may require nul-terminated","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13623,"byte_end":13717,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/ strings.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13718,"byte_end":13730,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13731,"byte_end":13734,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ `UCStr` can be converted to and from many other string types, including `UString`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13735,"byte_end":13821,"line_start":73,"line_end":73,"column_start":1,"column_end":87}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13822,"byte_end":13892,"line_start":74,"line_end":74,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13893,"byte_end":13896,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16CStr` or `U32CStr` or `WideCStr` to using","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13897,"byte_end":13983,"line_start":76,"line_end":76,"column_start":1,"column_end":87}},{"value":"/ this type directly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13984,"byte_end":14007,"line_start":77,"line_end":77,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14188,"byte_end":14191,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<UCStr<C>>::new","value":"pub fn new<S: AsRef<UCStr<C>> + ?Sized>(&S) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces a value into a `UCStr`.\n","sig":null,"attributes":[{"value":"/ Coerces a value into a `UCStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14141,"byte_end":14176,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15247,"byte_end":15259,"line_start":111,"line_end":111,"column_start":19,"column_end":31},"name":"from_ptr_str","qualname":"<UCStr<C>>::from_ptr_str","value":"pub unsafe fn from_ptr_str<'a>(*const C) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a nul-terminated string pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14269,"byte_end":14330,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14335,"byte_end":14338,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14343,"byte_end":14436,"line_start":91,"line_end":91,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14441,"byte_end":14535,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14540,"byte_end":14543,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14548,"byte_end":14560,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14565,"byte_end":14568,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14573,"byte_end":14666,"line_start":96,"line_end":96,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14671,"byte_end":14746,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14751,"byte_end":14754,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14759,"byte_end":14784,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14789,"byte_end":14792,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14797,"byte_end":14809,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14814,"byte_end":14817,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14822,"byte_end":14862,"line_start":103,"line_end":103,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14867,"byte_end":14870,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14875,"byte_end":14887,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14892,"byte_end":14895,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14900,"byte_end":14990,"line_start":107,"line_end":107,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14995,"byte_end":15085,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15090,"byte_end":15185,"line_start":109,"line_end":109,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15190,"byte_end":15228,"line_start":110,"line_end":110,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16791,"byte_end":16808,"line_start":148,"line_end":148,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCStr<C>>::from_ptr_with_nul","value":"pub unsafe fn from_ptr_with_nul<'a>(*const C, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15543,"byte_end":15595,"line_start":121,"line_end":121,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15600,"byte_end":15603,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15608,"byte_end":15695,"line_start":123,"line_end":123,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15700,"byte_end":15796,"line_start":124,"line_end":124,"column_start":5,"column_end":101}},{"value":"/ `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15801,"byte_end":15867,"line_start":125,"line_end":125,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15872,"byte_end":15875,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15880,"byte_end":15892,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15897,"byte_end":15900,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":15905,"byte_end":15999,"line_start":129,"line_end":129,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16004,"byte_end":16017,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16022,"byte_end":16025,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null, even for zero `len`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16030,"byte_end":16076,"line_start":132,"line_end":132,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16081,"byte_end":16084,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values will","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16089,"byte_end":16181,"line_start":134,"line_end":134,"column_start":5,"column_end":97}},{"value":"/ result in an invalid `UCStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16186,"byte_end":16219,"line_start":135,"line_end":135,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16224,"byte_end":16227,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16232,"byte_end":16244,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16249,"byte_end":16252,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null or if a nul value is not found at offset `len` of `p`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16257,"byte_end":16351,"line_start":139,"line_end":139,"column_start":5,"column_end":99}},{"value":"/ Only pointers with a nul terminator are valid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16356,"byte_end":16406,"line_start":140,"line_end":140,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16411,"byte_end":16414,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16419,"byte_end":16431,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16436,"byte_end":16439,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16444,"byte_end":16534,"line_start":144,"line_end":144,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16539,"byte_end":16629,"line_start":145,"line_end":145,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16634,"byte_end":16729,"line_start":146,"line_end":146,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":16734,"byte_end":16772,"line_start":147,"line_end":147,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17395,"byte_end":17414,"line_start":162,"line_end":162,"column_start":12,"column_end":31},"name":"from_slice_with_nul","qualname":"<UCStr<C>>::from_slice_with_nul","value":"pub fn from_slice_with_nul(&[C]) -> Result<&Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCStr` from a slice of values that has a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `UCStr` from a slice of values that has a nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17007,"byte_end":17081,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17086,"byte_end":17089,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17094,"byte_end":17187,"line_start":156,"line_end":156,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the `UCStr` slice will be truncated to that nul.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17192,"byte_end":17275,"line_start":157,"line_end":157,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17280,"byte_end":17283,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17288,"byte_end":17301,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17306,"byte_end":17309,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ If there are no no nul values in the slice, an error is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17314,"byte_end":17383,"line_start":161,"line_end":161,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18074,"byte_end":18103,"line_start":177,"line_end":177,"column_start":19,"column_end":48},"name":"from_slice_with_nul_unchecked","qualname":"<UCStr<C>>::from_slice_with_nul_unchecked","value":"pub unsafe fn from_slice_with_nul_unchecked(&[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCStr` from a slice of values that has a nul terminator. No\n checking for nul values is performed.","sig":null,"attributes":[{"value":"/ Constructs a `UCStr` from a slice of values that has a nul terminator. No","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17692,"byte_end":17769,"line_start":169,"line_end":169,"column_start":5,"column_end":82}},{"value":"/ checking for nul values is performed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17774,"byte_end":17815,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17820,"byte_end":17823,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17828,"byte_end":17840,"line_start":172,"line_end":172,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17845,"byte_end":17848,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid `UCStr` values when the slice","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17853,"byte_end":17941,"line_start":174,"line_end":174,"column_start":5,"column_end":93}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":17946,"byte_end":18033,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/ in the slice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18038,"byte_end":18055,"line_start":176,"line_end":176,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18306,"byte_end":18317,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"to_ucstring","qualname":"<UCStr<C>>::to_ucstring","value":"pub fn to_ucstring(&Self) -> crate::UCString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to an new owned `UString`.\n","sig":null,"attributes":[{"value":"/ Copies the wide string to an new owned `UString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18211,"byte_end":18264,"line_start":182,"line_end":182,"column_start":5,"column_end":58}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18269,"byte_end":18294,"line_start":183,"line_end":183,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19668,"byte_end":19678,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"to_ustring","qualname":"<UCStr<C>>::to_ustring","value":"pub fn to_ustring(&Self) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a new owned `UString`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a new owned `UString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18447,"byte_end":18499,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18504,"byte_end":18507,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The `UString` will **not** have a nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18512,"byte_end":18565,"line_start":190,"line_end":190,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18570,"byte_end":18573,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18578,"byte_end":18592,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18597,"byte_end":18600,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18605,"byte_end":18616,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18621,"byte_end":18652,"line_start":195,"line_end":195,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U16CString::from_str(\"MyString\").unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18657,"byte_end":18715,"line_start":196,"line_end":196,"column_start":5,"column_end":63}},{"value":"/ // Convert U16CString to a U16String","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18720,"byte_end":18760,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/ let wstr = wcstr.to_ustring();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18765,"byte_end":18799,"line_start":198,"line_end":198,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18804,"byte_end":18807,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ // U16CString will have a terminating nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18812,"byte_end":18857,"line_start":200,"line_end":200,"column_start":5,"column_end":50}},{"value":"/ let wcvec = wcstr.into_vec_with_nul();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18862,"byte_end":18904,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(wcvec[wcvec.len()-1], 0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18909,"byte_end":18949,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/ // The resulting U16String will not have the terminating nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":18954,"byte_end":19018,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/ let wvec = wstr.into_vec();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19023,"byte_end":19054,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/ assert_ne!(wvec[wvec.len()-1], 0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19059,"byte_end":19097,"line_start":205,"line_end":205,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19102,"byte_end":19109,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19114,"byte_end":19117,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19122,"byte_end":19133,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19138,"byte_end":19169,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U32CString::from_str(\"MyString\").unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19174,"byte_end":19232,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/ // Convert U32CString to a U32String","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19237,"byte_end":19277,"line_start":211,"line_end":211,"column_start":5,"column_end":45}},{"value":"/ let wstr = wcstr.to_ustring();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19282,"byte_end":19316,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19321,"byte_end":19324,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ // U32CString will have a terminating nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19329,"byte_end":19374,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/ let wcvec = wcstr.into_vec_with_nul();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19379,"byte_end":19421,"line_start":215,"line_end":215,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(wcvec[wcvec.len()-1], 0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19426,"byte_end":19466,"line_start":216,"line_end":216,"column_start":5,"column_end":45}},{"value":"/ // The resulting U32String will not have the terminating nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19471,"byte_end":19535,"line_start":217,"line_end":217,"column_start":5,"column_end":69}},{"value":"/ let wvec = wstr.into_vec();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19540,"byte_end":19571,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/ assert_ne!(wvec[wvec.len()-1], 0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19576,"byte_end":19614,"line_start":219,"line_end":219,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19619,"byte_end":19626,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19631,"byte_end":19656,"line_start":221,"line_end":221,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19892,"byte_end":19900,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UCStr<C>>::as_slice","value":"pub fn as_slice(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string.","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19770,"byte_end":19813,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19818,"byte_end":19821,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The slice will **not** include the nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19826,"byte_end":19880,"line_start":228,"line_end":228,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20048,"byte_end":20065,"line_start":234,"line_end":234,"column_start":12,"column_end":29},"name":"as_slice_with_nul","qualname":"<UCStr<C>>::as_slice_with_nul","value":"pub fn as_slice_with_nul(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string, including the nul terminator.\n","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string, including the nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":19963,"byte_end":20036,"line_start":233,"line_end":233,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20256,"byte_end":20262,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<UCStr<C>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const C","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the wide string.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the wide string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20114,"byte_end":20159,"line_start":238,"line_end":238,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20164,"byte_end":20167,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The pointer is valid only as long as the lifetime of this reference.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20172,"byte_end":20244,"line_start":240,"line_end":240,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20466,"byte_end":20469,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"len","qualname":"<UCStr<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the wide string as number of elements (**not** number of bytes)\n **not** including nul terminator.\n","sig":null,"attributes":[{"value":"/ Returns the length of the wide string as number of elements (**not** number of bytes)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20323,"byte_end":20412,"line_start":245,"line_end":245,"column_start":5,"column_end":94}},{"value":"/ **not** including nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20417,"byte_end":20454,"line_start":246,"line_end":246,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20628,"byte_end":20636,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UCStr<C>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this wide string contains no data (i.e. is only the nul terminator).\n","sig":null,"attributes":[{"value":"/ Returns whether this wide string contains no data (i.e. is only the nul terminator).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20528,"byte_end":20616,"line_start":251,"line_end":251,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21458,"byte_end":21471,"line_start":278,"line_end":278,"column_start":12,"column_end":25},"name":"into_ucstring","qualname":"<UCStr<C>>::into_ucstring","value":"pub fn into_ucstring(Box<Self>) -> crate::UCString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Box<UCStr>` into a `UCString` without copying or allocating.","sig":null,"attributes":[{"value":"/ Converts a `Box<UCStr>` into a `UCString` without copying or allocating.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20689,"byte_end":20765,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20770,"byte_end":20773,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20778,"byte_end":20792,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20797,"byte_end":20800,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20805,"byte_end":20812,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20817,"byte_end":20848,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20853,"byte_end":20856,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let v = vec![102u16, 111u16, 111u16]; // \"foo\"","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20861,"byte_end":20911,"line_start":263,"line_end":263,"column_start":5,"column_end":55}},{"value":"/ let c_string = U16CString::new(v.clone()).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20916,"byte_end":20971,"line_start":264,"line_end":264,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":20976,"byte_end":21020,"line_start":265,"line_end":265,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(boxed.into_ucstring(), U16CString::new(v).unwrap());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21025,"byte_end":21092,"line_start":266,"line_end":266,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21097,"byte_end":21104,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21109,"byte_end":21112,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21117,"byte_end":21124,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21129,"byte_end":21160,"line_start":270,"line_end":270,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21165,"byte_end":21168,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let v = vec![102u32, 111u32, 111u32]; // \"foo\"","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21173,"byte_end":21223,"line_start":272,"line_end":272,"column_start":5,"column_end":55}},{"value":"/ let c_string = U32CString::new(v.clone()).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21228,"byte_end":21283,"line_start":273,"line_end":273,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21288,"byte_end":21332,"line_start":274,"line_end":274,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(boxed.into_ucstring(), U32CString::new(v).unwrap());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21337,"byte_end":21404,"line_start":275,"line_end":275,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21409,"byte_end":21416,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21421,"byte_end":21446,"line_start":277,"line_end":277,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22612,"byte_end":22624,"line_start":313,"line_end":313,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UCStr<u16>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21858,"byte_end":21907,"line_start":293,"line_end":293,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21912,"byte_end":21915,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U16CStr`. Since `U16CStr` makes no guarantees that it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21920,"byte_end":22013,"line_start":295,"line_end":295,"column_start":5,"column_end":98}},{"value":"/ valid UTF-16, there is no guarantee that the resulting `OsString` will be valid data. The","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22018,"byte_end":22111,"line_start":296,"line_end":296,"column_start":5,"column_end":98}},{"value":"/ `OsString` will **not** have a nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22116,"byte_end":22166,"line_start":297,"line_end":297,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22171,"byte_end":22174,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22179,"byte_end":22193,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22198,"byte_end":22201,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22206,"byte_end":22217,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22222,"byte_end":22253,"line_start":302,"line_end":302,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22258,"byte_end":22285,"line_start":303,"line_end":303,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22290,"byte_end":22313,"line_start":304,"line_end":304,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22318,"byte_end":22361,"line_start":305,"line_end":305,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22366,"byte_end":22414,"line_start":306,"line_end":306,"column_start":5,"column_end":53}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22419,"byte_end":22465,"line_start":307,"line_end":307,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22470,"byte_end":22506,"line_start":308,"line_end":308,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22511,"byte_end":22514,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22519,"byte_end":22560,"line_start":310,"line_end":310,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22565,"byte_end":22572,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22577,"byte_end":22600,"line_start":312,"line_end":312,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23309,"byte_end":23318,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UCStr<u16>>::to_string","value":"pub fn to_string(&Self) -> Result<String, FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-16 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-16 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22722,"byte_end":22796,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22801,"byte_end":22804,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22809,"byte_end":22823,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22828,"byte_end":22831,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-16 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22836,"byte_end":22904,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22909,"byte_end":22912,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22917,"byte_end":22931,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22936,"byte_end":22939,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22944,"byte_end":22955,"line_start":325,"line_end":325,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22960,"byte_end":22991,"line_start":326,"line_end":326,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":22996,"byte_end":23019,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23024,"byte_end":23067,"line_start":328,"line_end":328,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23072,"byte_end":23120,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23125,"byte_end":23176,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23181,"byte_end":23220,"line_start":331,"line_end":331,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23225,"byte_end":23228,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23233,"byte_end":23255,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23260,"byte_end":23267,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23272,"byte_end":23297,"line_start":335,"line_end":335,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23950,"byte_end":23965,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UCStr<u16>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23417,"byte_end":23458,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23463,"byte_end":23466,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23471,"byte_end":23548,"line_start":342,"line_end":342,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23553,"byte_end":23556,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23561,"byte_end":23575,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23580,"byte_end":23583,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23588,"byte_end":23599,"line_start":346,"line_end":346,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23604,"byte_end":23635,"line_start":347,"line_end":347,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23640,"byte_end":23663,"line_start":348,"line_end":348,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23668,"byte_end":23711,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23716,"byte_end":23764,"line_start":350,"line_end":350,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23769,"byte_end":23820,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23825,"byte_end":23861,"line_start":352,"line_end":352,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23866,"byte_end":23869,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23874,"byte_end":23896,"line_start":354,"line_end":354,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23901,"byte_end":23908,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":23913,"byte_end":23938,"line_start":356,"line_end":356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25053,"byte_end":25070,"line_start":385,"line_end":385,"column_start":19,"column_end":36},"name":"from_char_ptr_str","qualname":"<UCStr<u32>>::from_char_ptr_str","value":"pub unsafe fn from_char_ptr_str<'a>(*const char) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` nul-terminated string pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24066,"byte_end":24136,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24141,"byte_end":24144,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24149,"byte_end":24242,"line_start":365,"line_end":365,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24247,"byte_end":24341,"line_start":366,"line_end":366,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24346,"byte_end":24349,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24354,"byte_end":24366,"line_start":368,"line_end":368,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24371,"byte_end":24374,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24379,"byte_end":24472,"line_start":370,"line_end":370,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24477,"byte_end":24552,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24557,"byte_end":24560,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24565,"byte_end":24590,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24595,"byte_end":24598,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24603,"byte_end":24615,"line_start":375,"line_end":375,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24620,"byte_end":24623,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24628,"byte_end":24668,"line_start":377,"line_end":377,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24673,"byte_end":24676,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24681,"byte_end":24693,"line_start":379,"line_end":379,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24698,"byte_end":24701,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24706,"byte_end":24796,"line_start":381,"line_end":381,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24801,"byte_end":24891,"line_start":382,"line_end":382,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24896,"byte_end":24991,"line_start":383,"line_end":383,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24996,"byte_end":25034,"line_start":384,"line_end":384,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26427,"byte_end":26449,"line_start":416,"line_end":416,"column_start":19,"column_end":41},"name":"from_char_ptr_with_nul","qualname":"<UCStr<u32>>::from_char_ptr_with_nul","value":"pub unsafe fn from_char_ptr_with_nul<'a>(*const char, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25161,"byte_end":25222,"line_start":389,"line_end":389,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25227,"byte_end":25230,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes, and does","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25235,"byte_end":25329,"line_start":391,"line_end":391,"column_start":5,"column_end":99}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25334,"byte_end":25430,"line_start":392,"line_end":392,"column_start":5,"column_end":101}},{"value":"/ `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25435,"byte_end":25501,"line_start":393,"line_end":393,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25506,"byte_end":25509,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25514,"byte_end":25526,"line_start":395,"line_end":395,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25531,"byte_end":25534,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25539,"byte_end":25633,"line_start":397,"line_end":397,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25638,"byte_end":25651,"line_start":398,"line_end":398,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25656,"byte_end":25659,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null, even for zero `len`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25664,"byte_end":25710,"line_start":400,"line_end":400,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25715,"byte_end":25718,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values will","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25723,"byte_end":25815,"line_start":402,"line_end":402,"column_start":5,"column_end":97}},{"value":"/ result in an invalid `U32CStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25820,"byte_end":25855,"line_start":403,"line_end":403,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25860,"byte_end":25863,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25868,"byte_end":25880,"line_start":405,"line_end":405,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25885,"byte_end":25888,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null or if a nul value is not found at offset `len` of `p`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25893,"byte_end":25987,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ Only pointers with a nul terminator are valid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":25992,"byte_end":26042,"line_start":408,"line_end":408,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26047,"byte_end":26050,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26055,"byte_end":26067,"line_start":410,"line_end":410,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26072,"byte_end":26075,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26080,"byte_end":26170,"line_start":412,"line_end":412,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26175,"byte_end":26265,"line_start":413,"line_end":413,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26270,"byte_end":26365,"line_start":414,"line_end":414,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26370,"byte_end":26408,"line_start":415,"line_end":415,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26959,"byte_end":26983,"line_start":428,"line_end":428,"column_start":12,"column_end":36},"name":"from_char_slice_with_nul","qualname":"<UCStr<u32>>::from_char_slice_with_nul","value":"pub fn from_char_slice_with_nul(&[char])\n-> Result<&Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CStr` from a slice of `char` values that has a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CStr` from a slice of `char` values that has a nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26562,"byte_end":26645,"line_start":420,"line_end":420,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26650,"byte_end":26653,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26658,"byte_end":26751,"line_start":422,"line_end":422,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the `U32CStr` slice will be truncated to that nul.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26756,"byte_end":26841,"line_start":423,"line_end":423,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26846,"byte_end":26849,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26854,"byte_end":26867,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26872,"byte_end":26875,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ If there are no no nul values in `slice`, an error is returned.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":26880,"byte_end":26947,"line_start":427,"line_end":427,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27554,"byte_end":27588,"line_start":441,"line_end":441,"column_start":19,"column_end":53},"name":"from_char_slice_with_nul_unchecked","qualname":"<UCStr<u32>>::from_char_slice_with_nul_unchecked","value":"pub unsafe fn from_char_slice_with_nul_unchecked(&[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CStr` from a slice of `char` values that has a nul terminator. No\n checking for nul values is performed.","sig":null,"attributes":[{"value":"/ Constructs a `U32CStr` from a slice of `char` values that has a nul terminator. No","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27163,"byte_end":27249,"line_start":433,"line_end":433,"column_start":5,"column_end":91}},{"value":"/ checking for nul values is performed.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27254,"byte_end":27295,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27300,"byte_end":27303,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27308,"byte_end":27320,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27325,"byte_end":27328,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid `U32CStr` values when `slice`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27333,"byte_end":27421,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27426,"byte_end":27513,"line_start":439,"line_end":439,"column_start":5,"column_end":92}},{"value":"/ in the slice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27518,"byte_end":27535,"line_start":440,"line_end":440,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28491,"byte_end":28503,"line_start":466,"line_end":466,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UCStr<u32>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27737,"byte_end":27786,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27791,"byte_end":27794,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U32CStr`. Since `U32CStr` makes no guarantees that it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27799,"byte_end":27892,"line_start":448,"line_end":448,"column_start":5,"column_end":98}},{"value":"/ valid UTF-32, there is no guarantee that the resulting `OsString` will be valid data. The","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27897,"byte_end":27990,"line_start":449,"line_end":449,"column_start":5,"column_end":98}},{"value":"/ `OsString` will **not** have a nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":27995,"byte_end":28045,"line_start":450,"line_end":450,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28050,"byte_end":28053,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28058,"byte_end":28072,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28077,"byte_end":28080,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28085,"byte_end":28096,"line_start":454,"line_end":454,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28101,"byte_end":28132,"line_start":455,"line_end":455,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28137,"byte_end":28164,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28169,"byte_end":28192,"line_start":457,"line_end":457,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28197,"byte_end":28240,"line_start":458,"line_end":458,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28245,"byte_end":28293,"line_start":459,"line_end":459,"column_start":5,"column_end":53}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28298,"byte_end":28344,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28349,"byte_end":28385,"line_start":461,"line_end":461,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28390,"byte_end":28393,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28398,"byte_end":28439,"line_start":463,"line_end":463,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28444,"byte_end":28451,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28456,"byte_end":28479,"line_start":465,"line_end":465,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29174,"byte_end":29183,"line_start":489,"line_end":489,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UCStr<u32>>::to_string","value":"pub fn to_string(&Self) -> Result<String, crate::FromUtf32Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-32 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-32 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28587,"byte_end":28661,"line_start":470,"line_end":470,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28666,"byte_end":28669,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28674,"byte_end":28688,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28693,"byte_end":28696,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-32 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28701,"byte_end":28769,"line_start":474,"line_end":474,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28774,"byte_end":28777,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28782,"byte_end":28796,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28801,"byte_end":28804,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28809,"byte_end":28820,"line_start":478,"line_end":478,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28825,"byte_end":28856,"line_start":479,"line_end":479,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28861,"byte_end":28884,"line_start":480,"line_end":480,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28889,"byte_end":28932,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28937,"byte_end":28985,"line_start":482,"line_end":482,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":28990,"byte_end":29041,"line_start":483,"line_end":483,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29046,"byte_end":29085,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29090,"byte_end":29093,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29098,"byte_end":29120,"line_start":486,"line_end":486,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29125,"byte_end":29132,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29137,"byte_end":29162,"line_start":488,"line_end":488,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29816,"byte_end":29831,"line_start":510,"line_end":510,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UCStr<u32>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29283,"byte_end":29324,"line_start":493,"line_end":493,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29329,"byte_end":29332,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29337,"byte_end":29414,"line_start":495,"line_end":495,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29419,"byte_end":29422,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29427,"byte_end":29441,"line_start":497,"line_end":497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29446,"byte_end":29449,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29454,"byte_end":29465,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29470,"byte_end":29501,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29506,"byte_end":29529,"line_start":501,"line_end":501,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29534,"byte_end":29577,"line_start":502,"line_end":502,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29582,"byte_end":29630,"line_start":503,"line_end":503,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29635,"byte_end":29686,"line_start":504,"line_end":504,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29691,"byte_end":29727,"line_start":505,"line_end":505,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29732,"byte_end":29735,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29740,"byte_end":29762,"line_start":507,"line_end":507,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29767,"byte_end":29774,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29779,"byte_end":29804,"line_start":509,"line_end":509,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30516,"byte_end":30523,"line_start":524,"line_end":524,"column_start":10,"column_end":17},"name":"U16CStr","qualname":"::ucstr::U16CStr","value":"UCStr<u16>","parent":null,"children":[],"decl_id":null,"docs":" C-style wide string reference for `U16CString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `U16CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29904,"byte_end":29955,"line_start":515,"line_end":515,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29956,"byte_end":29959,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ `U16CStr` is aware of nul values. Unless unchecked conversions are used, all `U16CStr`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":29960,"byte_end":30050,"line_start":517,"line_end":517,"column_start":1,"column_end":91}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30051,"byte_end":30149,"line_start":518,"line_end":518,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 data. These strings are intended to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30150,"byte_end":30248,"line_start":519,"line_end":519,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30249,"byte_end":30340,"line_start":520,"line_end":520,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30341,"byte_end":30344,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ `U16CStr` can be converted to and from many other string types, including `U16String`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30345,"byte_end":30435,"line_start":522,"line_end":522,"column_start":1,"column_end":91}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30436,"byte_end":30506,"line_start":523,"line_end":523,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":31151,"byte_end":31158,"line_start":535,"line_end":535,"column_start":10,"column_end":17},"name":"U32CStr","qualname":"::ucstr::U32CStr","value":"UCStr<u32>","parent":null,"children":[],"decl_id":null,"docs":" C-style wide string reference for `U32CString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `U32CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30539,"byte_end":30590,"line_start":526,"line_end":526,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30591,"byte_end":30594,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ `U32CStr` is aware of nul values. Unless unchecked conversions are used, all `U32CStr`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30595,"byte_end":30685,"line_start":528,"line_end":528,"column_start":1,"column_end":91}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30686,"byte_end":30784,"line_start":529,"line_end":529,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-32 data. These strings are intended to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30785,"byte_end":30883,"line_start":530,"line_end":530,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30884,"byte_end":30975,"line_start":531,"line_end":531,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30976,"byte_end":30979,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ `U32CStr` can be converted to and from many other string types, including `U32String`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":30980,"byte_end":31070,"line_start":533,"line_end":533,"column_start":1,"column_end":91}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":31071,"byte_end":31141,"line_start":534,"line_end":534,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":31299,"byte_end":31307,"line_start":538,"line_end":538,"column_start":10,"column_end":18},"name":"WideCStr","qualname":"::ucstr::WideCStr","value":"UCStr<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16CStr` or `U32CStr` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16CStr` or `U32CStr` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":31174,"byte_end":31289,"line_start":537,"line_end":537,"column_start":1,"column_end":116}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33362,"byte_end":33370,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"UCString","qualname":"::ucstring::UCString","value":"UCString {  }","parent":null,"children":[{"krate":0,"index":660}],"decl_id":null,"docs":" An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":31741,"byte_end":31830,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":31831,"byte_end":31834,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `UCString` is aware of nul values. Unless unchecked conversions are used, all `UCString`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":31835,"byte_end":31927,"line_start":25,"line_end":25,"column_start":1,"column_end":93}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":31928,"byte_end":32026,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 or UTF-32 data. These strings are","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32027,"byte_end":32123,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ intended to be used with FFI functions such as Windows API that may require nul-terminated","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32124,"byte_end":32218,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ strings.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32219,"byte_end":32231,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32232,"byte_end":32235,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ `UCString` can be converted to and from many other string types, including `UString`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32236,"byte_end":32325,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32326,"byte_end":32396,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32397,"byte_end":32400,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16CString` or `U32CString` or `WideCString` to using","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32401,"byte_end":32496,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"/ this type directly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32497,"byte_end":32520,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32521,"byte_end":32524,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32525,"byte_end":32539,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32540,"byte_end":32543,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16CString` and shows how to convert a `U16CString` to a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32544,"byte_end":32640,"line_start":39,"line_end":39,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32641,"byte_end":32667,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32668,"byte_end":32671,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32672,"byte_end":32683,"line_start":42,"line_end":42,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32684,"byte_end":32715,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32716,"byte_end":32735,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32736,"byte_end":32784,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32785,"byte_end":32833,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32834,"byte_end":32870,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32871,"byte_end":32913,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32914,"byte_end":32947,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32948,"byte_end":32955,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32956,"byte_end":32959,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The same example using `U32CString`:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":32960,"byte_end":33000,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33001,"byte_end":33004,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33005,"byte_end":33016,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33017,"byte_end":33048,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33049,"byte_end":33068,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33069,"byte_end":33117,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33118,"byte_end":33166,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33167,"byte_end":33203,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33204,"byte_end":33246,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33247,"byte_end":33280,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33281,"byte_end":33288,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":688},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33703,"byte_end":33711,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"NulError","qualname":"::ucstring::NulError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from `UCString` to indicate that an invalid nul value was found.","sig":null,"attributes":[{"value":"/ An error returned from `UCString` to indicate that an invalid nul value was found.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33418,"byte_end":33504,"line_start":68,"line_end":68,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33505,"byte_end":33508,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The error indicates the position in the vector where the nul value was found, as well as","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33509,"byte_end":33601,"line_start":70,"line_end":70,"column_start":1,"column_end":93}},{"value":"/ returning the ownership of the invalid vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33602,"byte_end":33652,"line_start":71,"line_end":71,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35601,"byte_end":35604,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<UCString<C>>::new","value":"pub fn new<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Result<Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from a container of wide character data.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from a container of wide character data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33772,"byte_end":33840,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33845,"byte_end":33848,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33853,"byte_end":33946,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ new string. The data will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33951,"byte_end":34015,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34020,"byte_end":34023,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34028,"byte_end":34042,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34047,"byte_end":34050,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34055,"byte_end":34127,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain the `Vec` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34132,"byte_end":34219,"line_start":84,"line_end":84,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34224,"byte_end":34227,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34232,"byte_end":34246,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34251,"byte_end":34254,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34259,"byte_end":34270,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34275,"byte_end":34306,"line_start":89,"line_end":89,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34311,"byte_end":34366,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34371,"byte_end":34400,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34405,"byte_end":34448,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::new(v).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34453,"byte_end":34497,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34502,"byte_end":34545,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34550,"byte_end":34557,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34562,"byte_end":34565,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34570,"byte_end":34581,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34586,"byte_end":34617,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34622,"byte_end":34677,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34682,"byte_end":34711,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34716,"byte_end":34759,"line_start":101,"line_end":101,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::new(v).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34764,"byte_end":34808,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34813,"byte_end":34856,"line_start":103,"line_end":103,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34861,"byte_end":34868,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34873,"byte_end":34876,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34881,"byte_end":34955,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34960,"byte_end":34963,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34968,"byte_end":34979,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":34984,"byte_end":35015,"line_start":109,"line_end":109,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 0u16, 104u16, 101u16]; // 'T' NUL 'h' 'e'","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35020,"byte_end":35085,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35090,"byte_end":35133,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::new(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35138,"byte_end":35171,"line_start":112,"line_end":112,"column_start":5,"column_end":38}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35176,"byte_end":35202,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35207,"byte_end":35260,"line_start":114,"line_end":114,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35265,"byte_end":35272,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35277,"byte_end":35280,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35285,"byte_end":35296,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35301,"byte_end":35332,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 0u32, 104u32, 101u32]; // 'T' NUL 'h' 'e'","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35337,"byte_end":35402,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35407,"byte_end":35450,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::new(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35455,"byte_end":35488,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35493,"byte_end":35519,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35524,"byte_end":35577,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35582,"byte_end":35589,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37733,"byte_end":37750,"line_start":181,"line_end":181,"column_start":12,"column_end":29},"name":"from_vec_with_nul","qualname":"<UCString<C>>::from_vec_with_nul","value":"pub fn from_vec_with_nul<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Result<Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from a nul-terminated container of UTF-16 or UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from a nul-terminated container of UTF-16 or UTF-32 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":35911,"byte_end":35996,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36001,"byte_end":36004,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36009,"byte_end":36102,"line_start":136,"line_end":136,"column_start":5,"column_end":98}},{"value":"/ new string. The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36107,"byte_end":36189,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36194,"byte_end":36197,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36202,"byte_end":36216,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36221,"byte_end":36224,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36229,"byte_end":36319,"line_start":141,"line_end":141,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36324,"byte_end":36387,"line_start":142,"line_end":142,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36392,"byte_end":36395,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36400,"byte_end":36414,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36419,"byte_end":36422,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36427,"byte_end":36438,"line_start":146,"line_end":146,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36443,"byte_end":36474,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16, 0u16]; // 'T' 'h' 'e' NUL","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36479,"byte_end":36544,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/ # let cloned = v[..3].to_owned();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36549,"byte_end":36586,"line_start":149,"line_end":149,"column_start":5,"column_end":42}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36591,"byte_end":36634,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_vec_with_nul(v).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36639,"byte_end":36697,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36702,"byte_end":36745,"line_start":152,"line_end":152,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36750,"byte_end":36757,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36762,"byte_end":36765,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36770,"byte_end":36781,"line_start":155,"line_end":155,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36786,"byte_end":36817,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32, 0u32]; // 'T' 'h' 'e' NUL","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36822,"byte_end":36887,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/ # let cloned = v[..3].to_owned();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36892,"byte_end":36929,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36934,"byte_end":36977,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_vec_with_nul(v).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":36982,"byte_end":37040,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37045,"byte_end":37088,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37093,"byte_end":37100,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37105,"byte_end":37108,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37113,"byte_end":37195,"line_start":164,"line_end":164,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37200,"byte_end":37203,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37208,"byte_end":37219,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37224,"byte_end":37255,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37260,"byte_end":37315,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37320,"byte_end":37363,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_vec_with_nul(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37368,"byte_end":37415,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37420,"byte_end":37446,"line_start":171,"line_end":171,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37451,"byte_end":37458,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37463,"byte_end":37466,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37471,"byte_end":37482,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37487,"byte_end":37518,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37523,"byte_end":37578,"line_start":176,"line_end":176,"column_start":5,"column_end":60}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37583,"byte_end":37626,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_vec_with_nul(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37631,"byte_end":37678,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37683,"byte_end":37709,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":37714,"byte_end":37721,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38621,"byte_end":38639,"line_start":203,"line_end":203,"column_start":19,"column_end":37},"name":"from_vec_unchecked","qualname":"<UCString<C>>::from_vec_unchecked","value":"pub unsafe fn from_vec_unchecked<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UCString` from a vector without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Creates a `UCString` from a vector without checking for interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38163,"byte_end":38243,"line_start":193,"line_end":193,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38248,"byte_end":38251,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ A terminating nul value will be appended if the vector does not already have a terminating","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38256,"byte_end":38350,"line_start":195,"line_end":195,"column_start":5,"column_end":99}},{"value":"/ nul.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38355,"byte_end":38363,"line_start":196,"line_end":196,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38368,"byte_end":38371,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38376,"byte_end":38388,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38393,"byte_end":38396,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `new` except that no runtime assertion is made that `v`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38401,"byte_end":38489,"line_start":200,"line_end":200,"column_start":5,"column_end":93}},{"value":"/ contains no nul values. Providing a vector with nul values will result in an invalid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38494,"byte_end":38582,"line_start":201,"line_end":201,"column_start":5,"column_end":93}},{"value":"/ `UCString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38587,"byte_end":38602,"line_start":202,"line_end":202,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39361,"byte_end":39388,"line_start":221,"line_end":221,"column_start":19,"column_end":46},"name":"from_vec_with_nul_unchecked","qualname":"<UCString<C>>::from_vec_with_nul_unchecked","value":"pub unsafe fn from_vec_with_nul_unchecked<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UCString` from a vector that should have a nul terminator, without checking\n for any nul values.","sig":null,"attributes":[{"value":"/ Creates a `UCString` from a vector that should have a nul terminator, without checking","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":38927,"byte_end":39017,"line_start":213,"line_end":213,"column_start":5,"column_end":95}},{"value":"/ for any nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39022,"byte_end":39045,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39050,"byte_end":39053,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39058,"byte_end":39070,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39075,"byte_end":39078,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_vec_with_nul` except that no runtime assertion is made","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39083,"byte_end":39176,"line_start":218,"line_end":218,"column_start":5,"column_end":98}},{"value":"/ that `v` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39181,"byte_end":39274,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `UCString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39279,"byte_end":39342,"line_start":220,"line_end":220,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39866,"byte_end":39875,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"from_ustr","qualname":"<UCString<C>>::from_ustr","value":"pub fn from_ustr<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Result<Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr`.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39509,"byte_end":39585,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39590,"byte_end":39593,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39598,"byte_end":39652,"line_start":229,"line_end":229,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39657,"byte_end":39660,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39665,"byte_end":39679,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39684,"byte_end":39687,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39692,"byte_end":39764,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39769,"byte_end":39854,"line_start":234,"line_end":234,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40379,"byte_end":40398,"line_start":247,"line_end":247,"column_start":19,"column_end":38},"name":"from_ustr_unchecked","qualname":"<UCString<C>>::from_ustr_unchecked","value":"pub unsafe fn from_ustr_unchecked<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr`, without\n scanning for invalid nul values.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr`, without","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":39987,"byte_end":40071,"line_start":239,"line_end":239,"column_start":5,"column_end":89}},{"value":"/ scanning for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40076,"byte_end":40112,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40117,"byte_end":40120,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40125,"byte_end":40137,"line_start":242,"line_end":242,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40142,"byte_end":40145,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_u16_str` except that no runtime assertion is made that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40150,"byte_end":40243,"line_start":244,"line_end":244,"column_start":5,"column_end":98}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40248,"byte_end":40340,"line_start":245,"line_end":245,"column_start":5,"column_end":97}},{"value":"/ `UCString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40345,"byte_end":40360,"line_start":246,"line_end":246,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40903,"byte_end":40921,"line_start":260,"line_end":260,"column_start":12,"column_end":30},"name":"from_ustr_with_nul","qualname":"<UCString<C>>::from_ustr_with_nul","value":"pub fn from_ustr_with_nul<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Result<Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr` with a nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40504,"byte_end":40590,"line_start":251,"line_end":251,"column_start":5,"column_end":91}},{"value":"/ terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40595,"byte_end":40610,"line_start":252,"line_end":252,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40615,"byte_end":40618,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40623,"byte_end":40693,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40698,"byte_end":40701,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40706,"byte_end":40720,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40725,"byte_end":40728,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40733,"byte_end":40823,"line_start":258,"line_end":258,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":40828,"byte_end":40891,"line_start":259,"line_end":259,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41545,"byte_end":41573,"line_start":272,"line_end":272,"column_start":19,"column_end":47},"name":"from_ustr_with_nul_unchecked","qualname":"<UCString<C>>::from_ustr_with_nul_unchecked","value":"pub unsafe fn from_ustr_with_nul_unchecked<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr` with a nul\n terminator, without checking the string for any invalid interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr` with a nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41054,"byte_end":41140,"line_start":264,"line_end":264,"column_start":5,"column_end":91}},{"value":"/ terminator, without checking the string for any invalid interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41145,"byte_end":41225,"line_start":265,"line_end":265,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41230,"byte_end":41233,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41238,"byte_end":41250,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41255,"byte_end":41258,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_u16_str_with_nul` except that no runtime assertion is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41263,"byte_end":41355,"line_start":269,"line_end":269,"column_start":5,"column_end":97}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41360,"byte_end":41448,"line_start":270,"line_end":270,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `UCString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41453,"byte_end":41526,"line_start":271,"line_end":271,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42681,"byte_end":42693,"line_start":298,"line_end":298,"column_start":19,"column_end":31},"name":"from_ptr_str","qualname":"<UCString<C>>::from_ptr_str","value":"pub unsafe fn from_ptr_str(*const C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `UCString` copied from a nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a new `UCString` copied from a nul-terminated string pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41688,"byte_end":41764,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41769,"byte_end":41772,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41777,"byte_end":41870,"line_start":278,"line_end":278,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41875,"byte_end":41969,"line_start":279,"line_end":279,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41974,"byte_end":41977,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41982,"byte_end":41994,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":41999,"byte_end":42002,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42007,"byte_end":42100,"line_start":283,"line_end":283,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42105,"byte_end":42180,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42185,"byte_end":42188,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42193,"byte_end":42218,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42223,"byte_end":42226,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42231,"byte_end":42243,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42248,"byte_end":42251,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42256,"byte_end":42296,"line_start":290,"line_end":290,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42301,"byte_end":42304,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42309,"byte_end":42321,"line_start":292,"line_end":292,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42326,"byte_end":42329,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42334,"byte_end":42424,"line_start":294,"line_end":294,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42429,"byte_end":42519,"line_start":295,"line_end":295,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42524,"byte_end":42619,"line_start":296,"line_end":296,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42624,"byte_end":42662,"line_start":297,"line_end":297,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43025,"byte_end":43033,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"as_ucstr","qualname":"<UCString<C>>::as_ucstr","value":"pub fn as_ucstr(&Self) -> &UCStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a `UCStr` reference.\n","sig":null,"attributes":[{"value":"/ Converts to a `UCStr` reference.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":42977,"byte_end":43013,"line_start":308,"line_end":308,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43326,"byte_end":43334,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<UCString<C>>::into_vec","value":"pub fn into_vec(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec` without a nul terminator, consuming the string in\n the process.","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec` without a nul terminator, consuming the string in","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43080,"byte_end":43171,"line_start":313,"line_end":313,"column_start":5,"column_end":96}},{"value":"/ the process.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43176,"byte_end":43192,"line_start":314,"line_end":314,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43197,"byte_end":43200,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will **not** contain a nul-terminator, and will contain no other nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43205,"byte_end":43298,"line_start":316,"line_end":316,"column_start":5,"column_end":98}},{"value":"/ values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43303,"byte_end":43314,"line_start":317,"line_end":317,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43627,"byte_end":43644,"line_start":327,"line_end":327,"column_start":12,"column_end":29},"name":"into_vec_with_nul","qualname":"<UCString<C>>::into_vec_with_nul","value":"pub fn into_vec_with_nul(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec`, consuming the string in the process.","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec`, consuming the string in the process.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43441,"byte_end":43520,"line_start":324,"line_end":324,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43525,"byte_end":43528,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will contain a nul-terminator and no interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43533,"byte_end":43615,"line_start":326,"line_end":326,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44101,"byte_end":44109,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<UCString<C>>::into_raw","value":"pub fn into_raw(Self) -> *mut C","parent":null,"children":[],"decl_id":null,"docs":" Transfers ownership of the wide string to a C caller.","sig":null,"attributes":[{"value":"/ Transfers ownership of the wide string to a C caller.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43711,"byte_end":43768,"line_start":331,"line_end":331,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43773,"byte_end":43776,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43781,"byte_end":43793,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43798,"byte_end":43801,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The pointer must be returned to Rust and reconstituted using `from_raw` to be properly","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43806,"byte_end":43896,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/ deallocated. Specifically, one should _not_ use the standard C `free` function to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43901,"byte_end":43986,"line_start":336,"line_end":336,"column_start":5,"column_end":90}},{"value":"/ deallocate this string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":43991,"byte_end":44018,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44023,"byte_end":44026,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Failure to call `from_raw` will lead to a memory leak.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44031,"byte_end":44089,"line_start":339,"line_end":339,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44520,"byte_end":44528,"line_start":351,"line_end":351,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<UCString<C>>::from_raw","value":"pub unsafe fn from_raw(*mut C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Retakes ownership of a `UCString` that was transferred to C.","sig":null,"attributes":[{"value":"/ Retakes ownership of a `UCString` that was transferred to C.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44190,"byte_end":44254,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44259,"byte_end":44262,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44267,"byte_end":44279,"line_start":346,"line_end":346,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44284,"byte_end":44287,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This should only ever be called with a pointer that was earlier obtained by calling","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44292,"byte_end":44379,"line_start":348,"line_end":348,"column_start":5,"column_end":92}},{"value":"/ `into_raw` on a `UCString`. Additionally, the length of the string will be recalculated","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44384,"byte_end":44475,"line_start":349,"line_end":349,"column_start":5,"column_end":96}},{"value":"/ from the pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44480,"byte_end":44501,"line_start":350,"line_end":350,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45613,"byte_end":45629,"line_start":386,"line_end":386,"column_start":12,"column_end":28},"name":"into_boxed_ucstr","qualname":"<UCString<C>>::into_boxed_ucstr","value":"pub fn into_boxed_ucstr(Self) -> Box<UCStr<C>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `UCString` into a boxed `UCStr`.","sig":null,"attributes":[{"value":"/ Converts this `UCString` into a boxed `UCStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44832,"byte_end":44882,"line_start":363,"line_end":363,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44887,"byte_end":44890,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44895,"byte_end":44909,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44914,"byte_end":44917,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44922,"byte_end":44929,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U16CString, U16CStr};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44934,"byte_end":44976,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44981,"byte_end":44984,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![102u16, 111u16, 111u16]; // \"foo\"","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":44989,"byte_end":45043,"line_start":370,"line_end":370,"column_start":5,"column_end":59}},{"value":"/ let c_string = U16CString::new(v.clone()).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45048,"byte_end":45103,"line_start":371,"line_end":371,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45108,"byte_end":45152,"line_start":372,"line_end":372,"column_start":5,"column_end":49}},{"value":"/ v.push(0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45157,"byte_end":45171,"line_start":373,"line_end":373,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(&*boxed, U16CStr::from_slice_with_nul(&v).unwrap());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45176,"byte_end":45243,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45248,"byte_end":45255,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45260,"byte_end":45263,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45268,"byte_end":45275,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U32CString, U32CStr};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45280,"byte_end":45322,"line_start":378,"line_end":378,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45327,"byte_end":45330,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![102u32, 111u32, 111u32]; // \"foo\"","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45335,"byte_end":45389,"line_start":380,"line_end":380,"column_start":5,"column_end":59}},{"value":"/ let c_string = U32CString::new(v.clone()).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45394,"byte_end":45449,"line_start":381,"line_end":381,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45454,"byte_end":45498,"line_start":382,"line_end":382,"column_start":5,"column_end":49}},{"value":"/ v.push(0);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45503,"byte_end":45517,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(&*boxed, U32CStr::from_slice_with_nul(&v).unwrap());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45522,"byte_end":45589,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":45594,"byte_end":45601,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47099,"byte_end":47107,"line_start":433,"line_end":433,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UCString<u16>>::from_str","value":"pub fn from_str<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str`.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46074,"byte_end":46117,"line_start":403,"line_end":403,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46122,"byte_end":46125,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46130,"byte_end":46184,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46189,"byte_end":46192,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46197,"byte_end":46211,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46216,"byte_end":46219,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46224,"byte_end":46296,"line_start":409,"line_end":409,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46301,"byte_end":46391,"line_start":410,"line_end":410,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46396,"byte_end":46399,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46404,"byte_end":46418,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46423,"byte_end":46426,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46431,"byte_end":46442,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46447,"byte_end":46478,"line_start":415,"line_end":415,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46483,"byte_end":46506,"line_start":416,"line_end":416,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46511,"byte_end":46554,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46559,"byte_end":46608,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46613,"byte_end":46658,"line_start":419,"line_end":419,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46663,"byte_end":46670,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46675,"byte_end":46678,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46683,"byte_end":46757,"line_start":422,"line_end":422,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46762,"byte_end":46765,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46770,"byte_end":46781,"line_start":424,"line_end":424,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46786,"byte_end":46817,"line_start":425,"line_end":425,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46822,"byte_end":46850,"line_start":426,"line_end":426,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46855,"byte_end":46898,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46903,"byte_end":46941,"line_start":428,"line_end":428,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46946,"byte_end":46972,"line_start":429,"line_end":429,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46977,"byte_end":47030,"line_start":430,"line_end":430,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47035,"byte_end":47042,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47047,"byte_end":47087,"line_start":432,"line_end":432,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47901,"byte_end":47919,"line_start":455,"line_end":455,"column_start":19,"column_end":37},"name":"from_str_unchecked","qualname":"<UCString<u16>>::from_str_unchecked","value":"pub unsafe fn from_str_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str`, without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str`, without checking for interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47260,"byte_end":47345,"line_start":438,"line_end":438,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47350,"byte_end":47353,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47358,"byte_end":47370,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47375,"byte_end":47378,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str` except that no runtime assertion is made that `s`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47383,"byte_end":47476,"line_start":442,"line_end":442,"column_start":5,"column_end":98}},{"value":"/ contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47481,"byte_end":47569,"line_start":443,"line_end":443,"column_start":5,"column_end":93}},{"value":"/ `U16CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47574,"byte_end":47591,"line_start":444,"line_end":444,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47596,"byte_end":47599,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47604,"byte_end":47618,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47623,"byte_end":47626,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47631,"byte_end":47642,"line_start":448,"line_end":448,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47647,"byte_end":47678,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47683,"byte_end":47706,"line_start":450,"line_end":450,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47711,"byte_end":47754,"line_start":451,"line_end":451,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_str_unchecked(s) };","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47759,"byte_end":47820,"line_start":452,"line_end":452,"column_start":5,"column_end":66}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47825,"byte_end":47870,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":47875,"byte_end":47882,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49047,"byte_end":49064,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"from_str_with_nul","qualname":"<UCString<u16>>::from_str_with_nul","value":"pub fn from_str_with_nul<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str` with a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str` with a nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48064,"byte_end":48129,"line_start":460,"line_end":460,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48134,"byte_end":48137,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48142,"byte_end":48212,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48217,"byte_end":48220,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48225,"byte_end":48239,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48244,"byte_end":48247,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48252,"byte_end":48342,"line_start":466,"line_end":466,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48347,"byte_end":48415,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48420,"byte_end":48423,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48428,"byte_end":48442,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48447,"byte_end":48450,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48455,"byte_end":48466,"line_start":471,"line_end":471,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48471,"byte_end":48502,"line_start":472,"line_end":472,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48507,"byte_end":48535,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48540,"byte_end":48583,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_str_with_nul(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48588,"byte_end":48646,"line_start":475,"line_end":475,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48651,"byte_end":48697,"line_start":476,"line_end":476,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48702,"byte_end":48709,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48714,"byte_end":48717,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48722,"byte_end":48804,"line_start":479,"line_end":479,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48809,"byte_end":48812,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48817,"byte_end":48828,"line_start":481,"line_end":481,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48833,"byte_end":48864,"line_start":482,"line_end":482,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48869,"byte_end":48892,"line_start":483,"line_end":483,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48897,"byte_end":48940,"line_start":484,"line_end":484,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_str_with_nul(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48945,"byte_end":48992,"line_start":485,"line_end":485,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":48997,"byte_end":49023,"line_start":486,"line_end":486,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49028,"byte_end":49035,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49999,"byte_end":50026,"line_start":511,"line_end":511,"column_start":19,"column_end":46},"name":"from_str_with_nul_unchecked","qualname":"<UCString<u16>>::from_str_with_nul_unchecked","value":"pub unsafe fn from_str_with_nul_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from str `str` that should have a terminating nul, but without\n checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from str `str` that should have a terminating nul, but without","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49238,"byte_end":49330,"line_start":493,"line_end":493,"column_start":5,"column_end":97}},{"value":"/ checking for any nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49335,"byte_end":49367,"line_start":494,"line_end":494,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49372,"byte_end":49375,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49380,"byte_end":49392,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49397,"byte_end":49400,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str_with_nul` except that no runtime assertion is made","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49405,"byte_end":49498,"line_start":498,"line_end":498,"column_start":5,"column_end":98}},{"value":"/ that `s` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49503,"byte_end":49596,"line_start":499,"line_end":499,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U16CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49601,"byte_end":49666,"line_start":500,"line_end":500,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49671,"byte_end":49674,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49679,"byte_end":49693,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49698,"byte_end":49701,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49706,"byte_end":49717,"line_start":504,"line_end":504,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49722,"byte_end":49753,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49758,"byte_end":49787,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49792,"byte_end":49835,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_str_with_nul_unchecked(s) };","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49840,"byte_end":49910,"line_start":508,"line_end":508,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49915,"byte_end":49968,"line_start":509,"line_end":509,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":49973,"byte_end":49980,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50897,"byte_end":50905,"line_start":535,"line_end":535,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UCString<u16>>::from_ptr","value":"pub unsafe fn from_ptr(*const u16, usize) -> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16CString` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16CString` copied from a `u16` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50180,"byte_end":50255,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50260,"byte_end":50263,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50268,"byte_end":50352,"line_start":518,"line_end":518,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50357,"byte_end":50360,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50365,"byte_end":50419,"line_start":520,"line_end":520,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50424,"byte_end":50427,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50432,"byte_end":50446,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50451,"byte_end":50454,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50459,"byte_end":50531,"line_start":524,"line_end":524,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50536,"byte_end":50626,"line_start":525,"line_end":525,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50631,"byte_end":50634,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50639,"byte_end":50651,"line_start":527,"line_end":527,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50656,"byte_end":50659,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50664,"byte_end":50758,"line_start":529,"line_end":529,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50763,"byte_end":50776,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50781,"byte_end":50784,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50789,"byte_end":50801,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50806,"byte_end":50809,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":50814,"byte_end":50878,"line_start":534,"line_end":534,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51839,"byte_end":51857,"line_start":559,"line_end":559,"column_start":19,"column_end":37},"name":"from_ptr_unchecked","qualname":"<UCString<u16>>::from_ptr_unchecked","value":"pub unsafe fn from_ptr_unchecked(*const u16, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16CString` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16CString` copied from a `u16` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51164,"byte_end":51239,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51244,"byte_end":51247,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51252,"byte_end":51336,"line_start":546,"line_end":546,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51341,"byte_end":51344,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51349,"byte_end":51411,"line_start":548,"line_end":548,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51416,"byte_end":51419,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51424,"byte_end":51436,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51441,"byte_end":51444,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51449,"byte_end":51543,"line_start":552,"line_end":552,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51548,"byte_end":51642,"line_start":553,"line_end":553,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U16CString` will be invalid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51647,"byte_end":51718,"line_start":554,"line_end":554,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51723,"byte_end":51726,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51731,"byte_end":51743,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51748,"byte_end":51751,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":51756,"byte_end":51820,"line_start":558,"line_end":558,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52832,"byte_end":52849,"line_start":587,"line_end":587,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCString<u16>>::from_ptr_with_nul","value":"pub unsafe fn from_ptr_with_nul(*const u16, usize)\n-> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16String` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16String` copied from a `u16` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52104,"byte_end":52178,"line_start":568,"line_end":568,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52183,"byte_end":52186,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52191,"byte_end":52275,"line_start":570,"line_end":570,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52280,"byte_end":52283,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52288,"byte_end":52358,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52363,"byte_end":52366,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52371,"byte_end":52385,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52390,"byte_end":52393,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52398,"byte_end":52488,"line_start":576,"line_end":576,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52493,"byte_end":52561,"line_start":577,"line_end":577,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52566,"byte_end":52569,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52574,"byte_end":52586,"line_start":579,"line_end":579,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52591,"byte_end":52594,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52599,"byte_end":52693,"line_start":581,"line_end":581,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52698,"byte_end":52711,"line_start":582,"line_end":582,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52716,"byte_end":52719,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52724,"byte_end":52736,"line_start":584,"line_end":584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52741,"byte_end":52744,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":52749,"byte_end":52813,"line_start":586,"line_end":586,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53999,"byte_end":54026,"line_start":616,"line_end":616,"column_start":19,"column_end":46},"name":"from_ptr_with_nul_unchecked","qualname":"<UCString<u16>>::from_ptr_with_nul_unchecked","value":"pub unsafe fn from_ptr_with_nul_unchecked(*const u16, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16String` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16String` copied from a `u16` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53152,"byte_end":53226,"line_start":599,"line_end":599,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53231,"byte_end":53234,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53239,"byte_end":53323,"line_start":601,"line_end":601,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53328,"byte_end":53331,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53336,"byte_end":53426,"line_start":603,"line_end":603,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53431,"byte_end":53520,"line_start":604,"line_end":604,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53525,"byte_end":53528,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53533,"byte_end":53545,"line_start":606,"line_end":606,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53550,"byte_end":53553,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53558,"byte_end":53652,"line_start":608,"line_end":608,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53657,"byte_end":53750,"line_start":609,"line_end":609,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53755,"byte_end":53840,"line_start":610,"line_end":610,"column_start":5,"column_end":90}},{"value":"/ `U16CString` will be invalid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53845,"byte_end":53878,"line_start":611,"line_end":611,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53883,"byte_end":53886,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53891,"byte_end":53903,"line_start":613,"line_end":613,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53908,"byte_end":53911,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":53916,"byte_end":53980,"line_start":615,"line_end":615,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55333,"byte_end":55344,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UCString<u16>>::from_os_str","value":"pub fn from_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr`.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54282,"byte_end":54362,"line_start":625,"line_end":625,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54367,"byte_end":54370,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54375,"byte_end":54429,"line_start":627,"line_end":627,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54434,"byte_end":54437,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54442,"byte_end":54456,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54461,"byte_end":54464,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54469,"byte_end":54541,"line_start":631,"line_end":631,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54546,"byte_end":54636,"line_start":632,"line_end":632,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54641,"byte_end":54644,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54649,"byte_end":54663,"line_start":634,"line_end":634,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54668,"byte_end":54671,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54676,"byte_end":54687,"line_start":636,"line_end":636,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54692,"byte_end":54723,"line_start":637,"line_end":637,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54728,"byte_end":54751,"line_start":638,"line_end":638,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54756,"byte_end":54799,"line_start":639,"line_end":639,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_os_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54804,"byte_end":54856,"line_start":640,"line_end":640,"column_start":5,"column_end":57}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54861,"byte_end":54906,"line_start":641,"line_end":641,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54911,"byte_end":54918,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54923,"byte_end":54926,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":54931,"byte_end":55005,"line_start":644,"line_end":644,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55010,"byte_end":55013,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55018,"byte_end":55029,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55034,"byte_end":55065,"line_start":647,"line_end":647,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55070,"byte_end":55098,"line_start":648,"line_end":648,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55103,"byte_end":55146,"line_start":649,"line_end":649,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_os_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55151,"byte_end":55192,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55197,"byte_end":55223,"line_start":651,"line_end":651,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55228,"byte_end":55281,"line_start":652,"line_end":652,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55286,"byte_end":55293,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55298,"byte_end":55321,"line_start":654,"line_end":654,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56223,"byte_end":56244,"line_start":679,"line_end":679,"column_start":19,"column_end":40},"name":"from_os_str_unchecked","qualname":"<UCString<u16>>::from_os_str_unchecked","value":"pub unsafe fn from_os_str_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr`, without\n checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr`, without","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55503,"byte_end":55591,"line_start":660,"line_end":660,"column_start":5,"column_end":93}},{"value":"/ checking for interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55596,"byte_end":55633,"line_start":661,"line_end":661,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55638,"byte_end":55641,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55646,"byte_end":55658,"line_start":663,"line_end":663,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55663,"byte_end":55666,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str` except that no runtime assertion is made that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55671,"byte_end":55763,"line_start":665,"line_end":665,"column_start":5,"column_end":97}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55768,"byte_end":55860,"line_start":666,"line_end":666,"column_start":5,"column_end":97}},{"value":"/ `U16CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55865,"byte_end":55882,"line_start":667,"line_end":667,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55887,"byte_end":55890,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55895,"byte_end":55909,"line_start":669,"line_end":669,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55914,"byte_end":55917,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55922,"byte_end":55933,"line_start":671,"line_end":671,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55938,"byte_end":55969,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":55974,"byte_end":55997,"line_start":673,"line_end":673,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56002,"byte_end":56045,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_os_str_unchecked(s) };","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56050,"byte_end":56114,"line_start":675,"line_end":675,"column_start":5,"column_end":69}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56119,"byte_end":56164,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56169,"byte_end":56176,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56181,"byte_end":56204,"line_start":678,"line_end":678,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57457,"byte_end":57477,"line_start":714,"line_end":714,"column_start":12,"column_end":32},"name":"from_os_str_with_nul","qualname":"<UCString<u16>>::from_os_str_with_nul","value":"pub fn from_os_str_with_nul<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr` with a nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56395,"byte_end":56485,"line_start":684,"line_end":684,"column_start":5,"column_end":95}},{"value":"/ terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56490,"byte_end":56505,"line_start":685,"line_end":685,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56510,"byte_end":56513,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56518,"byte_end":56588,"line_start":687,"line_end":687,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56593,"byte_end":56596,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56601,"byte_end":56615,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56620,"byte_end":56623,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56628,"byte_end":56718,"line_start":691,"line_end":691,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56723,"byte_end":56791,"line_start":692,"line_end":692,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56796,"byte_end":56799,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56804,"byte_end":56818,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56823,"byte_end":56826,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56831,"byte_end":56842,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56847,"byte_end":56878,"line_start":697,"line_end":697,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56883,"byte_end":56911,"line_start":698,"line_end":698,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56916,"byte_end":56959,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_os_str_with_nul(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":56964,"byte_end":57025,"line_start":700,"line_end":700,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57030,"byte_end":57076,"line_start":701,"line_end":701,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57081,"byte_end":57088,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57093,"byte_end":57096,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57101,"byte_end":57183,"line_start":704,"line_end":704,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57188,"byte_end":57191,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57196,"byte_end":57207,"line_start":706,"line_end":706,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57212,"byte_end":57243,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57248,"byte_end":57271,"line_start":708,"line_end":708,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57276,"byte_end":57319,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_os_str_with_nul(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57324,"byte_end":57374,"line_start":710,"line_end":710,"column_start":5,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57379,"byte_end":57405,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57410,"byte_end":57417,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57422,"byte_end":57445,"line_start":713,"line_end":713,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58502,"byte_end":58532,"line_start":740,"line_end":740,"column_start":19,"column_end":49},"name":"from_os_str_with_nul_unchecked","qualname":"<UCString<u16>>::from_os_str_with_nul_unchecked","value":"pub unsafe fn from_os_str_with_nul_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr` that should\n have a terminating nul, but without checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr` that should","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57672,"byte_end":57763,"line_start":721,"line_end":721,"column_start":5,"column_end":96}},{"value":"/ have a terminating nul, but without checking for any nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57768,"byte_end":57836,"line_start":722,"line_end":722,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57841,"byte_end":57844,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57849,"byte_end":57861,"line_start":724,"line_end":724,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57866,"byte_end":57869,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str_with_nul` except that no runtime assertion is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57874,"byte_end":57965,"line_start":726,"line_end":726,"column_start":5,"column_end":96}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":57970,"byte_end":58058,"line_start":727,"line_end":727,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `U16CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58063,"byte_end":58138,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58143,"byte_end":58146,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58151,"byte_end":58165,"line_start":730,"line_end":730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58170,"byte_end":58173,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58178,"byte_end":58189,"line_start":732,"line_end":732,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58194,"byte_end":58225,"line_start":733,"line_end":733,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58230,"byte_end":58259,"line_start":734,"line_end":734,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58264,"byte_end":58307,"line_start":735,"line_end":735,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_os_str_with_nul_unchecked(s) };","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58312,"byte_end":58385,"line_start":736,"line_end":736,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58390,"byte_end":58443,"line_start":737,"line_end":737,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58448,"byte_end":58455,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58460,"byte_end":58483,"line_start":739,"line_end":739,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59956,"byte_end":59966,"line_start":778,"line_end":778,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UCString<u32>>::from_chars","value":"pub fn from_chars<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a container of wide character data.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a container of wide character data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58715,"byte_end":58785,"line_start":747,"line_end":747,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58790,"byte_end":58793,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58798,"byte_end":58891,"line_start":749,"line_end":749,"column_start":5,"column_end":98}},{"value":"/ new string. The data will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58896,"byte_end":58960,"line_start":750,"line_end":750,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58965,"byte_end":58968,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58973,"byte_end":58987,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58992,"byte_end":58995,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59000,"byte_end":59072,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain the `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59077,"byte_end":59169,"line_start":755,"line_end":755,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59174,"byte_end":59177,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59182,"byte_end":59196,"line_start":757,"line_end":757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59201,"byte_end":59204,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59209,"byte_end":59220,"line_start":759,"line_end":759,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59225,"byte_end":59256,"line_start":760,"line_end":760,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59261,"byte_end":59309,"line_start":761,"line_end":761,"column_start":5,"column_end":53}},{"value":"/ # let cloned: Vec<u32> = v.iter().map(|&c| c as u32).collect();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59314,"byte_end":59381,"line_start":762,"line_end":762,"column_start":5,"column_end":72}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59386,"byte_end":59429,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_chars(v).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59434,"byte_end":59485,"line_start":764,"line_end":764,"column_start":5,"column_end":56}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59490,"byte_end":59533,"line_start":765,"line_end":765,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59538,"byte_end":59545,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59550,"byte_end":59553,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59558,"byte_end":59632,"line_start":768,"line_end":768,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59637,"byte_end":59640,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59645,"byte_end":59656,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59661,"byte_end":59692,"line_start":771,"line_end":771,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"T\\u{0}est\".chars().collect();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59697,"byte_end":59750,"line_start":772,"line_end":772,"column_start":5,"column_end":58}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59755,"byte_end":59798,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_chars(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59803,"byte_end":59843,"line_start":774,"line_end":774,"column_start":5,"column_end":45}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59848,"byte_end":59874,"line_start":775,"line_end":775,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59879,"byte_end":59932,"line_start":776,"line_end":776,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":59937,"byte_end":59944,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61588,"byte_end":61607,"line_start":820,"line_end":820,"column_start":12,"column_end":31},"name":"from_chars_with_nul","qualname":"<UCString<u32>>::from_chars_with_nul","value":"pub fn from_chars_with_nul<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a nul-terminated container of UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a nul-terminated container of UTF-32 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60355,"byte_end":60432,"line_start":790,"line_end":790,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60437,"byte_end":60440,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60445,"byte_end":60538,"line_start":792,"line_end":792,"column_start":5,"column_end":98}},{"value":"/ new string. The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60543,"byte_end":60625,"line_start":793,"line_end":793,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60630,"byte_end":60633,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60638,"byte_end":60652,"line_start":795,"line_end":795,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60657,"byte_end":60660,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60665,"byte_end":60755,"line_start":797,"line_end":797,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60760,"byte_end":60828,"line_start":798,"line_end":798,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60833,"byte_end":60836,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60841,"byte_end":60855,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60860,"byte_end":60863,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60868,"byte_end":60879,"line_start":802,"line_end":802,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60884,"byte_end":60915,"line_start":803,"line_end":803,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\\u{0}\".chars().collect();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60920,"byte_end":60973,"line_start":804,"line_end":804,"column_start":5,"column_end":58}},{"value":"/ # let cloned: Vec<u32> = v[..4].iter().map(|&c| c as u32).collect();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":60978,"byte_end":61050,"line_start":805,"line_end":805,"column_start":5,"column_end":77}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61055,"byte_end":61098,"line_start":806,"line_end":806,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_chars_with_nul(v).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61103,"byte_end":61163,"line_start":807,"line_end":807,"column_start":5,"column_end":65}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61168,"byte_end":61211,"line_start":808,"line_end":808,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61216,"byte_end":61223,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61228,"byte_end":61231,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61236,"byte_end":61318,"line_start":811,"line_end":811,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61323,"byte_end":61326,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61331,"byte_end":61342,"line_start":813,"line_end":813,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61347,"byte_end":61378,"line_start":814,"line_end":814,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61383,"byte_end":61431,"line_start":815,"line_end":815,"column_start":5,"column_end":53}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61436,"byte_end":61479,"line_start":816,"line_end":816,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_chars_with_nul(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61484,"byte_end":61533,"line_start":817,"line_end":817,"column_start":5,"column_end":54}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61538,"byte_end":61564,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":61569,"byte_end":61576,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62479,"byte_end":62499,"line_start":842,"line_end":842,"column_start":19,"column_end":39},"name":"from_chars_unchecked","qualname":"<UCString<u32>>::from_chars_unchecked","value":"pub unsafe fn from_chars_unchecked<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `U32CString` from a vector without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Creates a `U32CString` from a vector without checking for interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62017,"byte_end":62099,"line_start":832,"line_end":832,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62104,"byte_end":62107,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ A terminating nul value will be appended if the vector does not already have a terminating","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62112,"byte_end":62206,"line_start":834,"line_end":834,"column_start":5,"column_end":99}},{"value":"/ nul.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62211,"byte_end":62219,"line_start":835,"line_end":835,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62224,"byte_end":62227,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62232,"byte_end":62244,"line_start":837,"line_end":837,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62249,"byte_end":62252,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `new` except that no runtime assertion is made that `v`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62257,"byte_end":62345,"line_start":839,"line_end":839,"column_start":5,"column_end":93}},{"value":"/ contains no nul values. Providing a vector with nul values will result in an invalid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62350,"byte_end":62438,"line_start":840,"line_end":840,"column_start":5,"column_end":93}},{"value":"/ `U32CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62443,"byte_end":62460,"line_start":841,"line_end":841,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63311,"byte_end":63340,"line_start":862,"line_end":862,"column_start":19,"column_end":48},"name":"from_chars_with_nul_unchecked","qualname":"<UCString<u32>>::from_chars_with_nul_unchecked","value":"pub unsafe fn from_chars_with_nul_unchecked<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `U32CString` from a vector that should have a nul terminator, without checking\n for any nul values.","sig":null,"attributes":[{"value":"/ Creates a `U32CString` from a vector that should have a nul terminator, without checking","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62873,"byte_end":62965,"line_start":854,"line_end":854,"column_start":5,"column_end":97}},{"value":"/ for any nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62970,"byte_end":62993,"line_start":855,"line_end":855,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":62998,"byte_end":63001,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63006,"byte_end":63018,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63023,"byte_end":63026,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_vec_with_nul` except that no runtime assertion is made","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63031,"byte_end":63124,"line_start":859,"line_end":859,"column_start":5,"column_end":98}},{"value":"/ that `v` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63129,"byte_end":63222,"line_start":860,"line_end":860,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63227,"byte_end":63292,"line_start":861,"line_end":861,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64748,"byte_end":64756,"line_start":904,"line_end":904,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UCString<u32>>::from_str","value":"pub fn from_str<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str`.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63723,"byte_end":63766,"line_start":874,"line_end":874,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63771,"byte_end":63774,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63779,"byte_end":63833,"line_start":876,"line_end":876,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63838,"byte_end":63841,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63846,"byte_end":63860,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63865,"byte_end":63868,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63873,"byte_end":63945,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":63950,"byte_end":64040,"line_start":881,"line_end":881,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64045,"byte_end":64048,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64053,"byte_end":64067,"line_start":883,"line_end":883,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64072,"byte_end":64075,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64080,"byte_end":64091,"line_start":885,"line_end":885,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64096,"byte_end":64127,"line_start":886,"line_end":886,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64132,"byte_end":64155,"line_start":887,"line_end":887,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64160,"byte_end":64203,"line_start":888,"line_end":888,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64208,"byte_end":64257,"line_start":889,"line_end":889,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64262,"byte_end":64307,"line_start":890,"line_end":890,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64312,"byte_end":64319,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64324,"byte_end":64327,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64332,"byte_end":64406,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64411,"byte_end":64414,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64419,"byte_end":64430,"line_start":895,"line_end":895,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64435,"byte_end":64466,"line_start":896,"line_end":896,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64471,"byte_end":64499,"line_start":897,"line_end":897,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64504,"byte_end":64547,"line_start":898,"line_end":898,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64552,"byte_end":64590,"line_start":899,"line_end":899,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64595,"byte_end":64621,"line_start":900,"line_end":900,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64626,"byte_end":64679,"line_start":901,"line_end":901,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64684,"byte_end":64691,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64696,"byte_end":64736,"line_start":903,"line_end":903,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65551,"byte_end":65569,"line_start":926,"line_end":926,"column_start":19,"column_end":37},"name":"from_str_unchecked","qualname":"<UCString<u32>>::from_str_unchecked","value":"pub unsafe fn from_str_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str`, without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str`, without checking for interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":64910,"byte_end":64995,"line_start":909,"line_end":909,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65000,"byte_end":65003,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65008,"byte_end":65020,"line_start":911,"line_end":911,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65025,"byte_end":65028,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str` except that no runtime assertion is made that `s`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65033,"byte_end":65126,"line_start":913,"line_end":913,"column_start":5,"column_end":98}},{"value":"/ contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65131,"byte_end":65219,"line_start":914,"line_end":914,"column_start":5,"column_end":93}},{"value":"/ `U32CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65224,"byte_end":65241,"line_start":915,"line_end":915,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65246,"byte_end":65249,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65254,"byte_end":65268,"line_start":917,"line_end":917,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65273,"byte_end":65276,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65281,"byte_end":65292,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65297,"byte_end":65328,"line_start":920,"line_end":920,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65333,"byte_end":65356,"line_start":921,"line_end":921,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65361,"byte_end":65404,"line_start":922,"line_end":922,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_str_unchecked(s) };","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65409,"byte_end":65470,"line_start":923,"line_end":923,"column_start":5,"column_end":66}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65475,"byte_end":65520,"line_start":924,"line_end":924,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65525,"byte_end":65532,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66693,"byte_end":66710,"line_start":959,"line_end":959,"column_start":12,"column_end":29},"name":"from_str_with_nul","qualname":"<UCString<u32>>::from_str_with_nul","value":"pub fn from_str_with_nul<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str` with a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str` with a nul terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65710,"byte_end":65775,"line_start":931,"line_end":931,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65780,"byte_end":65783,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65788,"byte_end":65858,"line_start":933,"line_end":933,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65863,"byte_end":65866,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65871,"byte_end":65885,"line_start":935,"line_end":935,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65890,"byte_end":65893,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65898,"byte_end":65988,"line_start":937,"line_end":937,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":65993,"byte_end":66061,"line_start":938,"line_end":938,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66066,"byte_end":66069,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66074,"byte_end":66088,"line_start":940,"line_end":940,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66093,"byte_end":66096,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66101,"byte_end":66112,"line_start":942,"line_end":942,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66117,"byte_end":66148,"line_start":943,"line_end":943,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66153,"byte_end":66181,"line_start":944,"line_end":944,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66186,"byte_end":66229,"line_start":945,"line_end":945,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_str_with_nul(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66234,"byte_end":66292,"line_start":946,"line_end":946,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66297,"byte_end":66343,"line_start":947,"line_end":947,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66348,"byte_end":66355,"line_start":948,"line_end":948,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66360,"byte_end":66363,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66368,"byte_end":66450,"line_start":950,"line_end":950,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66455,"byte_end":66458,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66463,"byte_end":66474,"line_start":952,"line_end":952,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66479,"byte_end":66510,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66515,"byte_end":66538,"line_start":954,"line_end":954,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66543,"byte_end":66586,"line_start":955,"line_end":955,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_str_with_nul(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66591,"byte_end":66638,"line_start":956,"line_end":956,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66643,"byte_end":66669,"line_start":957,"line_end":957,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66674,"byte_end":66681,"line_start":958,"line_end":958,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67639,"byte_end":67666,"line_start":982,"line_end":982,"column_start":19,"column_end":46},"name":"from_str_with_nul_unchecked","qualname":"<UCString<u32>>::from_str_with_nul_unchecked","value":"pub unsafe fn from_str_with_nul_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str` that should have a terminating nul, but without\n checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str` that should have a terminating nul, but without","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66880,"byte_end":66970,"line_start":964,"line_end":964,"column_start":5,"column_end":95}},{"value":"/ checking for any nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":66975,"byte_end":67007,"line_start":965,"line_end":965,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67012,"byte_end":67015,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67020,"byte_end":67032,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67037,"byte_end":67040,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str_with_nul` except that no runtime assertion is made","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67045,"byte_end":67138,"line_start":969,"line_end":969,"column_start":5,"column_end":98}},{"value":"/ that `s` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67143,"byte_end":67236,"line_start":970,"line_end":970,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67241,"byte_end":67306,"line_start":971,"line_end":971,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67311,"byte_end":67314,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67319,"byte_end":67333,"line_start":973,"line_end":973,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67338,"byte_end":67341,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67346,"byte_end":67357,"line_start":975,"line_end":975,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67362,"byte_end":67393,"line_start":976,"line_end":976,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67398,"byte_end":67427,"line_start":977,"line_end":977,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67432,"byte_end":67475,"line_start":978,"line_end":978,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_str_with_nul_unchecked(s) };","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67480,"byte_end":67550,"line_start":979,"line_end":979,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67555,"byte_end":67608,"line_start":980,"line_end":980,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67613,"byte_end":67620,"line_start":981,"line_end":981,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68533,"byte_end":68541,"line_start":1006,"line_end":1006,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UCString<u32>>::from_ptr","value":"pub unsafe fn from_ptr(*const u32, usize) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `u32` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67816,"byte_end":67891,"line_start":987,"line_end":987,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67896,"byte_end":67899,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67904,"byte_end":67988,"line_start":989,"line_end":989,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":67993,"byte_end":67996,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68001,"byte_end":68055,"line_start":991,"line_end":991,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68060,"byte_end":68063,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68068,"byte_end":68082,"line_start":993,"line_end":993,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68087,"byte_end":68090,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68095,"byte_end":68167,"line_start":995,"line_end":995,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68172,"byte_end":68262,"line_start":996,"line_end":996,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68267,"byte_end":68270,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68275,"byte_end":68287,"line_start":998,"line_end":998,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68292,"byte_end":68295,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68300,"byte_end":68394,"line_start":1000,"line_end":1000,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68399,"byte_end":68412,"line_start":1001,"line_end":1001,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68417,"byte_end":68420,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68425,"byte_end":68437,"line_start":1003,"line_end":1003,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68442,"byte_end":68445,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68450,"byte_end":68514,"line_start":1005,"line_end":1005,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69475,"byte_end":69493,"line_start":1030,"line_end":1030,"column_start":19,"column_end":37},"name":"from_ptr_unchecked","qualname":"<UCString<u32>>::from_ptr_unchecked","value":"pub unsafe fn from_ptr_unchecked(*const u32, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `u32` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68800,"byte_end":68875,"line_start":1015,"line_end":1015,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68880,"byte_end":68883,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68888,"byte_end":68972,"line_start":1017,"line_end":1017,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68977,"byte_end":68980,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":68985,"byte_end":69047,"line_start":1019,"line_end":1019,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69052,"byte_end":69055,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69060,"byte_end":69072,"line_start":1021,"line_end":1021,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69077,"byte_end":69080,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69085,"byte_end":69179,"line_start":1023,"line_end":1023,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69184,"byte_end":69278,"line_start":1024,"line_end":1024,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U16CString` will be invalid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69283,"byte_end":69354,"line_start":1025,"line_end":1025,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69359,"byte_end":69362,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69367,"byte_end":69379,"line_start":1027,"line_end":1027,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69384,"byte_end":69387,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69392,"byte_end":69456,"line_start":1029,"line_end":1029,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70468,"byte_end":70485,"line_start":1058,"line_end":1058,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCString<u32>>::from_ptr_with_nul","value":"pub unsafe fn from_ptr_with_nul(*const u32, usize)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `u32` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69740,"byte_end":69814,"line_start":1039,"line_end":1039,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69819,"byte_end":69822,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69827,"byte_end":69911,"line_start":1041,"line_end":1041,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69916,"byte_end":69919,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69924,"byte_end":69994,"line_start":1043,"line_end":1043,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":69999,"byte_end":70002,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70007,"byte_end":70021,"line_start":1045,"line_end":1045,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70026,"byte_end":70029,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70034,"byte_end":70124,"line_start":1047,"line_end":1047,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70129,"byte_end":70197,"line_start":1048,"line_end":1048,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70202,"byte_end":70205,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70210,"byte_end":70222,"line_start":1050,"line_end":1050,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70227,"byte_end":70230,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70235,"byte_end":70329,"line_start":1052,"line_end":1052,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70334,"byte_end":70347,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70352,"byte_end":70355,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70360,"byte_end":70372,"line_start":1055,"line_end":1055,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70377,"byte_end":70380,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70385,"byte_end":70449,"line_start":1057,"line_end":1057,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71635,"byte_end":71662,"line_start":1087,"line_end":1087,"column_start":19,"column_end":46},"name":"from_ptr_with_nul_unchecked","qualname":"<UCString<u32>>::from_ptr_with_nul_unchecked","value":"pub unsafe fn from_ptr_with_nul_unchecked(*const u32, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `u32` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70788,"byte_end":70862,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70867,"byte_end":70870,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70875,"byte_end":70959,"line_start":1072,"line_end":1072,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70964,"byte_end":70967,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":70972,"byte_end":71062,"line_start":1074,"line_end":1074,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71067,"byte_end":71156,"line_start":1075,"line_end":1075,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71161,"byte_end":71164,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71169,"byte_end":71181,"line_start":1077,"line_end":1077,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71186,"byte_end":71189,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71194,"byte_end":71288,"line_start":1079,"line_end":1079,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71293,"byte_end":71386,"line_start":1080,"line_end":1080,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71391,"byte_end":71476,"line_start":1081,"line_end":1081,"column_start":5,"column_end":90}},{"value":"/ `U32CString` will be invalid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71481,"byte_end":71514,"line_start":1082,"line_end":1082,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71519,"byte_end":71522,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71527,"byte_end":71539,"line_start":1084,"line_end":1084,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71544,"byte_end":71547,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71552,"byte_end":71616,"line_start":1086,"line_end":1086,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72637,"byte_end":72650,"line_start":1115,"line_end":1115,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UCString<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr(*const char, usize) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `char` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71918,"byte_end":71994,"line_start":1096,"line_end":1096,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":71999,"byte_end":72002,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72007,"byte_end":72092,"line_start":1098,"line_end":1098,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72097,"byte_end":72100,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72105,"byte_end":72159,"line_start":1100,"line_end":1100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72164,"byte_end":72167,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72172,"byte_end":72186,"line_start":1102,"line_end":1102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72191,"byte_end":72194,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72199,"byte_end":72271,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72276,"byte_end":72366,"line_start":1105,"line_end":1105,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72371,"byte_end":72374,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72379,"byte_end":72391,"line_start":1107,"line_end":1107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72396,"byte_end":72399,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72404,"byte_end":72498,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72503,"byte_end":72516,"line_start":1110,"line_end":1110,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72521,"byte_end":72524,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72529,"byte_end":72541,"line_start":1112,"line_end":1112,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72546,"byte_end":72549,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72554,"byte_end":72618,"line_start":1114,"line_end":1114,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73456,"byte_end":73479,"line_start":1134,"line_end":1134,"column_start":19,"column_end":42},"name":"from_char_ptr_unchecked","qualname":"<UCString<u32>>::from_char_ptr_unchecked","value":"pub unsafe fn from_char_ptr_unchecked(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `char` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72779,"byte_end":72855,"line_start":1119,"line_end":1119,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72860,"byte_end":72863,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72868,"byte_end":72953,"line_start":1121,"line_end":1121,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72958,"byte_end":72961,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":72966,"byte_end":73028,"line_start":1123,"line_end":1123,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73033,"byte_end":73036,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73041,"byte_end":73053,"line_start":1125,"line_end":1125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73058,"byte_end":73061,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73066,"byte_end":73160,"line_start":1127,"line_end":1127,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73165,"byte_end":73259,"line_start":1128,"line_end":1128,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U32CString` will be invalid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73264,"byte_end":73335,"line_start":1129,"line_end":1129,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73340,"byte_end":73343,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73348,"byte_end":73360,"line_start":1131,"line_end":1131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73365,"byte_end":73368,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73373,"byte_end":73437,"line_start":1133,"line_end":1133,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74325,"byte_end":74347,"line_start":1157,"line_end":1157,"column_start":19,"column_end":41},"name":"from_char_ptr_with_nul","qualname":"<UCString<u32>>::from_char_ptr_with_nul","value":"pub unsafe fn from_char_ptr_with_nul(*const char, usize)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `char` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73595,"byte_end":73670,"line_start":1138,"line_end":1138,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73675,"byte_end":73678,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73683,"byte_end":73768,"line_start":1140,"line_end":1140,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73773,"byte_end":73776,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73781,"byte_end":73851,"line_start":1142,"line_end":1142,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73856,"byte_end":73859,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73864,"byte_end":73878,"line_start":1144,"line_end":1144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73883,"byte_end":73886,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73891,"byte_end":73981,"line_start":1146,"line_end":1146,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":73986,"byte_end":74054,"line_start":1147,"line_end":1147,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74059,"byte_end":74062,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74067,"byte_end":74079,"line_start":1149,"line_end":1149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74084,"byte_end":74087,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74092,"byte_end":74186,"line_start":1151,"line_end":1151,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74191,"byte_end":74204,"line_start":1152,"line_end":1152,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74209,"byte_end":74212,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74217,"byte_end":74229,"line_start":1154,"line_end":1154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74234,"byte_end":74237,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74242,"byte_end":74306,"line_start":1156,"line_end":1156,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75364,"byte_end":75396,"line_start":1181,"line_end":1181,"column_start":19,"column_end":51},"name":"from_char_ptr_with_nul_unchecked","qualname":"<UCString<u32>>::from_char_ptr_with_nul_unchecked","value":"pub unsafe fn from_char_ptr_with_nul_unchecked(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `char` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74515,"byte_end":74590,"line_start":1164,"line_end":1164,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74595,"byte_end":74598,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74603,"byte_end":74688,"line_start":1166,"line_end":1166,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74693,"byte_end":74696,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74701,"byte_end":74791,"line_start":1168,"line_end":1168,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74796,"byte_end":74885,"line_start":1169,"line_end":1169,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74890,"byte_end":74893,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74898,"byte_end":74910,"line_start":1171,"line_end":1171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74915,"byte_end":74918,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":74923,"byte_end":75017,"line_start":1173,"line_end":1173,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75022,"byte_end":75115,"line_start":1174,"line_end":1174,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75120,"byte_end":75205,"line_start":1175,"line_end":1175,"column_start":5,"column_end":90}},{"value":"/ `U32CString` will be invalid.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75210,"byte_end":75243,"line_start":1176,"line_end":1176,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75248,"byte_end":75251,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75256,"byte_end":75268,"line_start":1178,"line_end":1178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75273,"byte_end":75276,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75281,"byte_end":75345,"line_start":1180,"line_end":1180,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76572,"byte_end":76583,"line_start":1215,"line_end":1215,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UCString<u32>>::from_os_str","value":"pub fn from_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr`.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75521,"byte_end":75601,"line_start":1185,"line_end":1185,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75606,"byte_end":75609,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75614,"byte_end":75668,"line_start":1187,"line_end":1187,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75673,"byte_end":75676,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75681,"byte_end":75695,"line_start":1189,"line_end":1189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75700,"byte_end":75703,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75708,"byte_end":75780,"line_start":1191,"line_end":1191,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75785,"byte_end":75875,"line_start":1192,"line_end":1192,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75880,"byte_end":75883,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75888,"byte_end":75902,"line_start":1194,"line_end":1194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75907,"byte_end":75910,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75915,"byte_end":75926,"line_start":1196,"line_end":1196,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75931,"byte_end":75962,"line_start":1197,"line_end":1197,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75967,"byte_end":75990,"line_start":1198,"line_end":1198,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":75995,"byte_end":76038,"line_start":1199,"line_end":1199,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_os_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76043,"byte_end":76095,"line_start":1200,"line_end":1200,"column_start":5,"column_end":57}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76100,"byte_end":76145,"line_start":1201,"line_end":1201,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76150,"byte_end":76157,"line_start":1202,"line_end":1202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76162,"byte_end":76165,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76170,"byte_end":76244,"line_start":1204,"line_end":1204,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76249,"byte_end":76252,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76257,"byte_end":76268,"line_start":1206,"line_end":1206,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76273,"byte_end":76304,"line_start":1207,"line_end":1207,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76309,"byte_end":76337,"line_start":1208,"line_end":1208,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76342,"byte_end":76385,"line_start":1209,"line_end":1209,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_os_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76390,"byte_end":76431,"line_start":1210,"line_end":1210,"column_start":5,"column_end":46}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76436,"byte_end":76462,"line_start":1211,"line_end":1211,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76467,"byte_end":76520,"line_start":1212,"line_end":1212,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76525,"byte_end":76532,"line_start":1213,"line_end":1213,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76537,"byte_end":76560,"line_start":1214,"line_end":1214,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77487,"byte_end":77508,"line_start":1239,"line_end":1239,"column_start":19,"column_end":40},"name":"from_os_str_unchecked","qualname":"<UCString<u32>>::from_os_str_unchecked","value":"pub unsafe fn from_os_str_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr`, without\n checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr`, without","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76767,"byte_end":76855,"line_start":1220,"line_end":1220,"column_start":5,"column_end":93}},{"value":"/ checking for interior nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76860,"byte_end":76897,"line_start":1221,"line_end":1221,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76902,"byte_end":76905,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76910,"byte_end":76922,"line_start":1223,"line_end":1223,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76927,"byte_end":76930,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str` except that no runtime assertion is made that","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":76935,"byte_end":77027,"line_start":1225,"line_end":1225,"column_start":5,"column_end":97}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77032,"byte_end":77124,"line_start":1226,"line_end":1226,"column_start":5,"column_end":97}},{"value":"/ `U32CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77129,"byte_end":77146,"line_start":1227,"line_end":1227,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77151,"byte_end":77154,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77159,"byte_end":77173,"line_start":1229,"line_end":1229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77178,"byte_end":77181,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77186,"byte_end":77197,"line_start":1231,"line_end":1231,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77202,"byte_end":77233,"line_start":1232,"line_end":1232,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77238,"byte_end":77261,"line_start":1233,"line_end":1233,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77266,"byte_end":77309,"line_start":1234,"line_end":1234,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_os_str_unchecked(s) };","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77314,"byte_end":77378,"line_start":1235,"line_end":1235,"column_start":5,"column_end":69}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77383,"byte_end":77428,"line_start":1236,"line_end":1236,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77433,"byte_end":77440,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77445,"byte_end":77468,"line_start":1238,"line_end":1238,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78741,"byte_end":78761,"line_start":1274,"line_end":1274,"column_start":12,"column_end":32},"name":"from_os_str_with_nul","qualname":"<UCString<u32>>::from_os_str_with_nul","value":"pub fn from_os_str_with_nul<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr` with a nul","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77679,"byte_end":77769,"line_start":1244,"line_end":1244,"column_start":5,"column_end":95}},{"value":"/ terminator.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77774,"byte_end":77789,"line_start":1245,"line_end":1245,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77794,"byte_end":77797,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77802,"byte_end":77872,"line_start":1247,"line_end":1247,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77877,"byte_end":77880,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77885,"byte_end":77899,"line_start":1249,"line_end":1249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77904,"byte_end":77907,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":77912,"byte_end":78002,"line_start":1251,"line_end":1251,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78007,"byte_end":78075,"line_start":1252,"line_end":1252,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78080,"byte_end":78083,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78088,"byte_end":78102,"line_start":1254,"line_end":1254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78107,"byte_end":78110,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78115,"byte_end":78126,"line_start":1256,"line_end":1256,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78131,"byte_end":78162,"line_start":1257,"line_end":1257,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78167,"byte_end":78195,"line_start":1258,"line_end":1258,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78200,"byte_end":78243,"line_start":1259,"line_end":1259,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_os_str_with_nul(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78248,"byte_end":78309,"line_start":1260,"line_end":1260,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78314,"byte_end":78360,"line_start":1261,"line_end":1261,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78365,"byte_end":78372,"line_start":1262,"line_end":1262,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78377,"byte_end":78380,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78385,"byte_end":78467,"line_start":1264,"line_end":1264,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78472,"byte_end":78475,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78480,"byte_end":78491,"line_start":1266,"line_end":1266,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78496,"byte_end":78527,"line_start":1267,"line_end":1267,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78532,"byte_end":78555,"line_start":1268,"line_end":1268,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78560,"byte_end":78603,"line_start":1269,"line_end":1269,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_os_str_with_nul(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78608,"byte_end":78658,"line_start":1270,"line_end":1270,"column_start":5,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78663,"byte_end":78689,"line_start":1271,"line_end":1271,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78694,"byte_end":78701,"line_start":1272,"line_end":1272,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78706,"byte_end":78729,"line_start":1273,"line_end":1273,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79806,"byte_end":79836,"line_start":1300,"line_end":1300,"column_start":19,"column_end":49},"name":"from_os_str_with_nul_unchecked","qualname":"<UCString<u32>>::from_os_str_with_nul_unchecked","value":"pub unsafe fn from_os_str_with_nul_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr` that should\n have a terminating nul, but without checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr` that should","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":78976,"byte_end":79067,"line_start":1281,"line_end":1281,"column_start":5,"column_end":96}},{"value":"/ have a terminating nul, but without checking for any nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79072,"byte_end":79140,"line_start":1282,"line_end":1282,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79145,"byte_end":79148,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79153,"byte_end":79165,"line_start":1284,"line_end":1284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79170,"byte_end":79173,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str_with_nul` except that no runtime assertion is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79178,"byte_end":79269,"line_start":1286,"line_end":1286,"column_start":5,"column_end":96}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79274,"byte_end":79362,"line_start":1287,"line_end":1287,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79367,"byte_end":79442,"line_start":1288,"line_end":1288,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79447,"byte_end":79450,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79455,"byte_end":79469,"line_start":1290,"line_end":1290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79474,"byte_end":79477,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79482,"byte_end":79493,"line_start":1292,"line_end":1292,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79498,"byte_end":79529,"line_start":1293,"line_end":1293,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79534,"byte_end":79563,"line_start":1294,"line_end":1294,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79568,"byte_end":79611,"line_start":1295,"line_end":1295,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_os_str_with_nul_unchecked(s) };","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79616,"byte_end":79689,"line_start":1296,"line_end":1296,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79694,"byte_end":79747,"line_start":1297,"line_end":1297,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79752,"byte_end":79759,"line_start":1298,"line_end":1298,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":79764,"byte_end":79787,"line_start":1299,"line_end":1299,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84205,"byte_end":84217,"line_start":1487,"line_end":1487,"column_start":12,"column_end":24},"name":"nul_position","qualname":"<NulError<C>>::nul_position","value":"pub fn nul_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the nul value in the slice that was provided to `U16CString`.\n","sig":null,"attributes":[{"value":"/ Returns the position of the nul value in the slice that was provided to `U16CString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84104,"byte_end":84193,"line_start":1486,"line_end":1486,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84398,"byte_end":84406,"line_start":1493,"line_end":1493,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<NulError<C>>::into_vec","value":"pub fn into_vec(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error, returning the underlying vector of u16 values which generated the error\n in the first place.\n","sig":null,"attributes":[{"value":"/ Consumes this error, returning the underlying vector of u16 values which generated the error","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84262,"byte_end":84358,"line_start":1491,"line_end":1491,"column_start":5,"column_end":101}},{"value":"/ in the first place.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84363,"byte_end":84386,"line_start":1492,"line_end":1492,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":331},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85990,"byte_end":86000,"line_start":1541,"line_end":1541,"column_start":10,"column_end":20},"name":"U16CString","qualname":"::ucstring::U16CString","value":"UCString<u16>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84896,"byte_end":84985,"line_start":1517,"line_end":1517,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84986,"byte_end":84989,"line_start":1518,"line_end":1518,"column_start":1,"column_end":4}},{"value":"/ `U16CString` is aware of nul values. Unless unchecked conversions are used, all `U16CString`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84990,"byte_end":85086,"line_start":1519,"line_end":1519,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85087,"byte_end":85185,"line_start":1520,"line_end":1520,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 data. These strings are intended to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85186,"byte_end":85284,"line_start":1521,"line_end":1521,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85285,"byte_end":85376,"line_start":1522,"line_end":1522,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85377,"byte_end":85380,"line_start":1523,"line_end":1523,"column_start":1,"column_end":4}},{"value":"/ `U16CString` can be converted to and from many other string types, including `U16String`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85381,"byte_end":85474,"line_start":1524,"line_end":1524,"column_start":1,"column_end":94}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85475,"byte_end":85545,"line_start":1525,"line_end":1525,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85546,"byte_end":85549,"line_start":1526,"line_end":1526,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85550,"byte_end":85564,"line_start":1527,"line_end":1527,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85565,"byte_end":85568,"line_start":1528,"line_end":1528,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16CString` and shows how to convert a `U16CString` to a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85569,"byte_end":85665,"line_start":1529,"line_end":1529,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85666,"byte_end":85692,"line_start":1530,"line_end":1530,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85693,"byte_end":85696,"line_start":1531,"line_end":1531,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85697,"byte_end":85708,"line_start":1532,"line_end":1532,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85709,"byte_end":85740,"line_start":1533,"line_end":1533,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85741,"byte_end":85760,"line_start":1534,"line_end":1534,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85761,"byte_end":85809,"line_start":1535,"line_end":1535,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85810,"byte_end":85858,"line_start":1536,"line_end":1536,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85859,"byte_end":85895,"line_start":1537,"line_end":1537,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85896,"byte_end":85938,"line_start":1538,"line_end":1538,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85939,"byte_end":85972,"line_start":1539,"line_end":1539,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":85973,"byte_end":85980,"line_start":1540,"line_end":1540,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":332},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":87111,"byte_end":87121,"line_start":1567,"line_end":1567,"column_start":10,"column_end":20},"name":"U32CString","qualname":"::ucstring::U32CString","value":"UCString<u32>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable C-style wide string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style wide string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86019,"byte_end":86106,"line_start":1543,"line_end":1543,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86107,"byte_end":86110,"line_start":1544,"line_end":1544,"column_start":1,"column_end":4}},{"value":"/ `U32CString` is aware of nul values. Unless unchecked conversions are used, all `U32CString`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86111,"byte_end":86207,"line_start":1545,"line_end":1545,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86208,"byte_end":86306,"line_start":1546,"line_end":1546,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-32 data. These strings are intended to","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86307,"byte_end":86405,"line_start":1547,"line_end":1547,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86406,"byte_end":86497,"line_start":1548,"line_end":1548,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86498,"byte_end":86501,"line_start":1549,"line_end":1549,"column_start":1,"column_end":4}},{"value":"/ `U32CString` can be converted to and from many other string types, including `U32String`,","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86502,"byte_end":86595,"line_start":1550,"line_end":1550,"column_start":1,"column_end":94}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86596,"byte_end":86666,"line_start":1551,"line_end":1551,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86667,"byte_end":86670,"line_start":1552,"line_end":1552,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86671,"byte_end":86685,"line_start":1553,"line_end":1553,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86686,"byte_end":86689,"line_start":1554,"line_end":1554,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U32CString` and shows how to convert a `U32CString` to a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86690,"byte_end":86786,"line_start":1555,"line_end":1555,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86787,"byte_end":86813,"line_start":1556,"line_end":1556,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86814,"byte_end":86817,"line_start":1557,"line_end":1557,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86818,"byte_end":86829,"line_start":1558,"line_end":1558,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86830,"byte_end":86861,"line_start":1559,"line_end":1559,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86862,"byte_end":86881,"line_start":1560,"line_end":1560,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86882,"byte_end":86930,"line_start":1561,"line_end":1561,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86931,"byte_end":86979,"line_start":1562,"line_end":1562,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":86980,"byte_end":87016,"line_start":1563,"line_end":1563,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":87017,"byte_end":87059,"line_start":1564,"line_end":1564,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":87060,"byte_end":87093,"line_start":1565,"line_end":1565,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":87094,"byte_end":87101,"line_start":1566,"line_end":1566,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":333},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":87269,"byte_end":87280,"line_start":1570,"line_end":1570,"column_start":10,"column_end":21},"name":"WideCString","qualname":"::ucstring::WideCString","value":"UCString<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":87140,"byte_end":87259,"line_start":1569,"line_end":1569,"column_start":1,"column_end":120}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":87814,"byte_end":87828,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"FromUtf32Error","qualname":"::ustr::FromUtf32Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" A possible error value when converting a String from a UTF-32 byte slice.","sig":null,"attributes":[{"value":"/ A possible error value when converting a String from a UTF-32 byte slice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":87604,"byte_end":87681,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":87682,"byte_end":87685,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is the error type for the `to_string` method on `U32Str`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":87686,"byte_end":87757,"line_start":19,"line_end":19,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":723},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89058,"byte_end":89062,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"UStr","qualname":"::ustr::UStr","value":"UStr {  }","parent":null,"children":[{"krate":0,"index":725}],"decl_id":null,"docs":" String slice reference for `U16String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U16String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88178,"byte_end":88221,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88222,"byte_end":88225,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `UStr` is to `UString` as `str` is to `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88226,"byte_end":88277,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88278,"byte_end":88281,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `UStr` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88282,"byte_end":88370,"line_start":40,"line_end":40,"column_start":1,"column_end":89}},{"value":"/ contain invalid and ill-formed UTF-16 or UTF-32 data. These strings are intended to be used","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88371,"byte_end":88466,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/ with FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88467,"byte_end":88565,"line_start":42,"line_end":42,"column_start":1,"column_end":99}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88566,"byte_end":88665,"line_start":43,"line_end":43,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88666,"byte_end":88669,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ `UCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88670,"byte_end":88739,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88740,"byte_end":88743,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ `UStr` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88744,"byte_end":88841,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88842,"byte_end":88879,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88880,"byte_end":88883,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16Str` or `U32Str` or `WideStr` to using this type","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88884,"byte_end":88977,"line_start":50,"line_end":50,"column_start":1,"column_end":94}},{"value":"/ directly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88978,"byte_end":88991,"line_start":51,"line_end":51,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89180,"byte_end":89183,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<UStr<C>>::new","value":"pub fn new<S: AsRef<Self> + ?Sized>(&S) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces a value into a `UStr`.\n","sig":null,"attributes":[{"value":"/ Coerces a value into a `UStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89134,"byte_end":89168,"line_start":58,"line_end":58,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90013,"byte_end":90021,"line_start":82,"line_end":82,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UStr<C>>::from_ptr","value":"pub unsafe fn from_ptr<'a>(*const C, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89257,"byte_end":89309,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89314,"byte_end":89317,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89322,"byte_end":89400,"line_start":65,"line_end":65,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89405,"byte_end":89408,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89413,"byte_end":89425,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89430,"byte_end":89433,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89438,"byte_end":89532,"line_start":69,"line_end":69,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89537,"byte_end":89550,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89555,"byte_end":89558,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89563,"byte_end":89575,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89580,"byte_end":89583,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89588,"byte_end":89628,"line_start":74,"line_end":74,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89633,"byte_end":89636,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89641,"byte_end":89653,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89658,"byte_end":89661,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89666,"byte_end":89756,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89761,"byte_end":89851,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89856,"byte_end":89951,"line_start":80,"line_end":80,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89956,"byte_end":89994,"line_start":81,"line_end":81,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90324,"byte_end":90334,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<UStr<C>>::from_slice","value":"pub fn from_slice(&[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a slice of code points.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a slice of code points.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90206,"byte_end":90258,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90263,"byte_end":90266,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90271,"byte_end":90312,"line_start":90,"line_end":90,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90546,"byte_end":90556,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"to_ustring","qualname":"<UStr<C>>::to_ustring","value":"pub fn to_ustring(&Self) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a new owned `UString`.\n","sig":null,"attributes":[{"value":"/ Copies the wide string to a new owned `UString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90452,"byte_end":90504,"line_start":96,"line_end":96,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90509,"byte_end":90534,"line_start":97,"line_end":97,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90699,"byte_end":90707,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UStr<C>>::as_slice","value":"pub fn as_slice(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string.\n","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90644,"byte_end":90687,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90898,"byte_end":90904,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<UStr<C>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const C","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the wide string.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the wide string.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90756,"byte_end":90801,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90806,"byte_end":90809,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The pointer is valid only as long as the lifetime of this reference.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90814,"byte_end":90886,"line_start":109,"line_end":109,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91067,"byte_end":91070,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"len","qualname":"<UStr<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the wide string as number of elements (**not** number of bytes).\n","sig":null,"attributes":[{"value":"/ Returns the length of the wide string as number of elements (**not** number of bytes).","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":90965,"byte_end":91055,"line_start":114,"line_end":114,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91191,"byte_end":91199,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UStr<C>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this wide string contains no data.\n","sig":null,"attributes":[{"value":"/ Returns whether this wide string contains no data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91125,"byte_end":91179,"line_start":119,"line_end":119,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91374,"byte_end":91386,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"into_ustring","qualname":"<UStr<C>>::into_ustring","value":"pub fn into_ustring(Box<Self>) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Box<UStr>` into a `UString` without copying or allocating.\n","sig":null,"attributes":[{"value":"/ Converts a `Box<UStr>` into a `UString` without copying or allocating.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91258,"byte_end":91332,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91337,"byte_end":91362,"line_start":125,"line_end":125,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92290,"byte_end":92302,"line_start":154,"line_end":154,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UStr<u16>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91608,"byte_end":91657,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91662,"byte_end":91665,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U16Str`. Since `U16Str` makes no guarantees that it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91670,"byte_end":91761,"line_start":137,"line_end":137,"column_start":5,"column_end":96}},{"value":"/ valid UTF-16, there is no guarantee that the resulting `OsString` will be valid data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91766,"byte_end":91855,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91860,"byte_end":91863,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91868,"byte_end":91882,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91887,"byte_end":91890,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91895,"byte_end":91906,"line_start":142,"line_end":142,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91911,"byte_end":91941,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91946,"byte_end":91973,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91978,"byte_end":92001,"line_start":145,"line_end":145,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92006,"byte_end":92049,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92054,"byte_end":92092,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92097,"byte_end":92143,"line_start":148,"line_end":148,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92148,"byte_end":92184,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92189,"byte_end":92192,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92197,"byte_end":92238,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92243,"byte_end":92250,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92255,"byte_end":92278,"line_start":153,"line_end":153,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92972,"byte_end":92981,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UStr<u16>>::to_string","value":"pub fn to_string(&Self) -> Result<String, FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-16 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-16 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92396,"byte_end":92470,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92475,"byte_end":92478,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92483,"byte_end":92497,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92502,"byte_end":92505,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-16 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92510,"byte_end":92578,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92583,"byte_end":92586,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92591,"byte_end":92605,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92610,"byte_end":92613,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92618,"byte_end":92629,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92634,"byte_end":92664,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92669,"byte_end":92692,"line_start":168,"line_end":168,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92697,"byte_end":92740,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92745,"byte_end":92783,"line_start":170,"line_end":170,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92788,"byte_end":92839,"line_start":171,"line_end":171,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92844,"byte_end":92883,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92888,"byte_end":92891,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92896,"byte_end":92918,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92923,"byte_end":92930,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":92935,"byte_end":92960,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93606,"byte_end":93621,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UStr<u16>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93076,"byte_end":93117,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93122,"byte_end":93125,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with *U+FFFD REPLACEMENT CHARACTER*.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93130,"byte_end":93209,"line_start":183,"line_end":183,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93214,"byte_end":93217,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93222,"byte_end":93236,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93241,"byte_end":93244,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93249,"byte_end":93260,"line_start":187,"line_end":187,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93265,"byte_end":93295,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93300,"byte_end":93323,"line_start":189,"line_end":189,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93328,"byte_end":93371,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93376,"byte_end":93414,"line_start":191,"line_end":191,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93419,"byte_end":93470,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/ let lossy = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93475,"byte_end":93514,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93519,"byte_end":93522,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lossy, s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93527,"byte_end":93552,"line_start":195,"line_end":195,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93557,"byte_end":93564,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93569,"byte_end":93594,"line_start":197,"line_end":197,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94489,"byte_end":94502,"line_start":223,"line_end":223,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UStr<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr<'a>(*const char, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93717,"byte_end":93778,"line_start":204,"line_end":204,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93783,"byte_end":93786,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93791,"byte_end":93876,"line_start":206,"line_end":206,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93881,"byte_end":93884,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93889,"byte_end":93901,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93906,"byte_end":93909,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93914,"byte_end":94008,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94013,"byte_end":94026,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94031,"byte_end":94034,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94039,"byte_end":94051,"line_start":213,"line_end":213,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94056,"byte_end":94059,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94064,"byte_end":94104,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94109,"byte_end":94112,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94117,"byte_end":94129,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94134,"byte_end":94137,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94142,"byte_end":94232,"line_start":219,"line_end":219,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94237,"byte_end":94327,"line_start":220,"line_end":220,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94332,"byte_end":94427,"line_start":221,"line_end":221,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94432,"byte_end":94470,"line_start":222,"line_end":222,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94731,"byte_end":94746,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"from_char_slice","qualname":"<UStr<u32>>::from_char_slice","value":"pub fn from_char_slice(&[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a slice of `u32` code points.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a slice of `u32` code points.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94605,"byte_end":94665,"line_start":227,"line_end":227,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94670,"byte_end":94673,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94678,"byte_end":94719,"line_start":229,"line_end":229,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95554,"byte_end":95566,"line_start":254,"line_end":254,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UStr<u32>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94872,"byte_end":94921,"line_start":235,"line_end":235,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94926,"byte_end":94929,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U32Str`. Since `U32Str` makes no guarantees that it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":94934,"byte_end":95025,"line_start":237,"line_end":237,"column_start":5,"column_end":96}},{"value":"/ valid UTF-32, there is no guarantee that the resulting `OsString` will be valid data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95030,"byte_end":95119,"line_start":238,"line_end":238,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95124,"byte_end":95127,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95132,"byte_end":95146,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95151,"byte_end":95154,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95159,"byte_end":95170,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95175,"byte_end":95205,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95210,"byte_end":95237,"line_start":244,"line_end":244,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95242,"byte_end":95265,"line_start":245,"line_end":245,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95270,"byte_end":95313,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95318,"byte_end":95356,"line_start":247,"line_end":247,"column_start":5,"column_end":43}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95361,"byte_end":95407,"line_start":248,"line_end":248,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95412,"byte_end":95448,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95453,"byte_end":95456,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95461,"byte_end":95502,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95507,"byte_end":95514,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95519,"byte_end":95542,"line_start":253,"line_end":253,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96223,"byte_end":96232,"line_start":277,"line_end":277,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UStr<u32>>::to_string","value":"pub fn to_string(&Self) -> Result<String, FromUtf32Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-32 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-32 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95647,"byte_end":95721,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95726,"byte_end":95729,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95734,"byte_end":95748,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95753,"byte_end":95756,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-32 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95761,"byte_end":95829,"line_start":262,"line_end":262,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95834,"byte_end":95837,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95842,"byte_end":95856,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95861,"byte_end":95864,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95869,"byte_end":95880,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95885,"byte_end":95915,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95920,"byte_end":95943,"line_start":268,"line_end":268,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95948,"byte_end":95991,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":95996,"byte_end":96034,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96039,"byte_end":96090,"line_start":271,"line_end":271,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96095,"byte_end":96134,"line_start":272,"line_end":272,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96139,"byte_end":96142,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96147,"byte_end":96169,"line_start":274,"line_end":274,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96174,"byte_end":96181,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96186,"byte_end":96211,"line_start":276,"line_end":276,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97390,"byte_end":97405,"line_start":310,"line_end":310,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UStr<u32>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96860,"byte_end":96901,"line_start":293,"line_end":293,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96906,"byte_end":96909,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with *U+FFFD REPLACEMENT CHARACTER*.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96914,"byte_end":96993,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":96998,"byte_end":97001,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97006,"byte_end":97020,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97025,"byte_end":97028,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97033,"byte_end":97044,"line_start":299,"line_end":299,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97049,"byte_end":97079,"line_start":300,"line_end":300,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97084,"byte_end":97107,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97112,"byte_end":97155,"line_start":302,"line_end":302,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97160,"byte_end":97198,"line_start":303,"line_end":303,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97203,"byte_end":97254,"line_start":304,"line_end":304,"column_start":5,"column_end":56}},{"value":"/ let lossy = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97259,"byte_end":97298,"line_start":305,"line_end":305,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97303,"byte_end":97306,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lossy, s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97311,"byte_end":97336,"line_start":307,"line_end":307,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97341,"byte_end":97348,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97353,"byte_end":97378,"line_start":309,"line_end":309,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98655,"byte_end":98661,"line_start":341,"line_end":341,"column_start":10,"column_end":16},"name":"U16Str","qualname":"::ustr::U16Str","value":"UStr<u16>","parent":null,"children":[],"decl_id":null,"docs":" String slice reference for `U16String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U16String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97943,"byte_end":97986,"line_start":328,"line_end":328,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97987,"byte_end":97990,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ `U16Str` is to `U16String` as `str` is to `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":97991,"byte_end":98046,"line_start":330,"line_end":330,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98047,"byte_end":98050,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ `U16Str` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98051,"byte_end":98141,"line_start":332,"line_end":332,"column_start":1,"column_end":91}},{"value":"/ contain invalid and ill-formed UTF-16 data. These strings are intended to be used with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98142,"byte_end":98232,"line_start":333,"line_end":333,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98233,"byte_end":98326,"line_start":334,"line_end":334,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98327,"byte_end":98426,"line_start":335,"line_end":335,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98427,"byte_end":98430,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ `WideCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98431,"byte_end":98503,"line_start":337,"line_end":337,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98504,"byte_end":98507,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ `U16Str` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98508,"byte_end":98607,"line_start":339,"line_end":339,"column_start":1,"column_end":100}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98608,"byte_end":98645,"line_start":340,"line_end":340,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":399},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99388,"byte_end":99394,"line_start":356,"line_end":356,"column_start":10,"column_end":16},"name":"U32Str","qualname":"::ustr::U32Str","value":"UStr<u32>","parent":null,"children":[],"decl_id":null,"docs":" String slice reference for `U32String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U32String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98676,"byte_end":98719,"line_start":343,"line_end":343,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98720,"byte_end":98723,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ `U32Str` is to `U32String` as `str` is to `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98724,"byte_end":98779,"line_start":345,"line_end":345,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98780,"byte_end":98783,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ `U32Str` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98784,"byte_end":98874,"line_start":347,"line_end":347,"column_start":1,"column_end":91}},{"value":"/ contain invalid and ill-formed UTF-32 data. These strings are intended to be used with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98875,"byte_end":98965,"line_start":348,"line_end":348,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":98966,"byte_end":99059,"line_start":349,"line_end":349,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99060,"byte_end":99159,"line_start":350,"line_end":350,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99160,"byte_end":99163,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ `WideCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99164,"byte_end":99236,"line_start":352,"line_end":352,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99237,"byte_end":99240,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ `U32Str` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99241,"byte_end":99340,"line_start":354,"line_end":354,"column_start":1,"column_end":100}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99341,"byte_end":99378,"line_start":355,"line_end":355,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":400},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99532,"byte_end":99539,"line_start":359,"line_end":359,"column_start":10,"column_end":17},"name":"WideStr","qualname":"::ustr::WideStr","value":"UStr<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16Str` or `U32Str` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16Str` or `U32Str` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":99409,"byte_end":99522,"line_start":358,"line_end":358,"column_start":1,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":750},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101639,"byte_end":101646,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"UString","qualname":"::ustring::UString","value":"UString {  }","parent":null,"children":[{"krate":0,"index":752}],"decl_id":null,"docs":" An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":99980,"byte_end":100050,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100051,"byte_end":100054,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `UString` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100055,"byte_end":100146,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ contain invalid and ill-formed UTF-16 or UTF-32 data. These strings are intended to be used","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100147,"byte_end":100242,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ with FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100243,"byte_end":100341,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100342,"byte_end":100441,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100442,"byte_end":100445,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `UCString` should be used instead if nul-aware strings are required.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100446,"byte_end":100518,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100519,"byte_end":100522,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `UString` can be converted to and from many other standard Rust string types, including","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100523,"byte_end":100614,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100615,"byte_end":100684,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100685,"byte_end":100688,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16String` or `U32String` or `WideString` to using this","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100689,"byte_end":100786,"line_start":37,"line_end":37,"column_start":1,"column_end":98}},{"value":"/ type directly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100787,"byte_end":100805,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100806,"byte_end":100809,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100810,"byte_end":100824,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100825,"byte_end":100828,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16String` and shows how to convert a `U16String` to a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100829,"byte_end":100923,"line_start":42,"line_end":42,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100924,"byte_end":100950,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100951,"byte_end":100954,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100955,"byte_end":100966,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100967,"byte_end":100997,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":100998,"byte_end":101017,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101018,"byte_end":101066,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101067,"byte_end":101105,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101106,"byte_end":101142,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101143,"byte_end":101185,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101186,"byte_end":101219,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101220,"byte_end":101227,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101228,"byte_end":101231,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The same example using `U32String` instead:","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101232,"byte_end":101279,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101280,"byte_end":101283,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101284,"byte_end":101295,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101296,"byte_end":101326,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101327,"byte_end":101346,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101347,"byte_end":101395,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101396,"byte_end":101434,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101435,"byte_end":101471,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101472,"byte_end":101514,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101515,"byte_end":101548,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101549,"byte_end":101556,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101773,"byte_end":101776,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<UString<C>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new empty `UString`.\n","sig":null,"attributes":[{"value":"/ Constructs a new empty `UString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101724,"byte_end":101761,"line_start":72,"line_end":72,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102651,"byte_end":102659,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<UString<C>>::from_vec","value":"pub fn from_vec<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UString` from a vector of possibly invalid or ill-formed UTF-16 or UTF-32\n data.","sig":null,"attributes":[{"value":"/ Constructs a `UString` from a vector of possibly invalid or ill-formed UTF-16 or UTF-32","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101835,"byte_end":101926,"line_start":77,"line_end":77,"column_start":5,"column_end":96}},{"value":"/ data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101931,"byte_end":101940,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101945,"byte_end":101948,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ No checks are made on the contents of the vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101953,"byte_end":102006,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102011,"byte_end":102014,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102019,"byte_end":102033,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102038,"byte_end":102041,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102046,"byte_end":102057,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102062,"byte_end":102092,"line_start":85,"line_end":85,"column_start":5,"column_end":35}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102097,"byte_end":102152,"line_start":86,"line_end":86,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102157,"byte_end":102186,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102191,"byte_end":102234,"line_start":88,"line_end":88,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_vec(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102239,"byte_end":102277,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102282,"byte_end":102324,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102329,"byte_end":102336,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102341,"byte_end":102344,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102349,"byte_end":102360,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102365,"byte_end":102395,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102400,"byte_end":102455,"line_start":95,"line_end":95,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102460,"byte_end":102489,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102494,"byte_end":102537,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_vec(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102542,"byte_end":102580,"line_start":98,"line_end":98,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102585,"byte_end":102627,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102632,"byte_end":102639,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103157,"byte_end":103165,"line_start":117,"line_end":117,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UString<C>>::from_ptr","value":"pub unsafe fn from_ptr(*const C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UString` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UString` from a pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102740,"byte_end":102795,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102800,"byte_end":102803,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102808,"byte_end":102886,"line_start":107,"line_end":107,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102891,"byte_end":102894,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102899,"byte_end":102911,"line_start":109,"line_end":109,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102916,"byte_end":102919,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":102924,"byte_end":103018,"line_start":111,"line_end":111,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103023,"byte_end":103036,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103041,"byte_end":103044,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103049,"byte_end":103061,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103066,"byte_end":103069,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103074,"byte_end":103138,"line_start":116,"line_end":116,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103631,"byte_end":103644,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<UString<C>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UString` with the given capacity.","sig":null,"attributes":[{"value":"/ Creates a `UString` with the given capacity.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103388,"byte_end":103436,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103441,"byte_end":103444,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The string will be able to hold exactly `capacity` partial code units without reallocating.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103449,"byte_end":103544,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/ If `capacity` is set to 0, the string will not initially allocate.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103549,"byte_end":103619,"line_start":129,"line_end":129,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103839,"byte_end":103847,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"capacity","qualname":"<UString<C>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity this `UString` can hold without reallocating.\n","sig":null,"attributes":[{"value":"/ Returns the capacity this `UString` can hold without reallocating.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103757,"byte_end":103827,"line_start":136,"line_end":136,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103961,"byte_end":103966,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"clear","qualname":"<UString<C>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Truncate the `UString` to zero length.\n","sig":null,"attributes":[{"value":"/ Truncate the `UString` to zero length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":103907,"byte_end":103949,"line_start":141,"line_end":141,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104216,"byte_end":104223,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"reserve","qualname":"<UString<C>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the capacity for at least `additional` more capacity to be inserted in the given\n `UString`.","sig":null,"attributes":[{"value":"/ Reserves the capacity for at least `additional` more capacity to be inserted in the given","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104018,"byte_end":104111,"line_start":146,"line_end":146,"column_start":5,"column_end":98}},{"value":"/ `UString`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104116,"byte_end":104130,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104135,"byte_end":104138,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ More space may be reserved to avoid frequent allocations.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104143,"byte_end":104204,"line_start":149,"line_end":149,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104694,"byte_end":104707,"line_start":159,"line_end":159,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<UString<C>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the\n given `UString`. Does nothing if the capcity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104306,"byte_end":104400,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ given `UString`. Does nothing if the capcity is already sufficient.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104405,"byte_end":104476,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104481,"byte_end":104484,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give more space than is requested. Therefore capacity can not","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104489,"byte_end":104582,"line_start":157,"line_end":157,"column_start":5,"column_end":98}},{"value":"/ be relied upon to be precisely minimal. Prefer `reserve` if future insertions are expected.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104587,"byte_end":104682,"line_start":158,"line_end":158,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104887,"byte_end":104895,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<UString<C>>::into_vec","value":"pub fn into_vec(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec`, consuming the string in the process.\n","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec`, consuming the string in the process.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104796,"byte_end":104875,"line_start":163,"line_end":163,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104991,"byte_end":104998,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"as_ustr","qualname":"<UString<C>>::as_ustr","value":"pub fn as_ustr(&Self) -> &UStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a `UStr` reference.\n","sig":null,"attributes":[{"value":"/ Converts to a `UStr` reference.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":104944,"byte_end":104979,"line_start":168,"line_end":168,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106014,"byte_end":106018,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"push","qualname":"<UString<C>>::push","value":"pub fn push<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(&mut Self,\n                                                 impl AsRef<UStr<C>>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the wide string with the given `&UStr`.","sig":null,"attributes":[{"value":"/ Extends the wide string with the given `&UStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105044,"byte_end":105095,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105100,"byte_end":105103,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105108,"byte_end":105198,"line_start":175,"line_end":175,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105203,"byte_end":105277,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105282,"byte_end":105285,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105290,"byte_end":105304,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105309,"byte_end":105312,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105317,"byte_end":105328,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105333,"byte_end":105363,"line_start":181,"line_end":181,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105368,"byte_end":105391,"line_start":182,"line_end":182,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105396,"byte_end":105438,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105443,"byte_end":105473,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105478,"byte_end":105539,"line_start":185,"line_end":185,"column_start":5,"column_end":66}},{"value":"/ wstr.push(cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105544,"byte_end":105566,"line_start":186,"line_end":186,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105571,"byte_end":105574,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105579,"byte_end":105641,"line_start":188,"line_end":188,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105646,"byte_end":105653,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105658,"byte_end":105661,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105666,"byte_end":105677,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105682,"byte_end":105712,"line_start":192,"line_end":192,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105717,"byte_end":105740,"line_start":193,"line_end":193,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105745,"byte_end":105787,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105792,"byte_end":105822,"line_start":195,"line_end":195,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105827,"byte_end":105888,"line_start":196,"line_end":196,"column_start":5,"column_end":66}},{"value":"/ wstr.push(cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105893,"byte_end":105915,"line_start":197,"line_end":197,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105920,"byte_end":105923,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105928,"byte_end":105990,"line_start":199,"line_end":199,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":105995,"byte_end":106002,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107103,"byte_end":107113,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"push_slice","qualname":"<UString<C>>::push_slice","value":"pub fn push_slice<impl AsRef<[C]>: AsRef<[C]>>(&mut Self, impl AsRef<[C]>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the wide string with the given slice.","sig":null,"attributes":[{"value":"/ Extends the wide string with the given slice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106123,"byte_end":106172,"line_start":205,"line_end":205,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106177,"byte_end":106180,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106185,"byte_end":106275,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106280,"byte_end":106354,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106359,"byte_end":106362,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106367,"byte_end":106381,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106386,"byte_end":106389,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106394,"byte_end":106405,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106410,"byte_end":106440,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106445,"byte_end":106468,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106473,"byte_end":106515,"line_start":215,"line_end":215,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106520,"byte_end":106550,"line_start":216,"line_end":216,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106555,"byte_end":106616,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/ wstr.push_slice(cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106621,"byte_end":106649,"line_start":218,"line_end":218,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106654,"byte_end":106657,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106662,"byte_end":106724,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106729,"byte_end":106736,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106741,"byte_end":106744,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106749,"byte_end":106760,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106765,"byte_end":106795,"line_start":224,"line_end":224,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106800,"byte_end":106823,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106828,"byte_end":106870,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106875,"byte_end":106905,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106910,"byte_end":106971,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ wstr.push_slice(cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":106976,"byte_end":107004,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107009,"byte_end":107012,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107017,"byte_end":107079,"line_start":231,"line_end":231,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107084,"byte_end":107091,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107847,"byte_end":107860,"line_start":264,"line_end":264,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<UString<C>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the `UString` to match its length.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the `UString` to match its length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107208,"byte_end":107270,"line_start":237,"line_end":237,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107275,"byte_end":107278,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107283,"byte_end":107297,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107302,"byte_end":107305,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107310,"byte_end":107321,"line_start":241,"line_end":241,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107326,"byte_end":107356,"line_start":242,"line_end":242,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107361,"byte_end":107364,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let mut s = U16String::from_str(\"foo\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107369,"byte_end":107412,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107417,"byte_end":107420,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ s.reserve(100);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107425,"byte_end":107444,"line_start":246,"line_end":246,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107449,"byte_end":107482,"line_start":247,"line_end":247,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107487,"byte_end":107490,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107495,"byte_end":107517,"line_start":249,"line_end":249,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(3, s.capacity());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107522,"byte_end":107554,"line_start":250,"line_end":250,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107559,"byte_end":107566,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107571,"byte_end":107574,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107579,"byte_end":107590,"line_start":253,"line_end":253,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107595,"byte_end":107625,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107630,"byte_end":107633,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut s = U32String::from_str(\"foo\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107638,"byte_end":107681,"line_start":256,"line_end":256,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107686,"byte_end":107689,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ s.reserve(100);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107694,"byte_end":107713,"line_start":258,"line_end":258,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107718,"byte_end":107751,"line_start":259,"line_end":259,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107756,"byte_end":107759,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107764,"byte_end":107786,"line_start":261,"line_end":261,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(3, s.capacity());","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107791,"byte_end":107823,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107828,"byte_end":107835,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108386,"byte_end":108401,"line_start":287,"line_end":287,"column_start":12,"column_end":27},"name":"into_boxed_ustr","qualname":"<UString<C>>::into_boxed_ustr","value":"pub fn into_boxed_ustr(Self) -> Box<UStr<C>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `UString` into a boxed `UStr`.","sig":null,"attributes":[{"value":"/ Converts this `UString` into a boxed `UStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107921,"byte_end":107969,"line_start":268,"line_end":268,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107974,"byte_end":107977,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":107982,"byte_end":107996,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108001,"byte_end":108004,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108009,"byte_end":108016,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U16String, U16Str};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108021,"byte_end":108061,"line_start":273,"line_end":273,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108066,"byte_end":108069,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let s = U16String::from_str(\"hello\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108074,"byte_end":108115,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108120,"byte_end":108123,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let b: Box<U16Str> = s.into_boxed_ustr();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108128,"byte_end":108173,"line_start":277,"line_end":277,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108178,"byte_end":108185,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108190,"byte_end":108193,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108198,"byte_end":108205,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U32String, U32Str};","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108210,"byte_end":108250,"line_start":281,"line_end":281,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108255,"byte_end":108258,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let s = U32String::from_str(\"hello\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108263,"byte_end":108304,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108309,"byte_end":108312,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let b: Box<U32Str> = s.into_boxed_ustr();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108317,"byte_end":108362,"line_start":285,"line_end":285,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108367,"byte_end":108374,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109112,"byte_end":109120,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UString<u16>>::from_str","value":"pub fn from_str<S: AsRef<str> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U16String` copy from a `str`.","sig":null,"attributes":[{"value":"/ Encodes a `U16String` copy from a `str`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108575,"byte_end":108619,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108624,"byte_end":108627,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `str`. Since `str` will always be valid UTF-8, the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108632,"byte_end":108723,"line_start":296,"line_end":296,"column_start":5,"column_end":96}},{"value":"/ resulting `U16String` will also be valid UTF-16.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108728,"byte_end":108780,"line_start":297,"line_end":297,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108785,"byte_end":108788,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108793,"byte_end":108807,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108812,"byte_end":108815,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108820,"byte_end":108831,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108836,"byte_end":108866,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108871,"byte_end":108894,"line_start":303,"line_end":303,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108899,"byte_end":108942,"line_start":304,"line_end":304,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108947,"byte_end":108985,"line_start":305,"line_end":305,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108990,"byte_end":108993,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108998,"byte_end":109043,"line_start":307,"line_end":307,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109048,"byte_end":109055,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109060,"byte_end":109100,"line_start":309,"line_end":309,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109821,"byte_end":109832,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UString<u16>>::from_os_str","value":"pub fn from_os_str<S: AsRef<std::ffi::OsStr> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U16String` copy from an `OsStr`.","sig":null,"attributes":[{"value":"/ Encodes a `U16String` copy from an `OsStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109254,"byte_end":109301,"line_start":316,"line_end":316,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109306,"byte_end":109309,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `OsStr`. Since `OsStr` makes no guarantees that it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109314,"byte_end":109408,"line_start":318,"line_end":318,"column_start":5,"column_end":99}},{"value":"/ valid data, there is no guarantee that the resulting `U16String` will be valid UTF-16.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109413,"byte_end":109503,"line_start":319,"line_end":319,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109508,"byte_end":109511,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109516,"byte_end":109530,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109535,"byte_end":109538,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109543,"byte_end":109554,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109559,"byte_end":109589,"line_start":324,"line_end":324,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109594,"byte_end":109617,"line_start":325,"line_end":325,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109622,"byte_end":109665,"line_start":326,"line_end":326,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_os_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109670,"byte_end":109711,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109716,"byte_end":109719,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109724,"byte_end":109769,"line_start":329,"line_end":329,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109774,"byte_end":109781,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109786,"byte_end":109809,"line_start":331,"line_end":331,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110564,"byte_end":110572,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"push_str","qualname":"<UString<u16>>::push_str","value":"pub fn push_str<impl AsRef<str>: AsRef<str>>(&mut Self, impl AsRef<str>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&str`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&str`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":109982,"byte_end":110027,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110032,"byte_end":110035,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110040,"byte_end":110130,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110135,"byte_end":110209,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110214,"byte_end":110217,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110222,"byte_end":110236,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110241,"byte_end":110244,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110249,"byte_end":110260,"line_start":345,"line_end":345,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110265,"byte_end":110295,"line_start":346,"line_end":346,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110300,"byte_end":110323,"line_start":347,"line_end":347,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110328,"byte_end":110370,"line_start":348,"line_end":348,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110375,"byte_end":110439,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/ wstr.push_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110444,"byte_end":110465,"line_start":350,"line_end":350,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110470,"byte_end":110473,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110478,"byte_end":110540,"line_start":352,"line_end":352,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110545,"byte_end":110552,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111285,"byte_end":111296,"line_start":375,"line_end":375,"column_start":12,"column_end":23},"name":"push_os_str","qualname":"<UString<u16>>::push_os_str","value":"pub fn push_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(&mut Self,\n                                                                        impl AsRef<std::ffi::OsStr>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&OsStr`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&OsStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110670,"byte_end":110717,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110722,"byte_end":110725,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110730,"byte_end":110820,"line_start":360,"line_end":360,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110825,"byte_end":110899,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110904,"byte_end":110907,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110912,"byte_end":110926,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110931,"byte_end":110934,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110939,"byte_end":110950,"line_start":365,"line_end":365,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110955,"byte_end":110985,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":110990,"byte_end":111013,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111018,"byte_end":111060,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111065,"byte_end":111129,"line_start":369,"line_end":369,"column_start":5,"column_end":69}},{"value":"/ wstr.push_os_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111134,"byte_end":111158,"line_start":370,"line_end":370,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111163,"byte_end":111166,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111171,"byte_end":111233,"line_start":372,"line_end":372,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111238,"byte_end":111245,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111250,"byte_end":111273,"line_start":374,"line_end":374,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111941,"byte_end":111951,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UString<u32>>::from_chars","value":"pub fn from_chars<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32String` from a vector of UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `U32String` from a vector of UTF-32 data.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111442,"byte_end":111500,"line_start":381,"line_end":381,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111505,"byte_end":111508,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ No checks are made on the contents of the vector.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111513,"byte_end":111566,"line_start":383,"line_end":383,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111571,"byte_end":111574,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111579,"byte_end":111593,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111598,"byte_end":111601,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111606,"byte_end":111617,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111622,"byte_end":111652,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111657,"byte_end":111705,"line_start":389,"line_end":389,"column_start":5,"column_end":53}},{"value":"/ # let cloned: Vec<u32> = v.iter().map(|&c| c as u32).collect();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111710,"byte_end":111777,"line_start":390,"line_end":390,"column_start":5,"column_end":72}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111782,"byte_end":111825,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_chars(v);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111830,"byte_end":111870,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111875,"byte_end":111917,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111922,"byte_end":111929,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112878,"byte_end":112886,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UString<u32>>::from_str","value":"pub fn from_str<S: AsRef<str> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U32String` copy from a `str`.","sig":null,"attributes":[{"value":"/ Encodes a `U32String` copy from a `str`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112341,"byte_end":112385,"line_start":408,"line_end":408,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112390,"byte_end":112393,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `str`. Since `str` will always be valid UTF-8, the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112398,"byte_end":112489,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/ resulting `U32String` will also be valid UTF-32.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112494,"byte_end":112546,"line_start":411,"line_end":411,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112551,"byte_end":112554,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112559,"byte_end":112573,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112578,"byte_end":112581,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112586,"byte_end":112597,"line_start":415,"line_end":415,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112602,"byte_end":112632,"line_start":416,"line_end":416,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112637,"byte_end":112660,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112665,"byte_end":112708,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112713,"byte_end":112751,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112756,"byte_end":112759,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112764,"byte_end":112809,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112814,"byte_end":112821,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":112826,"byte_end":112866,"line_start":423,"line_end":423,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113594,"byte_end":113605,"line_start":445,"line_end":445,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UString<u32>>::from_os_str","value":"pub fn from_os_str<S: AsRef<std::ffi::OsStr> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U32String` copy from an `OsStr`.","sig":null,"attributes":[{"value":"/ Encodes a `U32String` copy from an `OsStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113027,"byte_end":113074,"line_start":429,"line_end":429,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113079,"byte_end":113082,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `OsStr`. Since `OsStr` makes no guarantees that it is","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113087,"byte_end":113181,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ valid data, there is no guarantee that the resulting `U32String` will be valid UTF-32.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113186,"byte_end":113276,"line_start":432,"line_end":432,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113281,"byte_end":113284,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113289,"byte_end":113303,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113308,"byte_end":113311,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113316,"byte_end":113327,"line_start":436,"line_end":436,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113332,"byte_end":113362,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113367,"byte_end":113390,"line_start":438,"line_end":438,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113395,"byte_end":113438,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_os_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113443,"byte_end":113484,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113489,"byte_end":113492,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113497,"byte_end":113542,"line_start":442,"line_end":442,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113547,"byte_end":113554,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113559,"byte_end":113582,"line_start":444,"line_end":444,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114209,"byte_end":114222,"line_start":462,"line_end":462,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UString<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32String` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32String` from a `char` pointer and a length.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113776,"byte_end":113840,"line_start":450,"line_end":450,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113845,"byte_end":113848,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113853,"byte_end":113938,"line_start":452,"line_end":452,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113943,"byte_end":113946,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113951,"byte_end":113963,"line_start":454,"line_end":454,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113968,"byte_end":113971,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":113976,"byte_end":114070,"line_start":456,"line_end":456,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114075,"byte_end":114088,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114093,"byte_end":114096,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114101,"byte_end":114113,"line_start":459,"line_end":459,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114118,"byte_end":114121,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114126,"byte_end":114190,"line_start":461,"line_end":461,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114902,"byte_end":114910,"line_start":482,"line_end":482,"column_start":12,"column_end":20},"name":"push_str","qualname":"<UString<u32>>::push_str","value":"pub fn push_str<impl AsRef<str>: AsRef<str>>(&mut Self, impl AsRef<str>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&str`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&str`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114320,"byte_end":114365,"line_start":466,"line_end":466,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114370,"byte_end":114373,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114378,"byte_end":114468,"line_start":468,"line_end":468,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114473,"byte_end":114547,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114552,"byte_end":114555,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114560,"byte_end":114574,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114579,"byte_end":114582,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114587,"byte_end":114598,"line_start":473,"line_end":473,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114603,"byte_end":114633,"line_start":474,"line_end":474,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114638,"byte_end":114661,"line_start":475,"line_end":475,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114666,"byte_end":114708,"line_start":476,"line_end":476,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114713,"byte_end":114777,"line_start":477,"line_end":477,"column_start":5,"column_end":69}},{"value":"/ wstr.push_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114782,"byte_end":114803,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114808,"byte_end":114811,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114816,"byte_end":114878,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":114883,"byte_end":114890,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115634,"byte_end":115645,"line_start":503,"line_end":503,"column_start":12,"column_end":23},"name":"push_os_str","qualname":"<UString<u32>>::push_os_str","value":"pub fn push_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(&mut Self,\n                                                                        impl AsRef<std::ffi::OsStr>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&OsStr`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&OsStr`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115019,"byte_end":115066,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115071,"byte_end":115074,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115079,"byte_end":115169,"line_start":488,"line_end":488,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115174,"byte_end":115248,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115253,"byte_end":115256,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115261,"byte_end":115275,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115280,"byte_end":115283,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115288,"byte_end":115299,"line_start":493,"line_end":493,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115304,"byte_end":115334,"line_start":494,"line_end":494,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115339,"byte_end":115362,"line_start":495,"line_end":495,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115367,"byte_end":115409,"line_start":496,"line_end":496,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115414,"byte_end":115478,"line_start":497,"line_end":497,"column_start":5,"column_end":69}},{"value":"/ wstr.push_os_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115483,"byte_end":115507,"line_start":498,"line_end":498,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115512,"byte_end":115515,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115520,"byte_end":115582,"line_start":500,"line_end":500,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115587,"byte_end":115594,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115599,"byte_end":115622,"line_start":502,"line_end":502,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121668,"byte_end":121677,"line_start":754,"line_end":754,"column_start":10,"column_end":19},"name":"U16String","qualname":"::ustring::U16String","value":"UString<u16>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120535,"byte_end":120605,"line_start":728,"line_end":728,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120606,"byte_end":120609,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ `U16String` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120610,"byte_end":120703,"line_start":730,"line_end":730,"column_start":1,"column_end":94}},{"value":"/ contain invalid and ill-formed UTF-16 data. These strings are intended to be used with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120704,"byte_end":120794,"line_start":731,"line_end":731,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120795,"byte_end":120888,"line_start":732,"line_end":732,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120889,"byte_end":120988,"line_start":733,"line_end":733,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120989,"byte_end":120992,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ `WideCString` should be used instead if nul-aware strings are required.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120993,"byte_end":121068,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121069,"byte_end":121072,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ `U16String` can be converted to and from many other standard Rust string types, including","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121073,"byte_end":121166,"line_start":737,"line_end":737,"column_start":1,"column_end":94}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121167,"byte_end":121236,"line_start":738,"line_end":738,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121237,"byte_end":121240,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121241,"byte_end":121255,"line_start":740,"line_end":740,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121256,"byte_end":121259,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16String` and shows how to convert a `U16String` to a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121260,"byte_end":121354,"line_start":742,"line_end":742,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121355,"byte_end":121381,"line_start":743,"line_end":743,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121382,"byte_end":121385,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121386,"byte_end":121397,"line_start":745,"line_end":745,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121398,"byte_end":121428,"line_start":746,"line_end":746,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121429,"byte_end":121448,"line_start":747,"line_end":747,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121449,"byte_end":121497,"line_start":748,"line_end":748,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121498,"byte_end":121536,"line_start":749,"line_end":749,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121537,"byte_end":121573,"line_start":750,"line_end":750,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121574,"byte_end":121616,"line_start":751,"line_end":751,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121617,"byte_end":121650,"line_start":752,"line_end":752,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121651,"byte_end":121658,"line_start":753,"line_end":753,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":598},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122839,"byte_end":122848,"line_start":782,"line_end":782,"column_start":10,"column_end":19},"name":"U32String","qualname":"::ustring::U32String","value":"UString<u32>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable 32-bit wide string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable 32-bit wide string for FFI that is **not** nul-aware.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121695,"byte_end":121770,"line_start":756,"line_end":756,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121771,"byte_end":121774,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ `U32String` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121775,"byte_end":121868,"line_start":758,"line_end":758,"column_start":1,"column_end":94}},{"value":"/ contain invalid and ill-formed UTF-32 data. These strings are intended to be used with","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121869,"byte_end":121959,"line_start":759,"line_end":759,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":121960,"byte_end":122053,"line_start":760,"line_end":760,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122054,"byte_end":122153,"line_start":761,"line_end":761,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122154,"byte_end":122157,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ `U32CString` should be used instead if nul-aware 32-bit strings are required.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122158,"byte_end":122239,"line_start":763,"line_end":763,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122240,"byte_end":122243,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ `U32String` can be converted to and from many other standard Rust string types, including","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122244,"byte_end":122337,"line_start":765,"line_end":765,"column_start":1,"column_end":94}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122338,"byte_end":122407,"line_start":766,"line_end":766,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122408,"byte_end":122411,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122412,"byte_end":122426,"line_start":768,"line_end":768,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122427,"byte_end":122430,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U32String` and shows how to convert a `U32String` to a","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122431,"byte_end":122525,"line_start":770,"line_end":770,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122526,"byte_end":122552,"line_start":771,"line_end":771,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122553,"byte_end":122556,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122557,"byte_end":122568,"line_start":773,"line_end":773,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32String;","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122569,"byte_end":122599,"line_start":774,"line_end":774,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122600,"byte_end":122619,"line_start":775,"line_end":775,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122620,"byte_end":122668,"line_start":776,"line_end":776,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122669,"byte_end":122707,"line_start":777,"line_end":777,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122708,"byte_end":122744,"line_start":778,"line_end":778,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122745,"byte_end":122787,"line_start":779,"line_end":779,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122788,"byte_end":122821,"line_start":780,"line_end":780,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122822,"byte_end":122829,"line_start":781,"line_end":781,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":599},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122995,"byte_end":123005,"line_start":785,"line_end":785,"column_start":10,"column_end":20},"name":"WideString","qualname":"::ustring::WideString","value":"UString<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":122866,"byte_end":122985,"line_start":784,"line_end":784,"column_start":1,"column_end":120}}]},{"kind":"Trait","id":{"krate":0,"index":604},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10776,"byte_end":10781,"line_start":219,"line_end":219,"column_start":11,"column_end":16},"name":"UChar","qualname":"::UChar","value":"UChar: Debug + Sized + Copy + Ord + Eq","parent":null,"children":[{"krate":0,"index":605}],"decl_id":null,"docs":" Marker trait for primitive types used to represent UTF character data. Should not be used\n directly.\n","sig":null,"attributes":[{"value":"/ Marker trait for primitive types used to represent UTF character data. Should not be used","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10658,"byte_end":10751,"line_start":217,"line_end":217,"column_start":1,"column_end":94}},{"value":"/ directly.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10752,"byte_end":10765,"line_start":218,"line_end":218,"column_start":1,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":605},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10855,"byte_end":10858,"line_start":221,"line_end":221,"column_start":11,"column_end":14},"name":"NUL","qualname":"::UChar::NUL","value":"Self","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" NUL character value\n","sig":null,"attributes":[{"value":"/ NUL character value","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10821,"byte_end":10844,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":610},"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":11103,"byte_end":11111,"line_start":234,"line_end":234,"column_start":10,"column_end":18},"name":"WideChar","qualname":"::WideChar","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Alias for `u16` or `u32` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10965,"byte_end":10985,"line_start":232,"line_end":232,"column_start":1,"column_end":21}},{"value":"/ Alias for `u16` or `u32` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10986,"byte_end":11093,"line_start":233,"line_end":233,"column_start":1,"column_end":108}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12447,"byte_end":12462,"line_start":31,"line_end":31,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12967,"byte_end":12982,"line_start":52,"line_end":52,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13180,"byte_end":13195,"line_start":59,"line_end":59,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14126,"byte_end":14131,"line_start":83,"line_end":83,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21841,"byte_end":21846,"line_start":292,"line_end":292,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24049,"byte_end":24054,"line_start":362,"line_end":362,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33754,"byte_end":33762,"line_start":75,"line_end":75,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46054,"byte_end":46062,"line_start":402,"line_end":402,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58695,"byte_end":58703,"line_start":746,"line_end":746,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80046,"byte_end":80054,"line_start":1306,"line_end":1306,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80156,"byte_end":80159,"line_start":1312,"line_end":1312,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80297,"byte_end":80300,"line_start":1318,"line_end":1318,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80468,"byte_end":80476,"line_start":1325,"line_end":1325,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80630,"byte_end":80638,"line_start":1332,"line_end":1332,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80766,"byte_end":80773,"line_start":1338,"line_end":1338,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80913,"byte_end":80921,"line_start":1344,"line_end":1344,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":81037,"byte_end":81045,"line_start":1350,"line_end":1350,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":81221,"byte_end":81229,"line_start":1359,"line_end":1359,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":81721,"byte_end":81729,"line_start":1382,"line_end":1382,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":81867,"byte_end":81875,"line_start":1389,"line_end":1389,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82194,"byte_end":82202,"line_start":1399,"line_end":1399,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82378,"byte_end":82386,"line_start":1408,"line_end":1408,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82482,"byte_end":82487,"line_start":1414,"line_end":1414,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82633,"byte_end":82636,"line_start":1421,"line_end":1421,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82779,"byte_end":82782,"line_start":1427,"line_end":1427,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82926,"byte_end":82931,"line_start":1433,"line_end":1433,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83026,"byte_end":83034,"line_start":1439,"line_end":1439,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83128,"byte_end":83133,"line_start":1445,"line_end":1445,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83233,"byte_end":83241,"line_start":1451,"line_end":1451,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83353,"byte_end":83356,"line_start":1457,"line_end":1457,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83601,"byte_end":83609,"line_start":1464,"line_end":1464,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83741,"byte_end":83744,"line_start":1471,"line_end":1471,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83883,"byte_end":83886,"line_start":1478,"line_end":1478,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84086,"byte_end":84094,"line_start":1485,"line_end":1485,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84481,"byte_end":84489,"line_start":1498,"line_end":1498,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84596,"byte_end":84604,"line_start":1504,"line_end":1504,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84811,"byte_end":84819,"line_start":1511,"line_end":1511,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":87861,"byte_end":87875,"line_start":23,"line_end":23,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88068,"byte_end":88082,"line_start":30,"line_end":30,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89120,"byte_end":89124,"line_start":57,"line_end":57,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91592,"byte_end":91596,"line_start":134,"line_end":134,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93701,"byte_end":93705,"line_start":203,"line_end":203,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101707,"byte_end":101714,"line_start":71,"line_end":71,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108556,"byte_end":108563,"line_start":293,"line_end":293,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111423,"byte_end":111430,"line_start":380,"line_end":380,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115827,"byte_end":115834,"line_start":509,"line_end":509,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115935,"byte_end":115938,"line_start":515,"line_end":515,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116058,"byte_end":116061,"line_start":521,"line_end":521,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116177,"byte_end":116180,"line_start":527,"line_end":527,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116293,"byte_end":116296,"line_start":533,"line_end":533,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116409,"byte_end":116412,"line_start":539,"line_end":539,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116522,"byte_end":116529,"line_start":545,"line_end":545,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116628,"byte_end":116635,"line_start":551,"line_end":551,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116770,"byte_end":116777,"line_start":558,"line_end":558,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116927,"byte_end":116934,"line_start":565,"line_end":565,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117088,"byte_end":117096,"line_start":572,"line_end":572,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117234,"byte_end":117242,"line_start":579,"line_end":579,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117381,"byte_end":117388,"line_start":585,"line_end":585,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117503,"byte_end":117510,"line_start":591,"line_end":591,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117683,"byte_end":117690,"line_start":600,"line_end":600,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117837,"byte_end":117844,"line_start":609,"line_end":609,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117988,"byte_end":117995,"line_start":616,"line_end":616,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118182,"byte_end":118189,"line_start":623,"line_end":623,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118346,"byte_end":118353,"line_start":630,"line_end":630,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118550,"byte_end":118557,"line_start":637,"line_end":637,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118732,"byte_end":118739,"line_start":644,"line_end":644,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118933,"byte_end":118940,"line_start":651,"line_end":651,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119035,"byte_end":119039,"line_start":657,"line_end":657,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119181,"byte_end":119184,"line_start":664,"line_end":664,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119309,"byte_end":119312,"line_start":670,"line_end":670,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119438,"byte_end":119442,"line_start":676,"line_end":676,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119536,"byte_end":119543,"line_start":682,"line_end":682,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119636,"byte_end":119640,"line_start":688,"line_end":688,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119740,"byte_end":119747,"line_start":694,"line_end":694,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119858,"byte_end":119861,"line_start":700,"line_end":700,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120101,"byte_end":120108,"line_start":708,"line_end":708,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120231,"byte_end":120234,"line_start":714,"line_end":714,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120347,"byte_end":120350,"line_start":720,"line_end":720,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12447,"byte_end":12462,"line_start":31,"line_end":31,"column_start":16,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":12967,"byte_end":12982,"line_start":52,"line_end":52,"column_start":39,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":13180,"byte_end":13195,"line_start":59,"line_end":59,"column_start":38,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":611},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":14126,"byte_end":14131,"line_start":83,"line_end":83,"column_start":16,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":21841,"byte_end":21846,"line_start":292,"line_end":292,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstr.rs","byte_start":24049,"byte_end":24054,"line_start":362,"line_end":362,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":33754,"byte_end":33762,"line_start":75,"line_end":75,"column_start":16,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":46054,"byte_end":46062,"line_start":402,"line_end":402,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":58695,"byte_end":58703,"line_start":746,"line_end":746,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80046,"byte_end":80054,"line_start":1306,"line_end":1306,"column_start":33,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80156,"byte_end":80159,"line_start":1312,"line_end":1312,"column_start":34,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80297,"byte_end":80300,"line_start":1318,"line_end":1318,"column_start":34,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80468,"byte_end":80476,"line_start":1325,"line_end":1325,"column_start":40,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":2781},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80630,"byte_end":80638,"line_start":1332,"line_end":1332,"column_start":40,"column_end":48},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":2781},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80766,"byte_end":80773,"line_start":1338,"line_end":1338,"column_start":38,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":80913,"byte_end":80921,"line_start":1344,"line_end":1344,"column_start":65,"column_end":73},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":81037,"byte_end":81045,"line_start":1350,"line_end":1350,"column_start":37,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":81221,"byte_end":81229,"line_start":1359,"line_end":1359,"column_start":26,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":81721,"byte_end":81729,"line_start":1382,"line_end":1382,"column_start":18,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":81867,"byte_end":81875,"line_start":1389,"line_end":1389,"column_start":18,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82194,"byte_end":82202,"line_start":1399,"line_end":1399,"column_start":25,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82378,"byte_end":82386,"line_start":1408,"line_end":1408,"column_start":37,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82482,"byte_end":82487,"line_start":1414,"line_end":1414,"column_start":28,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":631},"to":{"krate":5,"index":537}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82633,"byte_end":82636,"line_start":1421,"line_end":1421,"column_start":35,"column_end":38},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82779,"byte_end":82782,"line_start":1427,"line_end":1427,"column_start":35,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":82926,"byte_end":82931,"line_start":1433,"line_end":1433,"column_start":36,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83026,"byte_end":83034,"line_start":1439,"line_end":1439,"column_start":36,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83128,"byte_end":83133,"line_start":1445,"line_end":1445,"column_start":31,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83233,"byte_end":83241,"line_start":1451,"line_end":1451,"column_start":31,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83353,"byte_end":83356,"line_start":1457,"line_end":1457,"column_start":43,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83601,"byte_end":83609,"line_start":1464,"line_end":1464,"column_start":40,"column_end":48},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83741,"byte_end":83744,"line_start":1471,"line_end":1471,"column_start":38,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":83883,"byte_end":83886,"line_start":1478,"line_end":1478,"column_start":28,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84086,"byte_end":84094,"line_start":1485,"line_end":1485,"column_start":16,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84481,"byte_end":84489,"line_start":1498,"line_end":1498,"column_start":33,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84596,"byte_end":84604,"line_start":1504,"line_end":1504,"column_start":39,"column_end":47},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ucstring.rs","byte_start":84811,"byte_end":84819,"line_start":1511,"line_end":1511,"column_start":38,"column_end":46},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":688},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":87861,"byte_end":87875,"line_start":23,"line_end":23,"column_start":29,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":88068,"byte_end":88082,"line_start":30,"line_end":30,"column_start":28,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":710},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":89120,"byte_end":89124,"line_start":57,"line_end":57,"column_start":16,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":91592,"byte_end":91596,"line_start":134,"line_end":134,"column_start":6,"column_end":10},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustr.rs","byte_start":93701,"byte_end":93705,"line_start":203,"line_end":203,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":101707,"byte_end":101714,"line_start":71,"line_end":71,"column_start":16,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":108556,"byte_end":108563,"line_start":293,"line_end":293,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":111423,"byte_end":111430,"line_start":380,"line_end":380,"column_start":6,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115827,"byte_end":115834,"line_start":509,"line_end":509,"column_start":33,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":115935,"byte_end":115938,"line_start":515,"line_end":515,"column_start":33,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116058,"byte_end":116061,"line_start":521,"line_end":521,"column_start":33,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116177,"byte_end":116180,"line_start":527,"line_end":527,"column_start":29,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116293,"byte_end":116296,"line_start":533,"line_end":533,"column_start":29,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116409,"byte_end":116412,"line_start":539,"line_end":539,"column_start":29,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116522,"byte_end":116529,"line_start":545,"line_end":545,"column_start":23,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116628,"byte_end":116635,"line_start":551,"line_end":551,"column_start":23,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116770,"byte_end":116777,"line_start":558,"line_end":558,"column_start":35,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":116927,"byte_end":116934,"line_start":565,"line_end":565,"column_start":35,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117088,"byte_end":117096,"line_start":572,"line_end":572,"column_start":39,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":1,"index":2781},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117234,"byte_end":117242,"line_start":579,"line_end":579,"column_start":39,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":1,"index":2781},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117381,"byte_end":117388,"line_start":585,"line_end":585,"column_start":64,"column_end":71},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117503,"byte_end":117510,"line_start":591,"line_end":591,"column_start":37,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117683,"byte_end":117690,"line_start":600,"line_end":600,"column_start":26,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117837,"byte_end":117844,"line_start":609,"line_end":609,"column_start":39,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":117988,"byte_end":117995,"line_start":616,"line_end":616,"column_start":40,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118182,"byte_end":118189,"line_start":623,"line_end":623,"column_start":47,"column_end":54},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118346,"byte_end":118353,"line_start":630,"line_end":630,"column_start":48,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118550,"byte_end":118557,"line_start":637,"line_end":637,"column_start":52,"column_end":59},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118732,"byte_end":118739,"line_start":644,"line_end":644,"column_start":53,"column_end":60},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":118933,"byte_end":118940,"line_start":651,"line_end":651,"column_start":36,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119035,"byte_end":119039,"line_start":657,"line_end":657,"column_start":28,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":723},"to":{"krate":5,"index":537}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119181,"byte_end":119184,"line_start":664,"line_end":664,"column_start":34,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119309,"byte_end":119312,"line_start":670,"line_end":670,"column_start":34,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119438,"byte_end":119442,"line_start":676,"line_end":676,"column_start":35,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":723},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119536,"byte_end":119543,"line_start":682,"line_end":682,"column_start":35,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119636,"byte_end":119640,"line_start":688,"line_end":688,"column_start":31,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":723},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119740,"byte_end":119747,"line_start":694,"line_end":694,"column_start":31,"column_end":38},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":119858,"byte_end":119861,"line_start":700,"line_end":700,"column_start":42,"column_end":45},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120101,"byte_end":120108,"line_start":708,"line_end":708,"column_start":39,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120231,"byte_end":120234,"line_start":714,"line_end":714,"column_start":37,"column_end":40},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/ustring.rs","byte_start":120347,"byte_end":120350,"line_start":720,"line_end":720,"column_start":28,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10783,"byte_end":10788,"line_start":219,"line_end":219,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":9343},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10791,"byte_end":10796,"line_start":219,"line_end":219,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10799,"byte_end":10803,"line_start":219,"line_end":219,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":3014},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10806,"byte_end":10809,"line_start":219,"line_end":219,"column_start":41,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2691},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/pc2/.cargo/registry/src/github.com-1ecc6299db9ec823/widestring-0.4.3/src/lib.rs","byte_start":10812,"byte_end":10814,"line_start":219,"line_end":219,"column_start":47,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2660},"to":{"krate":0,"index":604}}]}